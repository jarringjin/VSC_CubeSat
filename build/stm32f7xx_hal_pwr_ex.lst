ARM GAS  C:\msys64\tmp\ccN79Xfa.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f7xx_hal_pwr_ex.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.HAL_PWREx_EnableBkUpReg,"ax",%progbits
  20              		.align	1
  21              		.global	HAL_PWREx_EnableBkUpReg
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	HAL_PWREx_EnableBkUpReg:
  27              	.LFB141:
  28              		.file 1 "Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c"
   1:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /**
   2:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   ******************************************************************************
   3:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @file    stm32f7xx_hal_pwr_ex.c
   4:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @author  MCD Application Team
   5:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @brief   Extended PWR HAL module driver.
   6:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *          This file provides firmware functions to manage the following 
   7:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *          functionalities of PWR extension peripheral:           
   8:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *           + Peripheral Extended features functions
   9:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *         
  10:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   ******************************************************************************
  11:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @attention
  12:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *
  13:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  14:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * All rights reserved.</center></h2>
  15:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *
  16:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  17:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * the "License"; You may not use this file except in compliance with the
  18:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * License. You may obtain a copy of the License at:
  19:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *                        opensource.org/licenses/BSD-3-Clause
  20:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *
  21:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   ******************************************************************************
  22:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   */ 
  23:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
  24:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /* Includes ------------------------------------------------------------------*/
  25:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** #include "stm32f7xx_hal.h"
  26:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
  27:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /** @addtogroup STM32F7xx_HAL_Driver
  28:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @{
  29:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   */
  30:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
ARM GAS  C:\msys64\tmp\ccN79Xfa.s 			page 2


  31:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /** @defgroup PWREx PWREx
  32:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @brief PWR HAL module driver
  33:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @{
  34:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   */
  35:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
  36:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** #ifdef HAL_PWR_MODULE_ENABLED
  37:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
  38:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /* Private typedef -----------------------------------------------------------*/
  39:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /* Private define ------------------------------------------------------------*/
  40:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /** @addtogroup PWREx_Private_Constants
  41:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @{
  42:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   */    
  43:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** #define PWR_OVERDRIVE_TIMEOUT_VALUE  1000
  44:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** #define PWR_UDERDRIVE_TIMEOUT_VALUE  1000
  45:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** #define PWR_BKPREG_TIMEOUT_VALUE     1000
  46:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** #define PWR_VOSRDY_TIMEOUT_VALUE     1000
  47:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /**
  48:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @}
  49:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   */
  50:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     
  51:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /* Private macro -------------------------------------------------------------*/
  52:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /* Private variables ---------------------------------------------------------*/
  53:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /* Private function prototypes -----------------------------------------------*/
  54:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /* Private functions ---------------------------------------------------------*/
  55:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /** @defgroup PWREx_Exported_Functions PWREx Exported Functions
  56:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *  @{
  57:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   */
  58:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
  59:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /** @defgroup PWREx_Exported_Functions_Group1 Peripheral Extended features functions 
  60:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *  @brief Peripheral Extended features functions 
  61:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *
  62:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** @verbatim   
  63:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
  64:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****  ===============================================================================
  65:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****                  ##### Peripheral extended features functions #####
  66:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****  ===============================================================================
  67:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
  68:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     *** Main and Backup Regulators configuration ***
  69:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     ================================================
  70:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     [..] 
  71:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****       (+) The backup domain includes 4 Kbytes of backup SRAM accessible only from 
  72:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****           the CPU, and address in 32-bit, 16-bit or 8-bit mode. Its content is 
  73:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****           retained even in Standby or VBAT mode when the low power backup regulator
  74:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****           is enabled. It can be considered as an internal EEPROM when VBAT is 
  75:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****           always present. You can use the HAL_PWREx_EnableBkUpReg() function to 
  76:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****           enable the low power backup regulator. 
  77:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
  78:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****       (+) When the backup domain is supplied by VDD (analog switch connected to VDD) 
  79:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****           the backup SRAM is powered from VDD which replaces the VBAT power supply to 
  80:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****           save battery life.
  81:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
  82:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****       (+) The backup SRAM is not mass erased by a tamper event. It is read 
  83:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****           protected to prevent confidential data, such as cryptographic private 
  84:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****           key, from being accessed. The backup SRAM can be erased only through 
  85:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****           the Flash interface when a protection level change from level 1 to 
  86:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****           level 0 is requested. 
  87:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****       -@- Refer to the description of Read protection (RDP) in the Flash 
ARM GAS  C:\msys64\tmp\ccN79Xfa.s 			page 3


  88:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****           programming manual.
  89:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
  90:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****       (+) The main internal regulator can be configured to have a tradeoff between 
  91:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****           performance and power consumption when the device does not operate at 
  92:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****           the maximum frequency. This is done through __HAL_PWR_MAINREGULATORMODE_CONFIG() 
  93:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****           macro which configure VOS bit in PWR_CR register
  94:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****           
  95:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****         Refer to the product datasheets for more details.
  96:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
  97:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     *** FLASH Power Down configuration ****
  98:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     =======================================
  99:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     [..] 
 100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****       (+) By setting the FPDS bit in the PWR_CR register by using the 
 101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****           HAL_PWREx_EnableFlashPowerDown() function, the Flash memory also enters power 
 102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****           down mode when the device enters Stop mode. When the Flash memory 
 103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****           is in power down mode, an additional startup delay is incurred when 
 104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****           waking up from Stop mode.
 105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     *** Over-Drive and Under-Drive configuration ****
 107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     =================================================
 108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     [..]         
 109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****        (+) In Run mode: the main regulator has 2 operating modes available:
 110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****         (++) Normal mode: The CPU and core logic operate at maximum frequency at a given 
 111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****              voltage scaling (scale 1, scale 2 or scale 3)
 112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****         (++) Over-drive mode: This mode allows the CPU and the core logic to operate at a 
 113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****             higher frequency than the normal mode for a given voltage scaling (scale 1,  
 114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****             scale 2 or scale 3). This mode is enabled through HAL_PWREx_EnableOverDrive() function 
 115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****             disabled by HAL_PWREx_DisableOverDrive() function, to enter or exit from Over-drive mod
 116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****             the sequence described in Reference manual.
 117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****              
 118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****        (+) In Stop mode: the main regulator or low power regulator supplies a low power 
 119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****            voltage to the 1.2V domain, thus preserving the content of registers 
 120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****            and internal SRAM. 2 operating modes are available:
 121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****          (++) Normal mode: the 1.2V domain is preserved in nominal leakage mode. This mode is only 
 122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****               available when the main regulator or the low power regulator is used in Scale 3 or 
 123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****               low voltage mode.
 124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****          (++) Under-drive mode: the 1.2V domain is preserved in reduced leakage mode. This mode is 
 125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****               available when the main regulator or the low power regulator is in low voltage mode.
 126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** @endverbatim
 128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @{
 129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   */
 130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /**
 132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @brief Enables the Backup Regulator.
 133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @retval HAL status
 134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   */
 135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_EnableBkUpReg(void)
 136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** {
  29              		.loc 1 136 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 10B5     		push	{r4, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 4, -8
ARM GAS  C:\msys64\tmp\ccN79Xfa.s 			page 4


  37              		.cfi_offset 14, -4
 137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   uint32_t tickstart = 0;
  38              		.loc 1 137 3 view .LVU1
  39              	.LVL0:
 138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Enable Backup regulator */
 140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   PWR->CSR1 |= PWR_CSR1_BRE;
  40              		.loc 1 140 3 view .LVU2
  41              		.loc 1 140 13 is_stmt 0 view .LVU3
  42 0002 0D4B     		ldr	r3, .L8
  43 0004 5A68     		ldr	r2, [r3, #4]
  44 0006 42F40072 		orr	r2, r2, #512
  45 000a 5A60     		str	r2, [r3, #4]
 141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     
 142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Workaround for the following hardware bug: */
 143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Id 19: PWR : No STANDBY wake-up when Back-up RAM enabled (ref. Errata Sheet p23) */
 144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   PWR->CSR1 |= PWR_CSR1_EIWUP;
  46              		.loc 1 144 3 is_stmt 1 view .LVU4
  47              		.loc 1 144 13 is_stmt 0 view .LVU5
  48 000c 5A68     		ldr	r2, [r3, #4]
  49 000e 42F48072 		orr	r2, r2, #256
  50 0012 5A60     		str	r2, [r3, #4]
 145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Get tick */
 147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   tickstart = HAL_GetTick();
  51              		.loc 1 147 3 is_stmt 1 view .LVU6
  52              		.loc 1 147 15 is_stmt 0 view .LVU7
  53 0014 FFF7FEFF 		bl	HAL_GetTick
  54              	.LVL1:
  55 0018 0446     		mov	r4, r0
  56              	.LVL2:
 148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Wait till Backup regulator ready flag is set */  
 150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   while(__HAL_PWR_GET_FLAG(PWR_FLAG_BRR) == RESET)
  57              		.loc 1 150 3 is_stmt 1 view .LVU8
  58              	.L2:
  59              		.loc 1 150 8 view .LVU9
  60              		.loc 1 150 9 is_stmt 0 view .LVU10
  61 001a 074B     		ldr	r3, .L8
  62 001c 5B68     		ldr	r3, [r3, #4]
  63              		.loc 1 150 8 view .LVU11
  64 001e 13F0080F 		tst	r3, #8
  65 0022 07D1     		bne	.L7
 151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   {
 152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     if((HAL_GetTick() - tickstart ) > PWR_BKPREG_TIMEOUT_VALUE)
  66              		.loc 1 152 5 is_stmt 1 view .LVU12
  67              		.loc 1 152 9 is_stmt 0 view .LVU13
  68 0024 FFF7FEFF 		bl	HAL_GetTick
  69              	.LVL3:
  70              		.loc 1 152 23 view .LVU14
  71 0028 001B     		subs	r0, r0, r4
  72              		.loc 1 152 7 view .LVU15
  73 002a B0F57A7F 		cmp	r0, #1000
  74 002e F4D9     		bls	.L2
 153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     {
 154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****       return HAL_TIMEOUT;
  75              		.loc 1 154 14 view .LVU16
ARM GAS  C:\msys64\tmp\ccN79Xfa.s 			page 5


  76 0030 0320     		movs	r0, #3
  77 0032 00E0     		b	.L3
  78              	.L7:
 155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     } 
 156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   }
 157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   return HAL_OK;
  79              		.loc 1 157 10 view .LVU17
  80 0034 0020     		movs	r0, #0
  81              	.L3:
 158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** }
  82              		.loc 1 158 1 view .LVU18
  83 0036 10BD     		pop	{r4, pc}
  84              	.LVL4:
  85              	.L9:
  86              		.loc 1 158 1 view .LVU19
  87              		.align	2
  88              	.L8:
  89 0038 00700040 		.word	1073770496
  90              		.cfi_endproc
  91              	.LFE141:
  93              		.section	.text.HAL_PWREx_DisableBkUpReg,"ax",%progbits
  94              		.align	1
  95              		.global	HAL_PWREx_DisableBkUpReg
  96              		.syntax unified
  97              		.thumb
  98              		.thumb_func
 100              	HAL_PWREx_DisableBkUpReg:
 101              	.LFB142:
 159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /**
 161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @brief Disables the Backup Regulator.
 162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @retval HAL status
 163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   */
 164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_DisableBkUpReg(void)
 165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** {
 102              		.loc 1 165 1 is_stmt 1 view -0
 103              		.cfi_startproc
 104              		@ args = 0, pretend = 0, frame = 0
 105              		@ frame_needed = 0, uses_anonymous_args = 0
 106 0000 10B5     		push	{r4, lr}
 107              	.LCFI1:
 108              		.cfi_def_cfa_offset 8
 109              		.cfi_offset 4, -8
 110              		.cfi_offset 14, -4
 166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   uint32_t tickstart = 0;
 111              		.loc 1 166 3 view .LVU21
 112              	.LVL5:
 167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   
 168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Disable Backup regulator */
 169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   PWR->CSR1 &= (uint32_t)~((uint32_t)PWR_CSR1_BRE);
 113              		.loc 1 169 3 view .LVU22
 114              		.loc 1 169 13 is_stmt 0 view .LVU23
 115 0002 0D4B     		ldr	r3, .L17
 116 0004 5A68     		ldr	r2, [r3, #4]
 117 0006 22F40072 		bic	r2, r2, #512
 118 000a 5A60     		str	r2, [r3, #4]
 170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   
ARM GAS  C:\msys64\tmp\ccN79Xfa.s 			page 6


 171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Workaround for the following hardware bug: */
 172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Id 19: PWR : No STANDBY wake-up when Back-up RAM enabled (ref. Errata Sheet p23) */
 173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   PWR->CSR1 |= PWR_CSR1_EIWUP;
 119              		.loc 1 173 3 is_stmt 1 view .LVU24
 120              		.loc 1 173 13 is_stmt 0 view .LVU25
 121 000c 5A68     		ldr	r2, [r3, #4]
 122 000e 42F48072 		orr	r2, r2, #256
 123 0012 5A60     		str	r2, [r3, #4]
 174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Get tick */
 176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   tickstart = HAL_GetTick();
 124              		.loc 1 176 3 is_stmt 1 view .LVU26
 125              		.loc 1 176 15 is_stmt 0 view .LVU27
 126 0014 FFF7FEFF 		bl	HAL_GetTick
 127              	.LVL6:
 128 0018 0446     		mov	r4, r0
 129              	.LVL7:
 177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Wait till Backup regulator ready flag is set */  
 179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   while(__HAL_PWR_GET_FLAG(PWR_FLAG_BRR) != RESET)
 130              		.loc 1 179 3 is_stmt 1 view .LVU28
 131              	.L11:
 132              		.loc 1 179 8 view .LVU29
 133              		.loc 1 179 9 is_stmt 0 view .LVU30
 134 001a 074B     		ldr	r3, .L17
 135 001c 5B68     		ldr	r3, [r3, #4]
 136              		.loc 1 179 8 view .LVU31
 137 001e 13F0080F 		tst	r3, #8
 138 0022 07D0     		beq	.L16
 180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   {
 181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     if((HAL_GetTick() - tickstart ) > PWR_BKPREG_TIMEOUT_VALUE)
 139              		.loc 1 181 5 is_stmt 1 view .LVU32
 140              		.loc 1 181 9 is_stmt 0 view .LVU33
 141 0024 FFF7FEFF 		bl	HAL_GetTick
 142              	.LVL8:
 143              		.loc 1 181 23 view .LVU34
 144 0028 001B     		subs	r0, r0, r4
 145              		.loc 1 181 7 view .LVU35
 146 002a B0F57A7F 		cmp	r0, #1000
 147 002e F4D9     		bls	.L11
 182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     {
 183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****       return HAL_TIMEOUT;
 148              		.loc 1 183 14 view .LVU36
 149 0030 0320     		movs	r0, #3
 150 0032 00E0     		b	.L12
 151              	.L16:
 184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     } 
 185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   }
 186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   return HAL_OK;
 152              		.loc 1 186 10 view .LVU37
 153 0034 0020     		movs	r0, #0
 154              	.L12:
 187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** }
 155              		.loc 1 187 1 view .LVU38
 156 0036 10BD     		pop	{r4, pc}
 157              	.LVL9:
 158              	.L18:
ARM GAS  C:\msys64\tmp\ccN79Xfa.s 			page 7


 159              		.loc 1 187 1 view .LVU39
 160              		.align	2
 161              	.L17:
 162 0038 00700040 		.word	1073770496
 163              		.cfi_endproc
 164              	.LFE142:
 166              		.section	.text.HAL_PWREx_EnableFlashPowerDown,"ax",%progbits
 167              		.align	1
 168              		.global	HAL_PWREx_EnableFlashPowerDown
 169              		.syntax unified
 170              		.thumb
 171              		.thumb_func
 173              	HAL_PWREx_EnableFlashPowerDown:
 174              	.LFB143:
 188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /**
 190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @brief Enables the Flash Power Down in Stop mode.
 191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @retval None
 192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   */
 193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** void HAL_PWREx_EnableFlashPowerDown(void)
 194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** {
 175              		.loc 1 194 1 is_stmt 1 view -0
 176              		.cfi_startproc
 177              		@ args = 0, pretend = 0, frame = 0
 178              		@ frame_needed = 0, uses_anonymous_args = 0
 179              		@ link register save eliminated.
 195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Enable the Flash Power Down */
 196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   PWR->CR1 |= PWR_CR1_FPDS;
 180              		.loc 1 196 3 view .LVU41
 181              		.loc 1 196 12 is_stmt 0 view .LVU42
 182 0000 024A     		ldr	r2, .L20
 183 0002 1368     		ldr	r3, [r2]
 184 0004 43F40073 		orr	r3, r3, #512
 185 0008 1360     		str	r3, [r2]
 197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** }
 186              		.loc 1 197 1 view .LVU43
 187 000a 7047     		bx	lr
 188              	.L21:
 189              		.align	2
 190              	.L20:
 191 000c 00700040 		.word	1073770496
 192              		.cfi_endproc
 193              	.LFE143:
 195              		.section	.text.HAL_PWREx_DisableFlashPowerDown,"ax",%progbits
 196              		.align	1
 197              		.global	HAL_PWREx_DisableFlashPowerDown
 198              		.syntax unified
 199              		.thumb
 200              		.thumb_func
 202              	HAL_PWREx_DisableFlashPowerDown:
 203              	.LFB144:
 198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /**
 200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @brief Disables the Flash Power Down in Stop mode.
 201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @retval None
 202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   */
 203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** void HAL_PWREx_DisableFlashPowerDown(void)
ARM GAS  C:\msys64\tmp\ccN79Xfa.s 			page 8


 204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** {
 204              		.loc 1 204 1 is_stmt 1 view -0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 0, uses_anonymous_args = 0
 208              		@ link register save eliminated.
 205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Disable the Flash Power Down */
 206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   PWR->CR1 &= (uint32_t)~((uint32_t)PWR_CR1_FPDS);
 209              		.loc 1 206 3 view .LVU45
 210              		.loc 1 206 12 is_stmt 0 view .LVU46
 211 0000 024A     		ldr	r2, .L23
 212 0002 1368     		ldr	r3, [r2]
 213 0004 23F40073 		bic	r3, r3, #512
 214 0008 1360     		str	r3, [r2]
 207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** }
 215              		.loc 1 207 1 view .LVU47
 216 000a 7047     		bx	lr
 217              	.L24:
 218              		.align	2
 219              	.L23:
 220 000c 00700040 		.word	1073770496
 221              		.cfi_endproc
 222              	.LFE144:
 224              		.section	.text.HAL_PWREx_EnableMainRegulatorLowVoltage,"ax",%progbits
 225              		.align	1
 226              		.global	HAL_PWREx_EnableMainRegulatorLowVoltage
 227              		.syntax unified
 228              		.thumb
 229              		.thumb_func
 231              	HAL_PWREx_EnableMainRegulatorLowVoltage:
 232              	.LFB145:
 208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /**
 210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @brief Enables Main Regulator low voltage mode.
 211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @retval None
 212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   */
 213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** void HAL_PWREx_EnableMainRegulatorLowVoltage(void)
 214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** {
 233              		.loc 1 214 1 is_stmt 1 view -0
 234              		.cfi_startproc
 235              		@ args = 0, pretend = 0, frame = 0
 236              		@ frame_needed = 0, uses_anonymous_args = 0
 237              		@ link register save eliminated.
 215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Enable Main regulator low voltage */
 216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   PWR->CR1 |= PWR_CR1_MRUDS;
 238              		.loc 1 216 3 view .LVU49
 239              		.loc 1 216 12 is_stmt 0 view .LVU50
 240 0000 024A     		ldr	r2, .L26
 241 0002 1368     		ldr	r3, [r2]
 242 0004 43F40063 		orr	r3, r3, #2048
 243 0008 1360     		str	r3, [r2]
 217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** }
 244              		.loc 1 217 1 view .LVU51
 245 000a 7047     		bx	lr
 246              	.L27:
 247              		.align	2
 248              	.L26:
ARM GAS  C:\msys64\tmp\ccN79Xfa.s 			page 9


 249 000c 00700040 		.word	1073770496
 250              		.cfi_endproc
 251              	.LFE145:
 253              		.section	.text.HAL_PWREx_DisableMainRegulatorLowVoltage,"ax",%progbits
 254              		.align	1
 255              		.global	HAL_PWREx_DisableMainRegulatorLowVoltage
 256              		.syntax unified
 257              		.thumb
 258              		.thumb_func
 260              	HAL_PWREx_DisableMainRegulatorLowVoltage:
 261              	.LFB146:
 218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /**
 220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @brief Disables Main Regulator low voltage mode.
 221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @retval None
 222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   */
 223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** void HAL_PWREx_DisableMainRegulatorLowVoltage(void)
 224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** {  
 262              		.loc 1 224 1 is_stmt 1 view -0
 263              		.cfi_startproc
 264              		@ args = 0, pretend = 0, frame = 0
 265              		@ frame_needed = 0, uses_anonymous_args = 0
 266              		@ link register save eliminated.
 225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Disable Main regulator low voltage */
 226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   PWR->CR1 &= (uint32_t)~((uint32_t)PWR_CR1_MRUDS);
 267              		.loc 1 226 3 view .LVU53
 268              		.loc 1 226 12 is_stmt 0 view .LVU54
 269 0000 024A     		ldr	r2, .L29
 270 0002 1368     		ldr	r3, [r2]
 271 0004 23F40063 		bic	r3, r3, #2048
 272 0008 1360     		str	r3, [r2]
 227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** }
 273              		.loc 1 227 1 view .LVU55
 274 000a 7047     		bx	lr
 275              	.L30:
 276              		.align	2
 277              	.L29:
 278 000c 00700040 		.word	1073770496
 279              		.cfi_endproc
 280              	.LFE146:
 282              		.section	.text.HAL_PWREx_EnableLowRegulatorLowVoltage,"ax",%progbits
 283              		.align	1
 284              		.global	HAL_PWREx_EnableLowRegulatorLowVoltage
 285              		.syntax unified
 286              		.thumb
 287              		.thumb_func
 289              	HAL_PWREx_EnableLowRegulatorLowVoltage:
 290              	.LFB147:
 228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /**
 230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @brief Enables Low Power Regulator low voltage mode.
 231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @retval None
 232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   */
 233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** void HAL_PWREx_EnableLowRegulatorLowVoltage(void)
 234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** {
 291              		.loc 1 234 1 is_stmt 1 view -0
 292              		.cfi_startproc
ARM GAS  C:\msys64\tmp\ccN79Xfa.s 			page 10


 293              		@ args = 0, pretend = 0, frame = 0
 294              		@ frame_needed = 0, uses_anonymous_args = 0
 295              		@ link register save eliminated.
 235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Enable low power regulator */
 236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   PWR->CR1 |= PWR_CR1_LPUDS;
 296              		.loc 1 236 3 view .LVU57
 297              		.loc 1 236 12 is_stmt 0 view .LVU58
 298 0000 024A     		ldr	r2, .L32
 299 0002 1368     		ldr	r3, [r2]
 300 0004 43F48063 		orr	r3, r3, #1024
 301 0008 1360     		str	r3, [r2]
 237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** }
 302              		.loc 1 237 1 view .LVU59
 303 000a 7047     		bx	lr
 304              	.L33:
 305              		.align	2
 306              	.L32:
 307 000c 00700040 		.word	1073770496
 308              		.cfi_endproc
 309              	.LFE147:
 311              		.section	.text.HAL_PWREx_DisableLowRegulatorLowVoltage,"ax",%progbits
 312              		.align	1
 313              		.global	HAL_PWREx_DisableLowRegulatorLowVoltage
 314              		.syntax unified
 315              		.thumb
 316              		.thumb_func
 318              	HAL_PWREx_DisableLowRegulatorLowVoltage:
 319              	.LFB148:
 238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /**
 240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @brief Disables Low Power Regulator low voltage mode.
 241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @retval None
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   */
 243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** void HAL_PWREx_DisableLowRegulatorLowVoltage(void)
 244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** {
 320              		.loc 1 244 1 is_stmt 1 view -0
 321              		.cfi_startproc
 322              		@ args = 0, pretend = 0, frame = 0
 323              		@ frame_needed = 0, uses_anonymous_args = 0
 324              		@ link register save eliminated.
 245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Disable low power regulator */
 246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   PWR->CR1 &= (uint32_t)~((uint32_t)PWR_CR1_LPUDS);
 325              		.loc 1 246 3 view .LVU61
 326              		.loc 1 246 12 is_stmt 0 view .LVU62
 327 0000 024A     		ldr	r2, .L35
 328 0002 1368     		ldr	r3, [r2]
 329 0004 23F48063 		bic	r3, r3, #1024
 330 0008 1360     		str	r3, [r2]
 247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** }
 331              		.loc 1 247 1 view .LVU63
 332 000a 7047     		bx	lr
 333              	.L36:
 334              		.align	2
 335              	.L35:
 336 000c 00700040 		.word	1073770496
 337              		.cfi_endproc
 338              	.LFE148:
ARM GAS  C:\msys64\tmp\ccN79Xfa.s 			page 11


 340              		.section	.text.HAL_PWREx_EnableOverDrive,"ax",%progbits
 341              		.align	1
 342              		.global	HAL_PWREx_EnableOverDrive
 343              		.syntax unified
 344              		.thumb
 345              		.thumb_func
 347              	HAL_PWREx_EnableOverDrive:
 348              	.LFB149:
 248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /**
 250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @brief  Activates the Over-Drive mode.
 251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @note   This mode allows the CPU and the core logic to operate at a higher frequency
 252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *         than the normal mode for a given voltage scaling (scale 1, scale 2 or scale 3).   
 253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @note   It is recommended to enter or exit Over-drive mode when the application is not running 
 254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *         critical tasks and when the system clock source is either HSI or HSE. 
 255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *         During the Over-drive switch activation, no peripheral clocks should be enabled.   
 256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *         The peripheral clocks must be enabled once the Over-drive mode is activated.   
 257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @retval HAL status
 258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   */
 259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
 260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** {
 349              		.loc 1 260 1 is_stmt 1 view -0
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 8
 352              		@ frame_needed = 0, uses_anonymous_args = 0
 353 0000 10B5     		push	{r4, lr}
 354              	.LCFI2:
 355              		.cfi_def_cfa_offset 8
 356              		.cfi_offset 4, -8
 357              		.cfi_offset 14, -4
 358 0002 82B0     		sub	sp, sp, #8
 359              	.LCFI3:
 360              		.cfi_def_cfa_offset 16
 261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   uint32_t tickstart = 0;
 361              		.loc 1 261 3 view .LVU65
 362              	.LVL10:
 262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 363              		.loc 1 263 3 view .LVU66
 364              	.LBB2:
 365              		.loc 1 263 3 view .LVU67
 366              		.loc 1 263 3 view .LVU68
 367 0004 1B4B     		ldr	r3, .L48
 368 0006 1A6C     		ldr	r2, [r3, #64]
 369 0008 42F08052 		orr	r2, r2, #268435456
 370 000c 1A64     		str	r2, [r3, #64]
 371              		.loc 1 263 3 view .LVU69
 372 000e 1B6C     		ldr	r3, [r3, #64]
 373 0010 03F08053 		and	r3, r3, #268435456
 374 0014 0193     		str	r3, [sp, #4]
 375              		.loc 1 263 3 view .LVU70
 376 0016 019B     		ldr	r3, [sp, #4]
 377              	.LBE2:
 378              		.loc 1 263 3 view .LVU71
 264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   
 265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Enable the Over-drive to extend the clock frequency to 216 MHz */
 266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   __HAL_PWR_OVERDRIVE_ENABLE();
ARM GAS  C:\msys64\tmp\ccN79Xfa.s 			page 12


 379              		.loc 1 266 3 view .LVU72
 380 0018 174A     		ldr	r2, .L48+4
 381 001a 1368     		ldr	r3, [r2]
 382 001c 43F48033 		orr	r3, r3, #65536
 383 0020 1360     		str	r3, [r2]
 267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Get tick */
 269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   tickstart = HAL_GetTick();
 384              		.loc 1 269 3 view .LVU73
 385              		.loc 1 269 15 is_stmt 0 view .LVU74
 386 0022 FFF7FEFF 		bl	HAL_GetTick
 387              	.LVL11:
 388 0026 0446     		mov	r4, r0
 389              	.LVL12:
 270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 390              		.loc 1 271 3 is_stmt 1 view .LVU75
 391              	.L38:
 392              		.loc 1 271 8 view .LVU76
 393              		.loc 1 271 10 is_stmt 0 view .LVU77
 394 0028 134B     		ldr	r3, .L48+4
 395 002a 5B68     		ldr	r3, [r3, #4]
 396              		.loc 1 271 8 view .LVU78
 397 002c 13F4803F 		tst	r3, #65536
 398 0030 08D1     		bne	.L46
 272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   {
 273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 399              		.loc 1 273 5 is_stmt 1 view .LVU79
 400              		.loc 1 273 9 is_stmt 0 view .LVU80
 401 0032 FFF7FEFF 		bl	HAL_GetTick
 402              	.LVL13:
 403              		.loc 1 273 23 view .LVU81
 404 0036 001B     		subs	r0, r0, r4
 405              		.loc 1 273 7 view .LVU82
 406 0038 B0F57A7F 		cmp	r0, #1000
 407 003c F4D9     		bls	.L38
 274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     {
 275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****       return HAL_TIMEOUT;
 408              		.loc 1 275 14 view .LVU83
 409 003e 0320     		movs	r0, #3
 410              	.L39:
 276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     }
 277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   }
 278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   
 279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Enable the Over-drive switch */
 280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Get tick */
 283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   tickstart = HAL_GetTick();
 284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   {
 287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     {
 289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****       return HAL_TIMEOUT;
 290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     }
 291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   } 
ARM GAS  C:\msys64\tmp\ccN79Xfa.s 			page 13


 292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   return HAL_OK;
 293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** }
 411              		.loc 1 293 1 view .LVU84
 412 0040 02B0     		add	sp, sp, #8
 413              	.LCFI4:
 414              		.cfi_remember_state
 415              		.cfi_def_cfa_offset 8
 416              		@ sp needed
 417 0042 10BD     		pop	{r4, pc}
 418              	.LVL14:
 419              	.L46:
 420              	.LCFI5:
 421              		.cfi_restore_state
 280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 422              		.loc 1 280 3 is_stmt 1 view .LVU85
 423 0044 0C4A     		ldr	r2, .L48+4
 424 0046 1368     		ldr	r3, [r2]
 425 0048 43F40033 		orr	r3, r3, #131072
 426 004c 1360     		str	r3, [r2]
 283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 427              		.loc 1 283 3 view .LVU86
 283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 428              		.loc 1 283 15 is_stmt 0 view .LVU87
 429 004e FFF7FEFF 		bl	HAL_GetTick
 430              	.LVL15:
 431 0052 0446     		mov	r4, r0
 432              	.LVL16:
 285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   {
 433              		.loc 1 285 3 is_stmt 1 view .LVU88
 434              	.L41:
 285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   {
 435              		.loc 1 285 8 view .LVU89
 285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   {
 436              		.loc 1 285 10 is_stmt 0 view .LVU90
 437 0054 084B     		ldr	r3, .L48+4
 438 0056 5B68     		ldr	r3, [r3, #4]
 285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   {
 439              		.loc 1 285 8 view .LVU91
 440 0058 13F4003F 		tst	r3, #131072
 441 005c 07D1     		bne	.L47
 287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     {
 442              		.loc 1 287 5 is_stmt 1 view .LVU92
 287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     {
 443              		.loc 1 287 9 is_stmt 0 view .LVU93
 444 005e FFF7FEFF 		bl	HAL_GetTick
 445              	.LVL17:
 287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     {
 446              		.loc 1 287 23 view .LVU94
 447 0062 001B     		subs	r0, r0, r4
 287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     {
 448              		.loc 1 287 7 view .LVU95
 449 0064 B0F57A7F 		cmp	r0, #1000
 450 0068 F4D9     		bls	.L41
 289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     }
 451              		.loc 1 289 14 view .LVU96
 452 006a 0320     		movs	r0, #3
 453 006c E8E7     		b	.L39
ARM GAS  C:\msys64\tmp\ccN79Xfa.s 			page 14


 454              	.L47:
 292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** }
 455              		.loc 1 292 10 view .LVU97
 456 006e 0020     		movs	r0, #0
 457 0070 E6E7     		b	.L39
 458              	.L49:
 459 0072 00BF     		.align	2
 460              	.L48:
 461 0074 00380240 		.word	1073887232
 462 0078 00700040 		.word	1073770496
 463              		.cfi_endproc
 464              	.LFE149:
 466              		.section	.text.HAL_PWREx_DisableOverDrive,"ax",%progbits
 467              		.align	1
 468              		.global	HAL_PWREx_DisableOverDrive
 469              		.syntax unified
 470              		.thumb
 471              		.thumb_func
 473              	HAL_PWREx_DisableOverDrive:
 474              	.LFB150:
 294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /**
 296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @brief  Deactivates the Over-Drive mode.
 297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @note   This mode allows the CPU and the core logic to operate at a higher frequency
 298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *         than the normal mode for a given voltage scaling (scale 1, scale 2 or scale 3).    
 299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @note   It is recommended to enter or exit Over-drive mode when the application is not running 
 300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *         critical tasks and when the system clock source is either HSI or HSE. 
 301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *         During the Over-drive switch activation, no peripheral clocks should be enabled.   
 302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *         The peripheral clocks must be enabled once the Over-drive mode is activated.
 303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @retval HAL status
 304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   */
 305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_DisableOverDrive(void)
 306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** {
 475              		.loc 1 306 1 is_stmt 1 view -0
 476              		.cfi_startproc
 477              		@ args = 0, pretend = 0, frame = 8
 478              		@ frame_needed = 0, uses_anonymous_args = 0
 479 0000 10B5     		push	{r4, lr}
 480              	.LCFI6:
 481              		.cfi_def_cfa_offset 8
 482              		.cfi_offset 4, -8
 483              		.cfi_offset 14, -4
 484 0002 82B0     		sub	sp, sp, #8
 485              	.LCFI7:
 486              		.cfi_def_cfa_offset 16
 307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   uint32_t tickstart = 0;
 487              		.loc 1 307 3 view .LVU99
 488              	.LVL18:
 308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   
 309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 489              		.loc 1 309 3 view .LVU100
 490              	.LBB3:
 491              		.loc 1 309 3 view .LVU101
 492              		.loc 1 309 3 view .LVU102
 493 0004 1B4B     		ldr	r3, .L61
 494 0006 1A6C     		ldr	r2, [r3, #64]
 495 0008 42F08052 		orr	r2, r2, #268435456
ARM GAS  C:\msys64\tmp\ccN79Xfa.s 			page 15


 496 000c 1A64     		str	r2, [r3, #64]
 497              		.loc 1 309 3 view .LVU103
 498 000e 1B6C     		ldr	r3, [r3, #64]
 499 0010 03F08053 		and	r3, r3, #268435456
 500 0014 0193     		str	r3, [sp, #4]
 501              		.loc 1 309 3 view .LVU104
 502 0016 019B     		ldr	r3, [sp, #4]
 503              	.LBE3:
 504              		.loc 1 309 3 view .LVU105
 310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     
 311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Disable the Over-drive switch */
 312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   __HAL_PWR_OVERDRIVESWITCHING_DISABLE();
 505              		.loc 1 312 3 view .LVU106
 506 0018 174A     		ldr	r2, .L61+4
 507 001a 1368     		ldr	r3, [r2]
 508 001c 23F40033 		bic	r3, r3, #131072
 509 0020 1360     		str	r3, [r2]
 313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   
 314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Get tick */
 315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   tickstart = HAL_GetTick();
 510              		.loc 1 315 3 view .LVU107
 511              		.loc 1 315 15 is_stmt 0 view .LVU108
 512 0022 FFF7FEFF 		bl	HAL_GetTick
 513              	.LVL19:
 514 0026 0446     		mov	r4, r0
 515              	.LVL20:
 316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****  
 317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   while(__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 516              		.loc 1 317 3 is_stmt 1 view .LVU109
 517              	.L51:
 518              		.loc 1 317 8 view .LVU110
 519              		.loc 1 317 9 is_stmt 0 view .LVU111
 520 0028 134B     		ldr	r3, .L61+4
 521 002a 5B68     		ldr	r3, [r3, #4]
 522              		.loc 1 317 8 view .LVU112
 523 002c 13F4003F 		tst	r3, #131072
 524 0030 08D0     		beq	.L59
 318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   {
 319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 525              		.loc 1 319 5 is_stmt 1 view .LVU113
 526              		.loc 1 319 9 is_stmt 0 view .LVU114
 527 0032 FFF7FEFF 		bl	HAL_GetTick
 528              	.LVL21:
 529              		.loc 1 319 23 view .LVU115
 530 0036 001B     		subs	r0, r0, r4
 531              		.loc 1 319 7 view .LVU116
 532 0038 B0F57A7F 		cmp	r0, #1000
 533 003c F4D9     		bls	.L51
 320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     {
 321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****       return HAL_TIMEOUT;
 534              		.loc 1 321 14 view .LVU117
 535 003e 0320     		movs	r0, #3
 536              	.L52:
 322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     }
 323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   } 
 324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   
 325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Disable the Over-drive */
ARM GAS  C:\msys64\tmp\ccN79Xfa.s 			page 16


 326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   __HAL_PWR_OVERDRIVE_DISABLE();
 327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Get tick */
 329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   tickstart = HAL_GetTick();
 330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   while(__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   {
 333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     {
 335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****       return HAL_TIMEOUT;
 336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     }
 337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   }
 338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   
 339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   return HAL_OK;
 340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** }
 537              		.loc 1 340 1 view .LVU118
 538 0040 02B0     		add	sp, sp, #8
 539              	.LCFI8:
 540              		.cfi_remember_state
 541              		.cfi_def_cfa_offset 8
 542              		@ sp needed
 543 0042 10BD     		pop	{r4, pc}
 544              	.LVL22:
 545              	.L59:
 546              	.LCFI9:
 547              		.cfi_restore_state
 326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 548              		.loc 1 326 3 is_stmt 1 view .LVU119
 549 0044 0C4A     		ldr	r2, .L61+4
 550 0046 1368     		ldr	r3, [r2]
 551 0048 23F48033 		bic	r3, r3, #65536
 552 004c 1360     		str	r3, [r2]
 329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 553              		.loc 1 329 3 view .LVU120
 329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 554              		.loc 1 329 15 is_stmt 0 view .LVU121
 555 004e FFF7FEFF 		bl	HAL_GetTick
 556              	.LVL23:
 557 0052 0446     		mov	r4, r0
 558              	.LVL24:
 331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   {
 559              		.loc 1 331 3 is_stmt 1 view .LVU122
 560              	.L54:
 331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   {
 561              		.loc 1 331 8 view .LVU123
 331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   {
 562              		.loc 1 331 9 is_stmt 0 view .LVU124
 563 0054 084B     		ldr	r3, .L61+4
 564 0056 5B68     		ldr	r3, [r3, #4]
 331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   {
 565              		.loc 1 331 8 view .LVU125
 566 0058 13F4803F 		tst	r3, #65536
 567 005c 07D0     		beq	.L60
 333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     {
 568              		.loc 1 333 5 is_stmt 1 view .LVU126
 333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     {
 569              		.loc 1 333 9 is_stmt 0 view .LVU127
ARM GAS  C:\msys64\tmp\ccN79Xfa.s 			page 17


 570 005e FFF7FEFF 		bl	HAL_GetTick
 571              	.LVL25:
 333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     {
 572              		.loc 1 333 23 view .LVU128
 573 0062 001B     		subs	r0, r0, r4
 333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     {
 574              		.loc 1 333 7 view .LVU129
 575 0064 B0F57A7F 		cmp	r0, #1000
 576 0068 F4D9     		bls	.L54
 335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     }
 577              		.loc 1 335 14 view .LVU130
 578 006a 0320     		movs	r0, #3
 579 006c E8E7     		b	.L52
 580              	.L60:
 339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** }
 581              		.loc 1 339 10 view .LVU131
 582 006e 0020     		movs	r0, #0
 583 0070 E6E7     		b	.L52
 584              	.L62:
 585 0072 00BF     		.align	2
 586              	.L61:
 587 0074 00380240 		.word	1073887232
 588 0078 00700040 		.word	1073770496
 589              		.cfi_endproc
 590              	.LFE150:
 592              		.section	.text.HAL_PWREx_EnterUnderDriveSTOPMode,"ax",%progbits
 593              		.align	1
 594              		.global	HAL_PWREx_EnterUnderDriveSTOPMode
 595              		.syntax unified
 596              		.thumb
 597              		.thumb_func
 599              	HAL_PWREx_EnterUnderDriveSTOPMode:
 600              	.LVL26:
 601              	.LFB151:
 341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /**
 343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @brief  Enters in Under-Drive STOP mode.
 344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * 
 345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @note    This mode can be selected only when the Under-Drive is already active 
 346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *   
 347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @note    This mode is enabled only with STOP low power mode.
 348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *          In this mode, the 1.2V domain is preserved in reduced leakage mode. This 
 349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *          mode is only available when the main regulator or the low power regulator 
 350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *          is in low voltage mode
 351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *        
 352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @note   If the Under-drive mode was enabled, it is automatically disabled after 
 353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *         exiting Stop mode. 
 354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *         When the voltage regulator operates in Under-drive mode, an additional  
 355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *         startup delay is induced when waking up from Stop mode.
 356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *                    
 357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @note   In Stop mode, all I/O pins keep the same state as in Run mode.
 358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *   
 359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @note   When exiting Stop mode by issuing an interrupt or a wakeup event, 
 360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *         the HSI RC oscillator is selected as system clock.
 361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *           
 362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @note   When the voltage regulator operates in low power mode, an additional 
 363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *         startup delay is incurred when waking up from Stop mode. 
ARM GAS  C:\msys64\tmp\ccN79Xfa.s 			page 18


 364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *         By keeping the internal regulator ON during Stop mode, the consumption 
 365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *         is higher although the startup time is reduced.
 366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *     
 367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @param  Regulator specifies the regulator state in STOP mode.
 368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *          This parameter can be one of the following values:
 369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *            @arg PWR_MAINREGULATOR_UNDERDRIVE_ON:  Main Regulator in under-drive mode 
 370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *                 and Flash memory in power-down when the device is in Stop under-drive mode
 371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *            @arg PWR_LOWPOWERREGULATOR_UNDERDRIVE_ON:  Low Power Regulator in under-drive mode 
 372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *                and Flash memory in power-down when the device is in Stop under-drive mode
 373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @param  STOPEntry specifies if STOP mode in entered with WFI or WFE instruction.
 374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *          This parameter can be one of the following values:
 375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *            @arg PWR_SLEEPENTRY_WFI: enter STOP mode with WFI instruction
 376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *            @arg PWR_SLEEPENTRY_WFE: enter STOP mode with WFE instruction
 377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @retval None
 378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   */
 379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_EnterUnderDriveSTOPMode(uint32_t Regulator, uint8_t STOPEntry)
 380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** {
 602              		.loc 1 380 1 is_stmt 1 view -0
 603              		.cfi_startproc
 604              		@ args = 0, pretend = 0, frame = 8
 605              		@ frame_needed = 0, uses_anonymous_args = 0
 606              		.loc 1 380 1 is_stmt 0 view .LVU133
 607 0000 70B5     		push	{r4, r5, r6, lr}
 608              	.LCFI10:
 609              		.cfi_def_cfa_offset 16
 610              		.cfi_offset 4, -16
 611              		.cfi_offset 5, -12
 612              		.cfi_offset 6, -8
 613              		.cfi_offset 14, -4
 614 0002 82B0     		sub	sp, sp, #8
 615              	.LCFI11:
 616              		.cfi_def_cfa_offset 24
 617 0004 0646     		mov	r6, r0
 618 0006 0D46     		mov	r5, r1
 381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   uint32_t tempreg = 0;
 619              		.loc 1 381 3 is_stmt 1 view .LVU134
 620              	.LVL27:
 382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   uint32_t tickstart = 0;
 621              		.loc 1 382 3 view .LVU135
 383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   
 384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Check the parameters */
 385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   assert_param(IS_PWR_REGULATOR_UNDERDRIVE(Regulator));
 622              		.loc 1 385 3 view .LVU136
 386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   assert_param(IS_PWR_STOP_ENTRY(STOPEntry));
 623              		.loc 1 386 3 view .LVU137
 387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   
 388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Enable Power ctrl clock */
 389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 624              		.loc 1 389 3 view .LVU138
 625              	.LBB4:
 626              		.loc 1 389 3 view .LVU139
 627              		.loc 1 389 3 view .LVU140
 628 0008 1E4B     		ldr	r3, .L73
 629 000a 1A6C     		ldr	r2, [r3, #64]
 630 000c 42F08052 		orr	r2, r2, #268435456
 631 0010 1A64     		str	r2, [r3, #64]
 632              		.loc 1 389 3 view .LVU141
ARM GAS  C:\msys64\tmp\ccN79Xfa.s 			page 19


 633 0012 1B6C     		ldr	r3, [r3, #64]
 634 0014 03F08053 		and	r3, r3, #268435456
 635 0018 0193     		str	r3, [sp, #4]
 636              		.loc 1 389 3 view .LVU142
 637 001a 019B     		ldr	r3, [sp, #4]
 638              	.LBE4:
 639              		.loc 1 389 3 view .LVU143
 390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Enable the Under-drive Mode ---------------------------------------------*/
 391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Clear Under-drive flag */
 392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   __HAL_PWR_CLEAR_ODRUDR_FLAG();
 640              		.loc 1 392 3 view .LVU144
 641 001c 1A4B     		ldr	r3, .L73+4
 642 001e 5968     		ldr	r1, [r3, #4]
 643              	.LVL28:
 644              		.loc 1 392 3 is_stmt 0 view .LVU145
 645 0020 1A4A     		ldr	r2, .L73+8
 646 0022 0A43     		orrs	r2, r2, r1
 647 0024 5A60     		str	r2, [r3, #4]
 393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   
 394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Enable the Under-drive */ 
 395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   __HAL_PWR_UNDERDRIVE_ENABLE();
 648              		.loc 1 395 3 is_stmt 1 view .LVU146
 649 0026 1A68     		ldr	r2, [r3]
 650 0028 42F44022 		orr	r2, r2, #786432
 651 002c 1A60     		str	r2, [r3]
 396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Get tick */
 398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   tickstart = HAL_GetTick();
 652              		.loc 1 398 3 view .LVU147
 653              		.loc 1 398 15 is_stmt 0 view .LVU148
 654 002e FFF7FEFF 		bl	HAL_GetTick
 655              	.LVL29:
 656              		.loc 1 398 15 view .LVU149
 657 0032 0446     		mov	r4, r0
 658              	.LVL30:
 399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Wait for UnderDrive mode is ready */
 401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   while(__HAL_PWR_GET_FLAG(PWR_FLAG_UDRDY))
 659              		.loc 1 401 3 is_stmt 1 view .LVU150
 660              	.L64:
 661              		.loc 1 401 8 view .LVU151
 662              		.loc 1 401 9 is_stmt 0 view .LVU152
 663 0034 144B     		ldr	r3, .L73+4
 664 0036 5B68     		ldr	r3, [r3, #4]
 665 0038 03F44023 		and	r3, r3, #786432
 666              		.loc 1 401 8 view .LVU153
 667 003c B3F5402F 		cmp	r3, #786432
 668 0040 07D1     		bne	.L71
 402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   {
 403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     if((HAL_GetTick() - tickstart ) > PWR_UDERDRIVE_TIMEOUT_VALUE)
 669              		.loc 1 403 5 is_stmt 1 view .LVU154
 670              		.loc 1 403 9 is_stmt 0 view .LVU155
 671 0042 FFF7FEFF 		bl	HAL_GetTick
 672              	.LVL31:
 673              		.loc 1 403 23 view .LVU156
 674 0046 001B     		subs	r0, r0, r4
 675              		.loc 1 403 7 view .LVU157
ARM GAS  C:\msys64\tmp\ccN79Xfa.s 			page 20


 676 0048 B0F57A7F 		cmp	r0, #1000
 677 004c F2D9     		bls	.L64
 404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     {
 405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****       return HAL_TIMEOUT;
 678              		.loc 1 405 14 view .LVU158
 679 004e 0320     		movs	r0, #3
 680 0050 13E0     		b	.L65
 681              	.L71:
 406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     }
 407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   }
 408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   
 409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Select the regulator state in STOP mode ---------------------------------*/
 410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   tempreg = PWR->CR1;
 682              		.loc 1 410 3 is_stmt 1 view .LVU159
 683              		.loc 1 410 11 is_stmt 0 view .LVU160
 684 0052 0D4A     		ldr	r2, .L73+4
 685 0054 1168     		ldr	r1, [r2]
 686              	.LVL32:
 411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Clear PDDS, LPDS, MRLUDS and LPLUDS bits */
 412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   tempreg &= (uint32_t)~(PWR_CR1_PDDS | PWR_CR1_LPDS | PWR_CR1_LPUDS | PWR_CR1_MRUDS);
 687              		.loc 1 412 3 is_stmt 1 view .LVU161
 688              		.loc 1 412 11 is_stmt 0 view .LVU162
 689 0056 0E4B     		ldr	r3, .L73+12
 690 0058 0B40     		ands	r3, r3, r1
 691              	.LVL33:
 413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   
 414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Set LPDS, MRLUDS and LPLUDS bits according to PWR_Regulator value */
 415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   tempreg |= Regulator;
 692              		.loc 1 415 3 is_stmt 1 view .LVU163
 693              		.loc 1 415 11 is_stmt 0 view .LVU164
 694 005a 3343     		orrs	r3, r3, r6
 695              	.LVL34:
 416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   
 417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Store the new value */
 418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   PWR->CR1 = tempreg;
 696              		.loc 1 418 3 is_stmt 1 view .LVU165
 697              		.loc 1 418 12 is_stmt 0 view .LVU166
 698 005c 1360     		str	r3, [r2]
 419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   
 420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Set SLEEPDEEP bit of Cortex System Control Register */
 421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   SCB->SCR |= SCB_SCR_SLEEPDEEP_Msk;
 699              		.loc 1 421 3 is_stmt 1 view .LVU167
 700              		.loc 1 421 12 is_stmt 0 view .LVU168
 701 005e 0D4A     		ldr	r2, .L73+16
 702 0060 1369     		ldr	r3, [r2, #16]
 703              	.LVL35:
 704              		.loc 1 421 12 view .LVU169
 705 0062 43F00403 		orr	r3, r3, #4
 706 0066 1361     		str	r3, [r2, #16]
 707              	.LVL36:
 422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   
 423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Select STOP mode entry --------------------------------------------------*/
 424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   if(STOPEntry == PWR_SLEEPENTRY_WFI)
 708              		.loc 1 424 3 is_stmt 1 view .LVU170
 709              		.loc 1 424 5 is_stmt 0 view .LVU171
 710 0068 012D     		cmp	r5, #1
 711 006a 08D0     		beq	.L72
ARM GAS  C:\msys64\tmp\ccN79Xfa.s 			page 21


 425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   {   
 426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     /* Request Wait For Interrupt */
 427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     __WFI();
 428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   }
 429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   else
 430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   {
 431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     /* Request Wait For Event */
 432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     __WFE();
 712              		.loc 1 432 5 is_stmt 1 view .LVU172
 713              		.syntax unified
 714              	@ 432 "Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c" 1
 715 006c 20BF     		wfe
 716              	@ 0 "" 2
 717              		.thumb
 718              		.syntax unified
 719              	.L68:
 433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   }
 434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Reset SLEEPDEEP bit of Cortex System Control Register */
 435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   SCB->SCR &= (uint32_t)~((uint32_t)SCB_SCR_SLEEPDEEP_Msk);
 720              		.loc 1 435 3 view .LVU173
 721              		.loc 1 435 12 is_stmt 0 view .LVU174
 722 006e 094A     		ldr	r2, .L73+16
 723 0070 1369     		ldr	r3, [r2, #16]
 724 0072 23F00403 		bic	r3, r3, #4
 725 0076 1361     		str	r3, [r2, #16]
 436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   return HAL_OK;  
 726              		.loc 1 437 3 is_stmt 1 view .LVU175
 727              		.loc 1 437 10 is_stmt 0 view .LVU176
 728 0078 0020     		movs	r0, #0
 729              	.LVL37:
 730              	.L65:
 438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** }
 731              		.loc 1 438 1 view .LVU177
 732 007a 02B0     		add	sp, sp, #8
 733              	.LCFI12:
 734              		.cfi_remember_state
 735              		.cfi_def_cfa_offset 16
 736              		@ sp needed
 737 007c 70BD     		pop	{r4, r5, r6, pc}
 738              	.LVL38:
 739              	.L72:
 740              	.LCFI13:
 741              		.cfi_restore_state
 427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   }
 742              		.loc 1 427 5 is_stmt 1 view .LVU178
 743              		.syntax unified
 744              	@ 427 "Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c" 1
 745 007e 30BF     		wfi
 746              	@ 0 "" 2
 747              		.thumb
 748              		.syntax unified
 749 0080 F5E7     		b	.L68
 750              	.L74:
 751 0082 00BF     		.align	2
 752              	.L73:
 753 0084 00380240 		.word	1073887232
ARM GAS  C:\msys64\tmp\ccN79Xfa.s 			page 22


 754 0088 00700040 		.word	1073770496
 755 008c 00010C00 		.word	786688
 756 0090 FCF3FFFF 		.word	-3076
 757 0094 00ED00E0 		.word	-536810240
 758              		.cfi_endproc
 759              	.LFE151:
 761              		.section	.text.HAL_PWREx_GetVoltageRange,"ax",%progbits
 762              		.align	1
 763              		.global	HAL_PWREx_GetVoltageRange
 764              		.syntax unified
 765              		.thumb
 766              		.thumb_func
 768              	HAL_PWREx_GetVoltageRange:
 769              	.LFB152:
 439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /**
 441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @brief Returns Voltage Scaling Range.
 442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @retval VOS bit field (PWR_REGULATOR_VOLTAGE_SCALE1, PWR_REGULATOR_VOLTAGE_SCALE2 or 
 443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *            PWR_REGULATOR_VOLTAGE_SCALE3)PWR_REGULATOR_VOLTAGE_SCALE1
 444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   */  
 445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** uint32_t HAL_PWREx_GetVoltageRange(void)
 446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** {
 770              		.loc 1 446 1 view -0
 771              		.cfi_startproc
 772              		@ args = 0, pretend = 0, frame = 0
 773              		@ frame_needed = 0, uses_anonymous_args = 0
 774              		@ link register save eliminated.
 447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   return  (PWR->CR1 & PWR_CR1_VOS);
 775              		.loc 1 447 3 view .LVU180
 776              		.loc 1 447 15 is_stmt 0 view .LVU181
 777 0000 024B     		ldr	r3, .L76
 778 0002 1868     		ldr	r0, [r3]
 448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** }
 779              		.loc 1 448 1 view .LVU182
 780 0004 00F44040 		and	r0, r0, #49152
 781 0008 7047     		bx	lr
 782              	.L77:
 783 000a 00BF     		.align	2
 784              	.L76:
 785 000c 00700040 		.word	1073770496
 786              		.cfi_endproc
 787              	.LFE152:
 789              		.section	.text.HAL_PWREx_ControlVoltageScaling,"ax",%progbits
 790              		.align	1
 791              		.global	HAL_PWREx_ControlVoltageScaling
 792              		.syntax unified
 793              		.thumb
 794              		.thumb_func
 796              	HAL_PWREx_ControlVoltageScaling:
 797              	.LVL39:
 798              	.LFB153:
 449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /**
 451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @brief Configures the main internal regulator output voltage.
 452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @param  VoltageScaling specifies the regulator output voltage to achieve
 453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *         a tradeoff between performance and power consumption.
 454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *          This parameter can be one of the following values:
ARM GAS  C:\msys64\tmp\ccN79Xfa.s 			page 23


 455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *            @arg PWR_REGULATOR_VOLTAGE_SCALE1: Regulator voltage output range 1 mode,
 456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *                                                typical output voltage at 1.4 V,  
 457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *                                                system frequency up to 216 MHz.
 458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *            @arg PWR_REGULATOR_VOLTAGE_SCALE2: Regulator voltage output range 2 mode,
 459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *                                                typical output voltage at 1.2 V,                
 460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *                                                system frequency up to 180 MHz.
 461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *            @arg PWR_REGULATOR_VOLTAGE_SCALE3: Regulator voltage output range 2 mode,
 462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *                                                typical output voltage at 1.00 V,               
 463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *                                                system frequency up to 151 MHz.
 464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @note To update the system clock frequency(SYSCLK):
 465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *        - Set the HSI or HSE as system clock frequency using the HAL_RCC_ClockConfig().
 466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *        - Call the HAL_RCC_OscConfig() to configure the PLL.
 467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *        - Call HAL_PWREx_ConfigVoltageScaling() API to adjust the voltage scale.
 468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *        - Set the new system clock frequency using the HAL_RCC_ClockConfig().
 469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @note The scale can be modified only when the HSI or HSE clock source is selected 
 470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *        as system clock source, otherwise the API returns HAL_ERROR.  
 471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @note When the PLL is OFF, the voltage scale 3 is automatically selected and the VOS bits
 472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *       value in the PWR_CR1 register are not taken in account.
 473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @note This API forces the PLL state ON to allow the possibility to configure the voltage scale 
 474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @note The new voltage scale is active only when the PLL is ON.  
 475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @retval HAL Status
 476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   */
 477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_ControlVoltageScaling(uint32_t VoltageScaling)
 478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** {
 799              		.loc 1 478 1 is_stmt 1 view -0
 800              		.cfi_startproc
 801              		@ args = 0, pretend = 0, frame = 8
 802              		@ frame_needed = 0, uses_anonymous_args = 0
 803              		.loc 1 478 1 is_stmt 0 view .LVU184
 804 0000 30B5     		push	{r4, r5, lr}
 805              	.LCFI14:
 806              		.cfi_def_cfa_offset 12
 807              		.cfi_offset 4, -12
 808              		.cfi_offset 5, -8
 809              		.cfi_offset 14, -4
 810 0002 83B0     		sub	sp, sp, #12
 811              	.LCFI15:
 812              		.cfi_def_cfa_offset 24
 479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   uint32_t tickstart = 0;
 813              		.loc 1 479 3 is_stmt 1 view .LVU185
 814              	.LVL40:
 480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   assert_param(IS_PWR_REGULATOR_VOLTAGE(VoltageScaling));
 815              		.loc 1 481 3 view .LVU186
 482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Enable Power ctrl clock */
 484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 816              		.loc 1 484 3 view .LVU187
 817              	.LBB5:
 818              		.loc 1 484 3 view .LVU188
 819              		.loc 1 484 3 view .LVU189
 820 0004 2C4B     		ldr	r3, .L94
 821 0006 1A6C     		ldr	r2, [r3, #64]
 822 0008 42F08052 		orr	r2, r2, #268435456
 823 000c 1A64     		str	r2, [r3, #64]
 824              		.loc 1 484 3 view .LVU190
 825 000e 1A6C     		ldr	r2, [r3, #64]
ARM GAS  C:\msys64\tmp\ccN79Xfa.s 			page 24


 826 0010 02F08052 		and	r2, r2, #268435456
 827 0014 0092     		str	r2, [sp]
 828              		.loc 1 484 3 view .LVU191
 829 0016 009A     		ldr	r2, [sp]
 830              	.LBE5:
 831              		.loc 1 484 3 view .LVU192
 485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Check if the PLL is used as system clock or not */
 487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 832              		.loc 1 487 3 view .LVU193
 833              		.loc 1 487 6 is_stmt 0 view .LVU194
 834 0018 9B68     		ldr	r3, [r3, #8]
 835 001a 03F00C03 		and	r3, r3, #12
 836              		.loc 1 487 5 view .LVU195
 837 001e 082B     		cmp	r3, #8
 838 0020 46D0     		beq	.L86
 839 0022 0546     		mov	r5, r0
 488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   {
 489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     /* Disable the main PLL */
 490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     __HAL_RCC_PLL_DISABLE();
 840              		.loc 1 490 5 is_stmt 1 view .LVU196
 841 0024 244A     		ldr	r2, .L94
 842 0026 1368     		ldr	r3, [r2]
 843 0028 23F08073 		bic	r3, r3, #16777216
 844 002c 1360     		str	r3, [r2]
 491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     
 492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     /* Get Start Tick */
 493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     tickstart = HAL_GetTick();    
 845              		.loc 1 493 5 view .LVU197
 846              		.loc 1 493 17 is_stmt 0 view .LVU198
 847 002e FFF7FEFF 		bl	HAL_GetTick
 848              	.LVL41:
 849              		.loc 1 493 17 view .LVU199
 850 0032 0446     		mov	r4, r0
 851              	.LVL42:
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     /* Wait till PLL is disabled */  
 495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 852              		.loc 1 495 5 is_stmt 1 view .LVU200
 853              	.L80:
 854              		.loc 1 495 10 view .LVU201
 855              		.loc 1 495 11 is_stmt 0 view .LVU202
 856 0034 204B     		ldr	r3, .L94
 857 0036 1B68     		ldr	r3, [r3]
 858              		.loc 1 495 10 view .LVU203
 859 0038 13F0007F 		tst	r3, #33554432
 860 003c 06D0     		beq	.L91
 496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     {
 497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****       if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 861              		.loc 1 497 7 is_stmt 1 view .LVU204
 862              		.loc 1 497 11 is_stmt 0 view .LVU205
 863 003e FFF7FEFF 		bl	HAL_GetTick
 864              	.LVL43:
 865              		.loc 1 497 25 view .LVU206
 866 0042 031B     		subs	r3, r0, r4
 867              		.loc 1 497 9 view .LVU207
 868 0044 022B     		cmp	r3, #2
 869 0046 F5D9     		bls	.L80
ARM GAS  C:\msys64\tmp\ccN79Xfa.s 			page 25


 498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****       {
 499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****         return HAL_TIMEOUT;
 870              		.loc 1 499 16 view .LVU208
 871 0048 0320     		movs	r0, #3
 872 004a 32E0     		b	.L79
 873              	.L91:
 500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****       }
 501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     }
 502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     
 503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     /* Set Range */
 504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     __HAL_PWR_VOLTAGESCALING_CONFIG(VoltageScaling);
 874              		.loc 1 504 5 is_stmt 1 view .LVU209
 875              	.LBB6:
 876              		.loc 1 504 5 view .LVU210
 877              		.loc 1 504 5 view .LVU211
 878 004c 1B4A     		ldr	r2, .L94+4
 879 004e 1368     		ldr	r3, [r2]
 880 0050 23F44043 		bic	r3, r3, #49152
 881 0054 1D43     		orrs	r5, r5, r3
 882              	.LVL44:
 883              		.loc 1 504 5 is_stmt 0 view .LVU212
 884 0056 1560     		str	r5, [r2]
 885              		.loc 1 504 5 is_stmt 1 view .LVU213
 886 0058 1368     		ldr	r3, [r2]
 887 005a 03F44043 		and	r3, r3, #49152
 888 005e 0193     		str	r3, [sp, #4]
 889              		.loc 1 504 5 view .LVU214
 890 0060 019B     		ldr	r3, [sp, #4]
 891              	.LBE6:
 892              		.loc 1 504 5 view .LVU215
 505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     
 506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     /* Enable the main PLL */
 507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     __HAL_RCC_PLL_ENABLE();
 893              		.loc 1 507 5 view .LVU216
 894 0062 02F5E432 		add	r2, r2, #116736
 895 0066 1368     		ldr	r3, [r2]
 896 0068 43F08073 		orr	r3, r3, #16777216
 897 006c 1360     		str	r3, [r2]
 508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     
 509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     /* Get Start Tick */
 510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     tickstart = HAL_GetTick();
 898              		.loc 1 510 5 view .LVU217
 899              		.loc 1 510 17 is_stmt 0 view .LVU218
 900 006e FFF7FEFF 		bl	HAL_GetTick
 901              	.LVL45:
 902 0072 0446     		mov	r4, r0
 903              	.LVL46:
 511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     /* Wait till PLL is ready */  
 512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 904              		.loc 1 512 5 is_stmt 1 view .LVU219
 905              	.L82:
 906              		.loc 1 512 10 view .LVU220
 907              		.loc 1 512 11 is_stmt 0 view .LVU221
 908 0074 104B     		ldr	r3, .L94
 909 0076 1B68     		ldr	r3, [r3]
 910              		.loc 1 512 10 view .LVU222
 911 0078 13F0007F 		tst	r3, #33554432
ARM GAS  C:\msys64\tmp\ccN79Xfa.s 			page 26


 912 007c 06D1     		bne	.L92
 513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     {
 514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****       if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 913              		.loc 1 514 7 is_stmt 1 view .LVU223
 914              		.loc 1 514 11 is_stmt 0 view .LVU224
 915 007e FFF7FEFF 		bl	HAL_GetTick
 916              	.LVL47:
 917              		.loc 1 514 25 view .LVU225
 918 0082 001B     		subs	r0, r0, r4
 919              		.loc 1 514 9 view .LVU226
 920 0084 0228     		cmp	r0, #2
 921 0086 F5D9     		bls	.L82
 515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****       {
 516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****         return HAL_TIMEOUT;
 922              		.loc 1 516 16 view .LVU227
 923 0088 0320     		movs	r0, #3
 924 008a 12E0     		b	.L79
 925              	.L92:
 517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****       } 
 518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     }
 519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     
 520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     /* Get Start Tick */
 521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     tickstart = HAL_GetTick();
 926              		.loc 1 521 5 is_stmt 1 view .LVU228
 927              		.loc 1 521 17 is_stmt 0 view .LVU229
 928 008c FFF7FEFF 		bl	HAL_GetTick
 929              	.LVL48:
 930 0090 0446     		mov	r4, r0
 931              	.LVL49:
 522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     while((__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY) == RESET))
 932              		.loc 1 522 5 is_stmt 1 view .LVU230
 933              	.L84:
 934              		.loc 1 522 10 view .LVU231
 935              		.loc 1 522 12 is_stmt 0 view .LVU232
 936 0092 0A4B     		ldr	r3, .L94+4
 937 0094 5B68     		ldr	r3, [r3, #4]
 938              		.loc 1 522 10 view .LVU233
 939 0096 13F4804F 		tst	r3, #16384
 940 009a 07D1     		bne	.L93
 523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     {
 524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****       if((HAL_GetTick() - tickstart ) > PWR_VOSRDY_TIMEOUT_VALUE)
 941              		.loc 1 524 7 is_stmt 1 view .LVU234
 942              		.loc 1 524 11 is_stmt 0 view .LVU235
 943 009c FFF7FEFF 		bl	HAL_GetTick
 944              	.LVL50:
 945              		.loc 1 524 25 view .LVU236
 946 00a0 001B     		subs	r0, r0, r4
 947              		.loc 1 524 9 view .LVU237
 948 00a2 B0F57A7F 		cmp	r0, #1000
 949 00a6 F4D9     		bls	.L84
 525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****       {
 526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****         return HAL_TIMEOUT;
 950              		.loc 1 526 16 view .LVU238
 951 00a8 0320     		movs	r0, #3
 952 00aa 02E0     		b	.L79
 953              	.L93:
 527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****       } 
ARM GAS  C:\msys64\tmp\ccN79Xfa.s 			page 27


 528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     }
 529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   }
 530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   else
 531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   {
 532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     return HAL_ERROR;
 533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   }
 534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   return HAL_OK;
 954              		.loc 1 534 10 view .LVU239
 955 00ac 0020     		movs	r0, #0
 956 00ae 00E0     		b	.L79
 957              	.LVL51:
 958              	.L86:
 532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   }
 959              		.loc 1 532 12 view .LVU240
 960 00b0 0120     		movs	r0, #1
 961              	.LVL52:
 962              	.L79:
 535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** }
 963              		.loc 1 535 1 view .LVU241
 964 00b2 03B0     		add	sp, sp, #12
 965              	.LCFI16:
 966              		.cfi_def_cfa_offset 12
 967              		@ sp needed
 968 00b4 30BD     		pop	{r4, r5, pc}
 969              	.L95:
 970 00b6 00BF     		.align	2
 971              	.L94:
 972 00b8 00380240 		.word	1073887232
 973 00bc 00700040 		.word	1073770496
 974              		.cfi_endproc
 975              	.LFE153:
 977              		.text
 978              	.Letext0:
 979              		.file 2 "c:\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\machine\\_default_typ
 980              		.file 3 "c:\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\sys\\_stdint.h"
 981              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 982              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 983              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 984              		.file 7 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 985              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
ARM GAS  C:\msys64\tmp\ccN79Xfa.s 			page 28


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f7xx_hal_pwr_ex.c
C:\msys64\tmp\ccN79Xfa.s:20     .text.HAL_PWREx_EnableBkUpReg:00000000 $t
C:\msys64\tmp\ccN79Xfa.s:26     .text.HAL_PWREx_EnableBkUpReg:00000000 HAL_PWREx_EnableBkUpReg
C:\msys64\tmp\ccN79Xfa.s:89     .text.HAL_PWREx_EnableBkUpReg:00000038 $d
C:\msys64\tmp\ccN79Xfa.s:94     .text.HAL_PWREx_DisableBkUpReg:00000000 $t
C:\msys64\tmp\ccN79Xfa.s:100    .text.HAL_PWREx_DisableBkUpReg:00000000 HAL_PWREx_DisableBkUpReg
C:\msys64\tmp\ccN79Xfa.s:162    .text.HAL_PWREx_DisableBkUpReg:00000038 $d
C:\msys64\tmp\ccN79Xfa.s:167    .text.HAL_PWREx_EnableFlashPowerDown:00000000 $t
C:\msys64\tmp\ccN79Xfa.s:173    .text.HAL_PWREx_EnableFlashPowerDown:00000000 HAL_PWREx_EnableFlashPowerDown
C:\msys64\tmp\ccN79Xfa.s:191    .text.HAL_PWREx_EnableFlashPowerDown:0000000c $d
C:\msys64\tmp\ccN79Xfa.s:196    .text.HAL_PWREx_DisableFlashPowerDown:00000000 $t
C:\msys64\tmp\ccN79Xfa.s:202    .text.HAL_PWREx_DisableFlashPowerDown:00000000 HAL_PWREx_DisableFlashPowerDown
C:\msys64\tmp\ccN79Xfa.s:220    .text.HAL_PWREx_DisableFlashPowerDown:0000000c $d
C:\msys64\tmp\ccN79Xfa.s:225    .text.HAL_PWREx_EnableMainRegulatorLowVoltage:00000000 $t
C:\msys64\tmp\ccN79Xfa.s:231    .text.HAL_PWREx_EnableMainRegulatorLowVoltage:00000000 HAL_PWREx_EnableMainRegulatorLowVoltage
C:\msys64\tmp\ccN79Xfa.s:249    .text.HAL_PWREx_EnableMainRegulatorLowVoltage:0000000c $d
C:\msys64\tmp\ccN79Xfa.s:254    .text.HAL_PWREx_DisableMainRegulatorLowVoltage:00000000 $t
C:\msys64\tmp\ccN79Xfa.s:260    .text.HAL_PWREx_DisableMainRegulatorLowVoltage:00000000 HAL_PWREx_DisableMainRegulatorLowVoltage
C:\msys64\tmp\ccN79Xfa.s:278    .text.HAL_PWREx_DisableMainRegulatorLowVoltage:0000000c $d
C:\msys64\tmp\ccN79Xfa.s:283    .text.HAL_PWREx_EnableLowRegulatorLowVoltage:00000000 $t
C:\msys64\tmp\ccN79Xfa.s:289    .text.HAL_PWREx_EnableLowRegulatorLowVoltage:00000000 HAL_PWREx_EnableLowRegulatorLowVoltage
C:\msys64\tmp\ccN79Xfa.s:307    .text.HAL_PWREx_EnableLowRegulatorLowVoltage:0000000c $d
C:\msys64\tmp\ccN79Xfa.s:312    .text.HAL_PWREx_DisableLowRegulatorLowVoltage:00000000 $t
C:\msys64\tmp\ccN79Xfa.s:318    .text.HAL_PWREx_DisableLowRegulatorLowVoltage:00000000 HAL_PWREx_DisableLowRegulatorLowVoltage
C:\msys64\tmp\ccN79Xfa.s:336    .text.HAL_PWREx_DisableLowRegulatorLowVoltage:0000000c $d
C:\msys64\tmp\ccN79Xfa.s:341    .text.HAL_PWREx_EnableOverDrive:00000000 $t
C:\msys64\tmp\ccN79Xfa.s:347    .text.HAL_PWREx_EnableOverDrive:00000000 HAL_PWREx_EnableOverDrive
C:\msys64\tmp\ccN79Xfa.s:461    .text.HAL_PWREx_EnableOverDrive:00000074 $d
C:\msys64\tmp\ccN79Xfa.s:467    .text.HAL_PWREx_DisableOverDrive:00000000 $t
C:\msys64\tmp\ccN79Xfa.s:473    .text.HAL_PWREx_DisableOverDrive:00000000 HAL_PWREx_DisableOverDrive
C:\msys64\tmp\ccN79Xfa.s:587    .text.HAL_PWREx_DisableOverDrive:00000074 $d
C:\msys64\tmp\ccN79Xfa.s:593    .text.HAL_PWREx_EnterUnderDriveSTOPMode:00000000 $t
C:\msys64\tmp\ccN79Xfa.s:599    .text.HAL_PWREx_EnterUnderDriveSTOPMode:00000000 HAL_PWREx_EnterUnderDriveSTOPMode
C:\msys64\tmp\ccN79Xfa.s:753    .text.HAL_PWREx_EnterUnderDriveSTOPMode:00000084 $d
C:\msys64\tmp\ccN79Xfa.s:762    .text.HAL_PWREx_GetVoltageRange:00000000 $t
C:\msys64\tmp\ccN79Xfa.s:768    .text.HAL_PWREx_GetVoltageRange:00000000 HAL_PWREx_GetVoltageRange
C:\msys64\tmp\ccN79Xfa.s:785    .text.HAL_PWREx_GetVoltageRange:0000000c $d
C:\msys64\tmp\ccN79Xfa.s:790    .text.HAL_PWREx_ControlVoltageScaling:00000000 $t
C:\msys64\tmp\ccN79Xfa.s:796    .text.HAL_PWREx_ControlVoltageScaling:00000000 HAL_PWREx_ControlVoltageScaling
C:\msys64\tmp\ccN79Xfa.s:972    .text.HAL_PWREx_ControlVoltageScaling:000000b8 $d

UNDEFINED SYMBOLS
HAL_GetTick
