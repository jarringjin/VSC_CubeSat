ARM GAS  C:\msys64\tmp\cceJax94.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f7xx_hal_timebase_tim.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.HAL_InitTick,"ax",%progbits
  20              		.align	1
  21              		.global	HAL_InitTick
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	HAL_InitTick:
  27              	.LVL0:
  28              	.LFB141:
  29              		.file 1 "Core/Src/stm32f7xx_hal_timebase_tim.c"
   1:Core/Src/stm32f7xx_hal_timebase_tim.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f7xx_hal_timebase_tim.c **** /**
   3:Core/Src/stm32f7xx_hal_timebase_tim.c ****   ******************************************************************************
   4:Core/Src/stm32f7xx_hal_timebase_tim.c ****   * @file    stm32f7xx_hal_timebase_TIM.c
   5:Core/Src/stm32f7xx_hal_timebase_tim.c ****   * @brief   HAL time base based on the hardware TIM.
   6:Core/Src/stm32f7xx_hal_timebase_tim.c ****   ******************************************************************************
   7:Core/Src/stm32f7xx_hal_timebase_tim.c ****   * @attention
   8:Core/Src/stm32f7xx_hal_timebase_tim.c ****   *
   9:Core/Src/stm32f7xx_hal_timebase_tim.c ****   * <h2><center>&copy; Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/stm32f7xx_hal_timebase_tim.c ****   * All rights reserved.</center></h2>
  11:Core/Src/stm32f7xx_hal_timebase_tim.c ****   *
  12:Core/Src/stm32f7xx_hal_timebase_tim.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Core/Src/stm32f7xx_hal_timebase_tim.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Core/Src/stm32f7xx_hal_timebase_tim.c ****   * the License. You may obtain a copy of the License at:
  15:Core/Src/stm32f7xx_hal_timebase_tim.c ****   *                             www.st.com/SLA0044
  16:Core/Src/stm32f7xx_hal_timebase_tim.c ****   *
  17:Core/Src/stm32f7xx_hal_timebase_tim.c ****   ******************************************************************************
  18:Core/Src/stm32f7xx_hal_timebase_tim.c ****   */
  19:Core/Src/stm32f7xx_hal_timebase_tim.c **** /* USER CODE END Header */
  20:Core/Src/stm32f7xx_hal_timebase_tim.c **** 
  21:Core/Src/stm32f7xx_hal_timebase_tim.c **** /* Includes ------------------------------------------------------------------*/
  22:Core/Src/stm32f7xx_hal_timebase_tim.c **** #include "stm32f7xx_hal.h"
  23:Core/Src/stm32f7xx_hal_timebase_tim.c **** #include "stm32f7xx_hal_tim.h"
  24:Core/Src/stm32f7xx_hal_timebase_tim.c **** 
  25:Core/Src/stm32f7xx_hal_timebase_tim.c **** /* Private typedef -----------------------------------------------------------*/
  26:Core/Src/stm32f7xx_hal_timebase_tim.c **** /* Private define ------------------------------------------------------------*/
  27:Core/Src/stm32f7xx_hal_timebase_tim.c **** /* Private macro -------------------------------------------------------------*/
  28:Core/Src/stm32f7xx_hal_timebase_tim.c **** /* Private variables ---------------------------------------------------------*/
  29:Core/Src/stm32f7xx_hal_timebase_tim.c **** TIM_HandleTypeDef        htim1;
ARM GAS  C:\msys64\tmp\cceJax94.s 			page 2


  30:Core/Src/stm32f7xx_hal_timebase_tim.c **** /* Private function prototypes -----------------------------------------------*/
  31:Core/Src/stm32f7xx_hal_timebase_tim.c **** /* Private functions ---------------------------------------------------------*/
  32:Core/Src/stm32f7xx_hal_timebase_tim.c **** 
  33:Core/Src/stm32f7xx_hal_timebase_tim.c **** /**
  34:Core/Src/stm32f7xx_hal_timebase_tim.c ****   * @brief  This function configures the TIM1 as a time base source.
  35:Core/Src/stm32f7xx_hal_timebase_tim.c ****   *         The time source is configured  to have 1ms time base with a dedicated
  36:Core/Src/stm32f7xx_hal_timebase_tim.c ****   *         Tick interrupt priority.
  37:Core/Src/stm32f7xx_hal_timebase_tim.c ****   * @note   This function is called  automatically at the beginning of program after
  38:Core/Src/stm32f7xx_hal_timebase_tim.c ****   *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  39:Core/Src/stm32f7xx_hal_timebase_tim.c ****   * @param  TickPriority: Tick interrupt priority.
  40:Core/Src/stm32f7xx_hal_timebase_tim.c ****   * @retval HAL status
  41:Core/Src/stm32f7xx_hal_timebase_tim.c ****   */
  42:Core/Src/stm32f7xx_hal_timebase_tim.c **** HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
  43:Core/Src/stm32f7xx_hal_timebase_tim.c **** {
  30              		.loc 1 43 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 32
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 43 1 is_stmt 0 view .LVU1
  35 0000 00B5     		push	{lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 4
  38              		.cfi_offset 14, -4
  39 0002 89B0     		sub	sp, sp, #36
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 40
  42 0004 0146     		mov	r1, r0
  44:Core/Src/stm32f7xx_hal_timebase_tim.c ****   RCC_ClkInitTypeDef    clkconfig;
  43              		.loc 1 44 3 is_stmt 1 view .LVU2
  45:Core/Src/stm32f7xx_hal_timebase_tim.c ****   uint32_t              uwTimclock = 0;
  44              		.loc 1 45 3 view .LVU3
  45              	.LVL1:
  46:Core/Src/stm32f7xx_hal_timebase_tim.c ****   uint32_t              uwPrescalerValue = 0;
  46              		.loc 1 46 3 view .LVU4
  47:Core/Src/stm32f7xx_hal_timebase_tim.c ****   uint32_t              pFLatency;
  47              		.loc 1 47 3 view .LVU5
  48:Core/Src/stm32f7xx_hal_timebase_tim.c ****   /*Configure the TIM1 IRQ priority */
  49:Core/Src/stm32f7xx_hal_timebase_tim.c ****   HAL_NVIC_SetPriority(TIM1_UP_TIM10_IRQn, TickPriority ,0);
  48              		.loc 1 49 3 view .LVU6
  49 0006 0022     		movs	r2, #0
  50 0008 1920     		movs	r0, #25
  51              	.LVL2:
  52              		.loc 1 49 3 is_stmt 0 view .LVU7
  53 000a FFF7FEFF 		bl	HAL_NVIC_SetPriority
  54              	.LVL3:
  50:Core/Src/stm32f7xx_hal_timebase_tim.c **** 
  51:Core/Src/stm32f7xx_hal_timebase_tim.c ****   /* Enable the TIM1 global Interrupt */
  52:Core/Src/stm32f7xx_hal_timebase_tim.c ****   HAL_NVIC_EnableIRQ(TIM1_UP_TIM10_IRQn);
  55              		.loc 1 52 3 is_stmt 1 view .LVU8
  56 000e 1920     		movs	r0, #25
  57 0010 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
  58              	.LVL4:
  53:Core/Src/stm32f7xx_hal_timebase_tim.c ****   /* Enable TIM1 clock */
  54:Core/Src/stm32f7xx_hal_timebase_tim.c ****   __HAL_RCC_TIM1_CLK_ENABLE();
  59              		.loc 1 54 3 view .LVU9
  60              	.LBB2:
  61              		.loc 1 54 3 view .LVU10
ARM GAS  C:\msys64\tmp\cceJax94.s 			page 3


  62              		.loc 1 54 3 view .LVU11
  63 0014 144B     		ldr	r3, .L6
  64 0016 5A6C     		ldr	r2, [r3, #68]
  65 0018 42F00102 		orr	r2, r2, #1
  66 001c 5A64     		str	r2, [r3, #68]
  67              		.loc 1 54 3 view .LVU12
  68 001e 5B6C     		ldr	r3, [r3, #68]
  69 0020 03F00103 		and	r3, r3, #1
  70 0024 0193     		str	r3, [sp, #4]
  71              		.loc 1 54 3 view .LVU13
  72 0026 019B     		ldr	r3, [sp, #4]
  73              	.LBE2:
  74              		.loc 1 54 3 view .LVU14
  55:Core/Src/stm32f7xx_hal_timebase_tim.c **** 
  56:Core/Src/stm32f7xx_hal_timebase_tim.c ****   /* Get clock configuration */
  57:Core/Src/stm32f7xx_hal_timebase_tim.c ****   HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
  75              		.loc 1 57 3 view .LVU15
  76 0028 02A9     		add	r1, sp, #8
  77 002a 03A8     		add	r0, sp, #12
  78 002c FFF7FEFF 		bl	HAL_RCC_GetClockConfig
  79              	.LVL5:
  58:Core/Src/stm32f7xx_hal_timebase_tim.c **** 
  59:Core/Src/stm32f7xx_hal_timebase_tim.c ****   /* Compute TIM1 clock */
  60:Core/Src/stm32f7xx_hal_timebase_tim.c ****   uwTimclock = HAL_RCC_GetPCLK2Freq();
  80              		.loc 1 60 3 view .LVU16
  81              		.loc 1 60 16 is_stmt 0 view .LVU17
  82 0030 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
  83              	.LVL6:
  61:Core/Src/stm32f7xx_hal_timebase_tim.c ****   /* Compute the prescaler value to have TIM1 counter clock equal to 1MHz */
  62:Core/Src/stm32f7xx_hal_timebase_tim.c ****   uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
  84              		.loc 1 62 3 is_stmt 1 view .LVU18
  85              		.loc 1 62 46 is_stmt 0 view .LVU19
  86 0034 0D4B     		ldr	r3, .L6+4
  87 0036 A3FB0023 		umull	r2, r3, r3, r0
  88 003a 9B0C     		lsrs	r3, r3, #18
  89              		.loc 1 62 20 view .LVU20
  90 003c 013B     		subs	r3, r3, #1
  91              	.LVL7:
  63:Core/Src/stm32f7xx_hal_timebase_tim.c **** 
  64:Core/Src/stm32f7xx_hal_timebase_tim.c ****   /* Initialize TIM1 */
  65:Core/Src/stm32f7xx_hal_timebase_tim.c ****   htim1.Instance = TIM1;
  92              		.loc 1 65 3 is_stmt 1 view .LVU21
  93              		.loc 1 65 18 is_stmt 0 view .LVU22
  94 003e 0C48     		ldr	r0, .L6+8
  95              	.LVL8:
  96              		.loc 1 65 18 view .LVU23
  97 0040 0C4A     		ldr	r2, .L6+12
  98 0042 0260     		str	r2, [r0]
  66:Core/Src/stm32f7xx_hal_timebase_tim.c **** 
  67:Core/Src/stm32f7xx_hal_timebase_tim.c ****   /* Initialize TIMx peripheral as follow:
  68:Core/Src/stm32f7xx_hal_timebase_tim.c ****   + Period = [(TIM1CLK/1000) - 1]. to have a (1/1000) s time base.
  69:Core/Src/stm32f7xx_hal_timebase_tim.c ****   + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  70:Core/Src/stm32f7xx_hal_timebase_tim.c ****   + ClockDivision = 0
  71:Core/Src/stm32f7xx_hal_timebase_tim.c ****   + Counter direction = Up
  72:Core/Src/stm32f7xx_hal_timebase_tim.c ****   */
  73:Core/Src/stm32f7xx_hal_timebase_tim.c ****   htim1.Init.Period = (1000000U / 1000U) - 1U;
  99              		.loc 1 73 3 is_stmt 1 view .LVU24
ARM GAS  C:\msys64\tmp\cceJax94.s 			page 4


 100              		.loc 1 73 21 is_stmt 0 view .LVU25
 101 0044 40F2E732 		movw	r2, #999
 102 0048 C260     		str	r2, [r0, #12]
  74:Core/Src/stm32f7xx_hal_timebase_tim.c ****   htim1.Init.Prescaler = uwPrescalerValue;
 103              		.loc 1 74 3 is_stmt 1 view .LVU26
 104              		.loc 1 74 24 is_stmt 0 view .LVU27
 105 004a 4360     		str	r3, [r0, #4]
  75:Core/Src/stm32f7xx_hal_timebase_tim.c ****   htim1.Init.ClockDivision = 0;
 106              		.loc 1 75 3 is_stmt 1 view .LVU28
 107              		.loc 1 75 28 is_stmt 0 view .LVU29
 108 004c 0023     		movs	r3, #0
 109              	.LVL9:
 110              		.loc 1 75 28 view .LVU30
 111 004e 0361     		str	r3, [r0, #16]
  76:Core/Src/stm32f7xx_hal_timebase_tim.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 112              		.loc 1 76 3 is_stmt 1 view .LVU31
 113              		.loc 1 76 26 is_stmt 0 view .LVU32
 114 0050 8360     		str	r3, [r0, #8]
  77:Core/Src/stm32f7xx_hal_timebase_tim.c ****   if(HAL_TIM_Base_Init(&htim1) == HAL_OK)
 115              		.loc 1 77 3 is_stmt 1 view .LVU33
 116              		.loc 1 77 6 is_stmt 0 view .LVU34
 117 0052 FFF7FEFF 		bl	HAL_TIM_Base_Init
 118              	.LVL10:
 119              		.loc 1 77 5 view .LVU35
 120 0056 18B1     		cbz	r0, .L5
  78:Core/Src/stm32f7xx_hal_timebase_tim.c ****   {
  79:Core/Src/stm32f7xx_hal_timebase_tim.c ****     /* Start the TIM time Base generation in interrupt mode */
  80:Core/Src/stm32f7xx_hal_timebase_tim.c ****     return HAL_TIM_Base_Start_IT(&htim1);
  81:Core/Src/stm32f7xx_hal_timebase_tim.c ****   }
  82:Core/Src/stm32f7xx_hal_timebase_tim.c **** 
  83:Core/Src/stm32f7xx_hal_timebase_tim.c ****   /* Return function status */
  84:Core/Src/stm32f7xx_hal_timebase_tim.c ****   return HAL_ERROR;
 121              		.loc 1 84 10 view .LVU36
 122 0058 0120     		movs	r0, #1
 123              	.L2:
  85:Core/Src/stm32f7xx_hal_timebase_tim.c **** }
 124              		.loc 1 85 1 view .LVU37
 125 005a 09B0     		add	sp, sp, #36
 126              	.LCFI2:
 127              		.cfi_remember_state
 128              		.cfi_def_cfa_offset 4
 129              		@ sp needed
 130 005c 5DF804FB 		ldr	pc, [sp], #4
 131              	.L5:
 132              	.LCFI3:
 133              		.cfi_restore_state
  80:Core/Src/stm32f7xx_hal_timebase_tim.c ****   }
 134              		.loc 1 80 5 is_stmt 1 view .LVU38
  80:Core/Src/stm32f7xx_hal_timebase_tim.c ****   }
 135              		.loc 1 80 12 is_stmt 0 view .LVU39
 136 0060 0348     		ldr	r0, .L6+8
 137 0062 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 138              	.LVL11:
 139 0066 F8E7     		b	.L2
 140              	.L7:
 141              		.align	2
 142              	.L6:
ARM GAS  C:\msys64\tmp\cceJax94.s 			page 5


 143 0068 00380240 		.word	1073887232
 144 006c 83DE1B43 		.word	1125899907
 145 0070 00000000 		.word	.LANCHOR0
 146 0074 00000140 		.word	1073807360
 147              		.cfi_endproc
 148              	.LFE141:
 150              		.section	.text.HAL_SuspendTick,"ax",%progbits
 151              		.align	1
 152              		.global	HAL_SuspendTick
 153              		.syntax unified
 154              		.thumb
 155              		.thumb_func
 157              	HAL_SuspendTick:
 158              	.LFB142:
  86:Core/Src/stm32f7xx_hal_timebase_tim.c **** 
  87:Core/Src/stm32f7xx_hal_timebase_tim.c **** /**
  88:Core/Src/stm32f7xx_hal_timebase_tim.c ****   * @brief  Suspend Tick increment.
  89:Core/Src/stm32f7xx_hal_timebase_tim.c ****   * @note   Disable the tick increment by disabling TIM1 update interrupt.
  90:Core/Src/stm32f7xx_hal_timebase_tim.c ****   * @param  None
  91:Core/Src/stm32f7xx_hal_timebase_tim.c ****   * @retval None
  92:Core/Src/stm32f7xx_hal_timebase_tim.c ****   */
  93:Core/Src/stm32f7xx_hal_timebase_tim.c **** void HAL_SuspendTick(void)
  94:Core/Src/stm32f7xx_hal_timebase_tim.c **** {
 159              		.loc 1 94 1 is_stmt 1 view -0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 0
 162              		@ frame_needed = 0, uses_anonymous_args = 0
 163              		@ link register save eliminated.
  95:Core/Src/stm32f7xx_hal_timebase_tim.c ****   /* Disable TIM1 update Interrupt */
  96:Core/Src/stm32f7xx_hal_timebase_tim.c ****   __HAL_TIM_DISABLE_IT(&htim1, TIM_IT_UPDATE);
 164              		.loc 1 96 3 view .LVU41
 165 0000 034B     		ldr	r3, .L9
 166 0002 1A68     		ldr	r2, [r3]
 167 0004 D368     		ldr	r3, [r2, #12]
 168 0006 23F00103 		bic	r3, r3, #1
 169 000a D360     		str	r3, [r2, #12]
  97:Core/Src/stm32f7xx_hal_timebase_tim.c **** }
 170              		.loc 1 97 1 is_stmt 0 view .LVU42
 171 000c 7047     		bx	lr
 172              	.L10:
 173 000e 00BF     		.align	2
 174              	.L9:
 175 0010 00000000 		.word	.LANCHOR0
 176              		.cfi_endproc
 177              	.LFE142:
 179              		.section	.text.HAL_ResumeTick,"ax",%progbits
 180              		.align	1
 181              		.global	HAL_ResumeTick
 182              		.syntax unified
 183              		.thumb
 184              		.thumb_func
 186              	HAL_ResumeTick:
 187              	.LFB143:
  98:Core/Src/stm32f7xx_hal_timebase_tim.c **** 
  99:Core/Src/stm32f7xx_hal_timebase_tim.c **** /**
 100:Core/Src/stm32f7xx_hal_timebase_tim.c ****   * @brief  Resume Tick increment.
 101:Core/Src/stm32f7xx_hal_timebase_tim.c ****   * @note   Enable the tick increment by Enabling TIM1 update interrupt.
ARM GAS  C:\msys64\tmp\cceJax94.s 			page 6


 102:Core/Src/stm32f7xx_hal_timebase_tim.c ****   * @param  None
 103:Core/Src/stm32f7xx_hal_timebase_tim.c ****   * @retval None
 104:Core/Src/stm32f7xx_hal_timebase_tim.c ****   */
 105:Core/Src/stm32f7xx_hal_timebase_tim.c **** void HAL_ResumeTick(void)
 106:Core/Src/stm32f7xx_hal_timebase_tim.c **** {
 188              		.loc 1 106 1 is_stmt 1 view -0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192              		@ link register save eliminated.
 107:Core/Src/stm32f7xx_hal_timebase_tim.c ****   /* Enable TIM1 Update interrupt */
 108:Core/Src/stm32f7xx_hal_timebase_tim.c ****   __HAL_TIM_ENABLE_IT(&htim1, TIM_IT_UPDATE);
 193              		.loc 1 108 3 view .LVU44
 194 0000 034B     		ldr	r3, .L12
 195 0002 1A68     		ldr	r2, [r3]
 196 0004 D368     		ldr	r3, [r2, #12]
 197 0006 43F00103 		orr	r3, r3, #1
 198 000a D360     		str	r3, [r2, #12]
 109:Core/Src/stm32f7xx_hal_timebase_tim.c **** }
 199              		.loc 1 109 1 is_stmt 0 view .LVU45
 200 000c 7047     		bx	lr
 201              	.L13:
 202 000e 00BF     		.align	2
 203              	.L12:
 204 0010 00000000 		.word	.LANCHOR0
 205              		.cfi_endproc
 206              	.LFE143:
 208              		.global	htim1
 209              		.section	.bss.htim1,"aw",%nobits
 210              		.align	2
 211              		.set	.LANCHOR0,. + 0
 214              	htim1:
 215 0000 00000000 		.space	76
 215      00000000 
 215      00000000 
 215      00000000 
 215      00000000 
 216              		.text
 217              	.Letext0:
 218              		.file 2 "c:\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\machine\\_default_typ
 219              		.file 3 "c:\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\sys\\_stdint.h"
 220              		.file 4 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 221              		.file 5 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 222              		.file 6 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc.h"
 223              		.file 7 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 224              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim.h"
 225              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_cortex.h"
ARM GAS  C:\msys64\tmp\cceJax94.s 			page 7


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f7xx_hal_timebase_tim.c
C:\msys64\tmp\cceJax94.s:20     .text.HAL_InitTick:00000000 $t
C:\msys64\tmp\cceJax94.s:26     .text.HAL_InitTick:00000000 HAL_InitTick
C:\msys64\tmp\cceJax94.s:143    .text.HAL_InitTick:00000068 $d
C:\msys64\tmp\cceJax94.s:151    .text.HAL_SuspendTick:00000000 $t
C:\msys64\tmp\cceJax94.s:157    .text.HAL_SuspendTick:00000000 HAL_SuspendTick
C:\msys64\tmp\cceJax94.s:175    .text.HAL_SuspendTick:00000010 $d
C:\msys64\tmp\cceJax94.s:180    .text.HAL_ResumeTick:00000000 $t
C:\msys64\tmp\cceJax94.s:186    .text.HAL_ResumeTick:00000000 HAL_ResumeTick
C:\msys64\tmp\cceJax94.s:204    .text.HAL_ResumeTick:00000010 $d
C:\msys64\tmp\cceJax94.s:214    .bss.htim1:00000000 htim1
C:\msys64\tmp\cceJax94.s:210    .bss.htim1:00000000 $d

UNDEFINED SYMBOLS
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_RCC_GetClockConfig
HAL_RCC_GetPCLK2Freq
HAL_TIM_Base_Init
HAL_TIM_Base_Start_IT
