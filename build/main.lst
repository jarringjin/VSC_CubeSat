ARM GAS  C:\msys64\tmp\ccXhMvGI.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.MX_GPIO_Init,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	MX_GPIO_Init:
  26              	.LFB154:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Core/Src/main.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Core/Src/main.c ****   * the License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                             www.st.com/SLA0044
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** #include "stdio.h"
  23:Core/Src/main.c **** #include "cmsis_os.h"
  24:Core/Src/main.c **** #include "ds18b20.h"
  25:Core/Src/main.c **** #include "dwt_delay.h"
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END Includes */
  31:Core/Src/main.c **** 
ARM GAS  C:\msys64\tmp\ccXhMvGI.s 			page 2


  32:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PTD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PD */
  39:Core/Src/main.c **** /* USER CODE END PD */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  42:Core/Src/main.c **** /* USER CODE BEGIN PM */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* USER CODE END PM */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** I2C_HandleTypeDef hi2c2;
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** SPI_HandleTypeDef hspi1;
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** UART_HandleTypeDef huart2;
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** PCD_HandleTypeDef hpcd_USB_OTG_FS;
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* Definitions for defaultTask */
  57:Core/Src/main.c **** osThreadId_t defaultTaskHandle;
  58:Core/Src/main.c **** const osThreadAttr_t defaultTask_attributes = {
  59:Core/Src/main.c ****   .name = "defaultTask",
  60:Core/Src/main.c ****   .stack_size = 128 * 4,
  61:Core/Src/main.c ****   .priority = (osPriority_t) osPriorityNormal,
  62:Core/Src/main.c **** };
  63:Core/Src/main.c **** /* Definitions for myTask02 */
  64:Core/Src/main.c **** osThreadId_t myTask02Handle;
  65:Core/Src/main.c **** const osThreadAttr_t myTask02_attributes = {
  66:Core/Src/main.c ****   .name = "myTask02",
  67:Core/Src/main.c ****   .stack_size = 128 * 4,
  68:Core/Src/main.c ****   .priority = (osPriority_t) osPriorityLow,
  69:Core/Src/main.c **** };
  70:Core/Src/main.c **** /* Definitions for myTask03 */
  71:Core/Src/main.c **** osThreadId_t myTask03Handle;
  72:Core/Src/main.c **** const osThreadAttr_t myTask03_attributes = {
  73:Core/Src/main.c ****   .name = "myTask03",
  74:Core/Src/main.c ****   .stack_size = 128 * 4,
  75:Core/Src/main.c ****   .priority = (osPriority_t) osPriorityLow,
  76:Core/Src/main.c **** };
  77:Core/Src/main.c **** /* Definitions for myTask04 */
  78:Core/Src/main.c **** osThreadId_t myTask04Handle;
  79:Core/Src/main.c **** const osThreadAttr_t myTask04_attributes = {
  80:Core/Src/main.c ****   .name = "myTask04",
  81:Core/Src/main.c ****   .stack_size = 128 * 4,
  82:Core/Src/main.c ****   .priority = (osPriority_t) osPriorityLow,
  83:Core/Src/main.c **** };
  84:Core/Src/main.c **** /* USER CODE BEGIN PV */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c **** /* USER CODE END PV */
  87:Core/Src/main.c **** 
  88:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
ARM GAS  C:\msys64\tmp\ccXhMvGI.s 			page 3


  89:Core/Src/main.c **** void SystemClock_Config(void);
  90:Core/Src/main.c **** static void MX_GPIO_Init(void);
  91:Core/Src/main.c **** static void MX_USB_OTG_FS_PCD_Init(void);
  92:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  93:Core/Src/main.c **** static void MX_I2C2_Init(void);
  94:Core/Src/main.c **** static void MX_SPI1_Init(void);
  95:Core/Src/main.c **** void StartDefaultTask(void *argument);
  96:Core/Src/main.c **** void Sensor_Reading_Task(void *argument);
  97:Core/Src/main.c **** void StartTask03(void *argument);
  98:Core/Src/main.c **** void StartTask04(void *argument);
  99:Core/Src/main.c **** 
 100:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 101:Core/Src/main.c **** 
 102:Core/Src/main.c **** /* USER CODE END PFP */
 103:Core/Src/main.c **** 
 104:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 105:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 106:Core/Src/main.c **** 
 107:Core/Src/main.c **** /* USER CODE END 0 */
 108:Core/Src/main.c **** 
 109:Core/Src/main.c **** /**
 110:Core/Src/main.c ****   * @brief  The application entry point.
 111:Core/Src/main.c ****   * @retval int
 112:Core/Src/main.c ****   */
 113:Core/Src/main.c **** int main(void)
 114:Core/Src/main.c **** {
 115:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****   /* USER CODE END 1 */
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 120:Core/Src/main.c **** 
 121:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 122:Core/Src/main.c ****   HAL_Init();
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****   /* USER CODE END Init */
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****   /* Configure the system clock */
 129:Core/Src/main.c ****   SystemClock_Config();
 130:Core/Src/main.c **** 
 131:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 132:Core/Src/main.c **** 
 133:Core/Src/main.c ****   /* USER CODE END SysInit */
 134:Core/Src/main.c **** 
 135:Core/Src/main.c ****   /* Initialize all configured peripherals */
 136:Core/Src/main.c ****   MX_GPIO_Init();
 137:Core/Src/main.c ****   MX_USB_OTG_FS_PCD_Init();
 138:Core/Src/main.c ****   MX_USART2_UART_Init();
 139:Core/Src/main.c ****   MX_I2C2_Init();
 140:Core/Src/main.c ****   MX_SPI1_Init();
 141:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 142:Core/Src/main.c **** 
 143:Core/Src/main.c ****   /* USER CODE END 2 */
 144:Core/Src/main.c **** 
 145:Core/Src/main.c ****   /* Init scheduler */
ARM GAS  C:\msys64\tmp\ccXhMvGI.s 			page 4


 146:Core/Src/main.c ****   osKernelInitialize();
 147:Core/Src/main.c **** 
 148:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_MUTEX */
 149:Core/Src/main.c ****   /* add mutexes, ... */
 150:Core/Src/main.c ****   /* USER CODE END RTOS_MUTEX */
 151:Core/Src/main.c **** 
 152:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 153:Core/Src/main.c ****   /* add semaphores, ... */
 154:Core/Src/main.c ****   /* USER CODE END RTOS_SEMAPHORES */
 155:Core/Src/main.c **** 
 156:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_TIMERS */
 157:Core/Src/main.c ****   /* start timers, add new ones, ... */
 158:Core/Src/main.c ****   /* USER CODE END RTOS_TIMERS */
 159:Core/Src/main.c **** 
 160:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 161:Core/Src/main.c ****   /* add queues, ... */
 162:Core/Src/main.c ****   /* USER CODE END RTOS_QUEUES */
 163:Core/Src/main.c **** 
 164:Core/Src/main.c ****   /* Create the thread(s) */
 165:Core/Src/main.c ****   /* creation of defaultTask */
 166:Core/Src/main.c ****   defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****   /* creation of myTask02 */
 169:Core/Src/main.c ****   myTask02Handle = osThreadNew(Sensor_Reading_Task, NULL, &myTask02_attributes);
 170:Core/Src/main.c **** 
 171:Core/Src/main.c ****   /* creation of myTask03 */
 172:Core/Src/main.c ****   myTask03Handle = osThreadNew(StartTask03, NULL, &myTask03_attributes);
 173:Core/Src/main.c **** 
 174:Core/Src/main.c ****   /* creation of myTask04 */
 175:Core/Src/main.c ****   myTask04Handle = osThreadNew(StartTask04, NULL, &myTask04_attributes);
 176:Core/Src/main.c **** 
 177:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_THREADS */
 178:Core/Src/main.c ****   /* add threads, ... */
 179:Core/Src/main.c ****   /* USER CODE END RTOS_THREADS */
 180:Core/Src/main.c **** 
 181:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_EVENTS */
 182:Core/Src/main.c ****   /* add events, ... */
 183:Core/Src/main.c ****   /* USER CODE END RTOS_EVENTS */
 184:Core/Src/main.c **** 
 185:Core/Src/main.c ****   /* Start scheduler */
 186:Core/Src/main.c ****   osKernelStart();
 187:Core/Src/main.c **** 
 188:Core/Src/main.c ****   /* We should never get here as control is now taken by the scheduler */
 189:Core/Src/main.c ****   /* Infinite loop */
 190:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 191:Core/Src/main.c ****   while (1)
 192:Core/Src/main.c ****   {
 193:Core/Src/main.c ****     /* USER CODE END WHILE */
 194:Core/Src/main.c **** 
 195:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 196:Core/Src/main.c ****   }
 197:Core/Src/main.c ****   /* USER CODE END 3 */
 198:Core/Src/main.c **** }
 199:Core/Src/main.c **** 
 200:Core/Src/main.c **** /**
 201:Core/Src/main.c ****   * @brief System Clock Configuration
 202:Core/Src/main.c ****   * @retval None
ARM GAS  C:\msys64\tmp\ccXhMvGI.s 			page 5


 203:Core/Src/main.c ****   */
 204:Core/Src/main.c **** void SystemClock_Config(void)
 205:Core/Src/main.c **** {
 206:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 207:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 208:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 209:Core/Src/main.c **** 
 210:Core/Src/main.c ****   /** Configure LSE Drive Capability
 211:Core/Src/main.c ****   */
 212:Core/Src/main.c ****   HAL_PWR_EnableBkUpAccess();
 213:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 214:Core/Src/main.c ****   */
 215:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 216:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 217:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 218:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 219:Core/Src/main.c ****   */
 220:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 221:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 222:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 223:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 224:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 225:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 72;
 226:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 227:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 3;
 228:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 229:Core/Src/main.c ****   {
 230:Core/Src/main.c ****     Error_Handler();
 231:Core/Src/main.c ****   }
 232:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 233:Core/Src/main.c ****   */
 234:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 235:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 236:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 237:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 238:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 239:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 240:Core/Src/main.c **** 
 241:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 242:Core/Src/main.c ****   {
 243:Core/Src/main.c ****     Error_Handler();
 244:Core/Src/main.c ****   }
 245:Core/Src/main.c ****   PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART2|RCC_PERIPHCLK_I2C2
 246:Core/Src/main.c ****                               |RCC_PERIPHCLK_CLK48;
 247:Core/Src/main.c ****   PeriphClkInitStruct.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 248:Core/Src/main.c ****   PeriphClkInitStruct.I2c2ClockSelection = RCC_I2C2CLKSOURCE_PCLK1;
 249:Core/Src/main.c ****   PeriphClkInitStruct.Clk48ClockSelection = RCC_CLK48SOURCE_PLL;
 250:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 251:Core/Src/main.c ****   {
 252:Core/Src/main.c ****     Error_Handler();
 253:Core/Src/main.c ****   }
 254:Core/Src/main.c **** }
 255:Core/Src/main.c **** 
 256:Core/Src/main.c **** /**
 257:Core/Src/main.c ****   * @brief I2C2 Initialization Function
 258:Core/Src/main.c ****   * @param None
 259:Core/Src/main.c ****   * @retval None
ARM GAS  C:\msys64\tmp\ccXhMvGI.s 			page 6


 260:Core/Src/main.c ****   */
 261:Core/Src/main.c **** static void MX_I2C2_Init(void)
 262:Core/Src/main.c **** {
 263:Core/Src/main.c **** 
 264:Core/Src/main.c ****   /* USER CODE BEGIN I2C2_Init 0 */
 265:Core/Src/main.c **** 
 266:Core/Src/main.c ****   /* USER CODE END I2C2_Init 0 */
 267:Core/Src/main.c **** 
 268:Core/Src/main.c ****   /* USER CODE BEGIN I2C2_Init 1 */
 269:Core/Src/main.c **** 
 270:Core/Src/main.c ****   /* USER CODE END I2C2_Init 1 */
 271:Core/Src/main.c ****   hi2c2.Instance = I2C2;
 272:Core/Src/main.c ****   hi2c2.Init.Timing = 0x00301739;
 273:Core/Src/main.c ****   hi2c2.Init.OwnAddress1 = 0;
 274:Core/Src/main.c ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 275:Core/Src/main.c ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 276:Core/Src/main.c ****   hi2c2.Init.OwnAddress2 = 0;
 277:Core/Src/main.c ****   hi2c2.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 278:Core/Src/main.c ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 279:Core/Src/main.c ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 280:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 281:Core/Src/main.c ****   {
 282:Core/Src/main.c ****     Error_Handler();
 283:Core/Src/main.c ****   }
 284:Core/Src/main.c ****   /** Configure Analogue filter
 285:Core/Src/main.c ****   */
 286:Core/Src/main.c ****   if (HAL_I2CEx_ConfigAnalogFilter(&hi2c2, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 287:Core/Src/main.c ****   {
 288:Core/Src/main.c ****     Error_Handler();
 289:Core/Src/main.c ****   }
 290:Core/Src/main.c ****   /** Configure Digital filter
 291:Core/Src/main.c ****   */
 292:Core/Src/main.c ****   if (HAL_I2CEx_ConfigDigitalFilter(&hi2c2, 0) != HAL_OK)
 293:Core/Src/main.c ****   {
 294:Core/Src/main.c ****     Error_Handler();
 295:Core/Src/main.c ****   }
 296:Core/Src/main.c ****   /* USER CODE BEGIN I2C2_Init 2 */
 297:Core/Src/main.c **** 
 298:Core/Src/main.c ****   /* USER CODE END I2C2_Init 2 */
 299:Core/Src/main.c **** 
 300:Core/Src/main.c **** }
 301:Core/Src/main.c **** 
 302:Core/Src/main.c **** /**
 303:Core/Src/main.c ****   * @brief SPI1 Initialization Function
 304:Core/Src/main.c ****   * @param None
 305:Core/Src/main.c ****   * @retval None
 306:Core/Src/main.c ****   */
 307:Core/Src/main.c **** static void MX_SPI1_Init(void)
 308:Core/Src/main.c **** {
 309:Core/Src/main.c **** 
 310:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 0 */
 311:Core/Src/main.c **** 
 312:Core/Src/main.c ****   /* USER CODE END SPI1_Init 0 */
 313:Core/Src/main.c **** 
 314:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 1 */
 315:Core/Src/main.c **** 
 316:Core/Src/main.c ****   /* USER CODE END SPI1_Init 1 */
ARM GAS  C:\msys64\tmp\ccXhMvGI.s 			page 7


 317:Core/Src/main.c ****   /* SPI1 parameter configuration*/
 318:Core/Src/main.c ****   hspi1.Instance = SPI1;
 319:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 320:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 321:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_16BIT;
 322:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 323:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_2EDGE;
 324:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 325:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 326:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 327:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 328:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 329:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 7;
 330:Core/Src/main.c ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 331:Core/Src/main.c ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
 332:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 333:Core/Src/main.c ****   {
 334:Core/Src/main.c ****     Error_Handler();
 335:Core/Src/main.c ****   }
 336:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 2 */
 337:Core/Src/main.c **** 
 338:Core/Src/main.c ****   /* USER CODE END SPI1_Init 2 */
 339:Core/Src/main.c **** 
 340:Core/Src/main.c **** }
 341:Core/Src/main.c **** 
 342:Core/Src/main.c **** /**
 343:Core/Src/main.c ****   * @brief USART2 Initialization Function
 344:Core/Src/main.c ****   * @param None
 345:Core/Src/main.c ****   * @retval None
 346:Core/Src/main.c ****   */
 347:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 348:Core/Src/main.c **** {
 349:Core/Src/main.c **** 
 350:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 351:Core/Src/main.c **** 
 352:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 353:Core/Src/main.c **** 
 354:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 355:Core/Src/main.c **** 
 356:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 357:Core/Src/main.c ****   huart2.Instance = USART2;
 358:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 359:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 360:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 361:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 362:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 363:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 364:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 365:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 366:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 367:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 368:Core/Src/main.c ****   {
 369:Core/Src/main.c ****     Error_Handler();
 370:Core/Src/main.c ****   }
 371:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 372:Core/Src/main.c **** 
 373:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
ARM GAS  C:\msys64\tmp\ccXhMvGI.s 			page 8


 374:Core/Src/main.c **** 
 375:Core/Src/main.c **** }
 376:Core/Src/main.c **** 
 377:Core/Src/main.c **** /**
 378:Core/Src/main.c ****   * @brief USB_OTG_FS Initialization Function
 379:Core/Src/main.c ****   * @param None
 380:Core/Src/main.c ****   * @retval None
 381:Core/Src/main.c ****   */
 382:Core/Src/main.c **** static void MX_USB_OTG_FS_PCD_Init(void)
 383:Core/Src/main.c **** {
 384:Core/Src/main.c **** 
 385:Core/Src/main.c ****   /* USER CODE BEGIN USB_OTG_FS_Init 0 */
 386:Core/Src/main.c **** 
 387:Core/Src/main.c ****   /* USER CODE END USB_OTG_FS_Init 0 */
 388:Core/Src/main.c **** 
 389:Core/Src/main.c ****   /* USER CODE BEGIN USB_OTG_FS_Init 1 */
 390:Core/Src/main.c **** 
 391:Core/Src/main.c ****   /* USER CODE END USB_OTG_FS_Init 1 */
 392:Core/Src/main.c ****   hpcd_USB_OTG_FS.Instance = USB_OTG_FS;
 393:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.dev_endpoints = 6;
 394:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.speed = PCD_SPEED_FULL;
 395:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.dma_enable = DISABLE;
 396:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.phy_itface = PCD_PHY_EMBEDDED;
 397:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.Sof_enable = ENABLE;
 398:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.low_power_enable = DISABLE;
 399:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.lpm_enable = DISABLE;
 400:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.vbus_sensing_enable = ENABLE;
 401:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.use_dedicated_ep1 = DISABLE;
 402:Core/Src/main.c ****   if (HAL_PCD_Init(&hpcd_USB_OTG_FS) != HAL_OK)
 403:Core/Src/main.c ****   {
 404:Core/Src/main.c ****     Error_Handler();
 405:Core/Src/main.c ****   }
 406:Core/Src/main.c ****   /* USER CODE BEGIN USB_OTG_FS_Init 2 */
 407:Core/Src/main.c **** 
 408:Core/Src/main.c ****   /* USER CODE END USB_OTG_FS_Init 2 */
 409:Core/Src/main.c **** 
 410:Core/Src/main.c **** }
 411:Core/Src/main.c **** 
 412:Core/Src/main.c **** /**
 413:Core/Src/main.c ****   * @brief GPIO Initialization Function
 414:Core/Src/main.c ****   * @param None
 415:Core/Src/main.c ****   * @retval None
 416:Core/Src/main.c ****   */
 417:Core/Src/main.c **** static void MX_GPIO_Init(void)
 418:Core/Src/main.c **** {
  28              		.loc 1 418 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 56
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 36
  35              		.cfi_offset 4, -36
  36              		.cfi_offset 5, -32
  37              		.cfi_offset 6, -28
  38              		.cfi_offset 7, -24
  39              		.cfi_offset 8, -20
ARM GAS  C:\msys64\tmp\ccXhMvGI.s 			page 9


  40              		.cfi_offset 9, -16
  41              		.cfi_offset 10, -12
  42              		.cfi_offset 11, -8
  43              		.cfi_offset 14, -4
  44 0004 8FB0     		sub	sp, sp, #60
  45              	.LCFI1:
  46              		.cfi_def_cfa_offset 96
 419:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  47              		.loc 1 419 3 view .LVU1
  48              		.loc 1 419 20 is_stmt 0 view .LVU2
  49 0006 0024     		movs	r4, #0
  50 0008 0994     		str	r4, [sp, #36]
  51 000a 0A94     		str	r4, [sp, #40]
  52 000c 0B94     		str	r4, [sp, #44]
  53 000e 0C94     		str	r4, [sp, #48]
  54 0010 0D94     		str	r4, [sp, #52]
 420:Core/Src/main.c **** 
 421:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 422:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  55              		.loc 1 422 3 is_stmt 1 view .LVU3
  56              	.LBB4:
  57              		.loc 1 422 3 view .LVU4
  58              		.loc 1 422 3 view .LVU5
  59 0012 654B     		ldr	r3, .L3
  60 0014 1A6B     		ldr	r2, [r3, #48]
  61 0016 42F00402 		orr	r2, r2, #4
  62 001a 1A63     		str	r2, [r3, #48]
  63              		.loc 1 422 3 view .LVU6
  64 001c 1A6B     		ldr	r2, [r3, #48]
  65 001e 02F00402 		and	r2, r2, #4
  66 0022 0192     		str	r2, [sp, #4]
  67              		.loc 1 422 3 view .LVU7
  68 0024 019A     		ldr	r2, [sp, #4]
  69              	.LBE4:
  70              		.loc 1 422 3 view .LVU8
 423:Core/Src/main.c ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  71              		.loc 1 423 3 view .LVU9
  72              	.LBB5:
  73              		.loc 1 423 3 view .LVU10
  74              		.loc 1 423 3 view .LVU11
  75 0026 1A6B     		ldr	r2, [r3, #48]
  76 0028 42F02002 		orr	r2, r2, #32
  77 002c 1A63     		str	r2, [r3, #48]
  78              		.loc 1 423 3 view .LVU12
  79 002e 1A6B     		ldr	r2, [r3, #48]
  80 0030 02F02002 		and	r2, r2, #32
  81 0034 0292     		str	r2, [sp, #8]
  82              		.loc 1 423 3 view .LVU13
  83 0036 029A     		ldr	r2, [sp, #8]
  84              	.LBE5:
  85              		.loc 1 423 3 view .LVU14
 424:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  86              		.loc 1 424 3 view .LVU15
  87              	.LBB6:
  88              		.loc 1 424 3 view .LVU16
  89              		.loc 1 424 3 view .LVU17
  90 0038 1A6B     		ldr	r2, [r3, #48]
ARM GAS  C:\msys64\tmp\ccXhMvGI.s 			page 10


  91 003a 42F08002 		orr	r2, r2, #128
  92 003e 1A63     		str	r2, [r3, #48]
  93              		.loc 1 424 3 view .LVU18
  94 0040 1A6B     		ldr	r2, [r3, #48]
  95 0042 02F08002 		and	r2, r2, #128
  96 0046 0392     		str	r2, [sp, #12]
  97              		.loc 1 424 3 view .LVU19
  98 0048 039A     		ldr	r2, [sp, #12]
  99              	.LBE6:
 100              		.loc 1 424 3 view .LVU20
 425:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 101              		.loc 1 425 3 view .LVU21
 102              	.LBB7:
 103              		.loc 1 425 3 view .LVU22
 104              		.loc 1 425 3 view .LVU23
 105 004a 1A6B     		ldr	r2, [r3, #48]
 106 004c 42F00102 		orr	r2, r2, #1
 107 0050 1A63     		str	r2, [r3, #48]
 108              		.loc 1 425 3 view .LVU24
 109 0052 1A6B     		ldr	r2, [r3, #48]
 110 0054 02F00102 		and	r2, r2, #1
 111 0058 0492     		str	r2, [sp, #16]
 112              		.loc 1 425 3 view .LVU25
 113 005a 049A     		ldr	r2, [sp, #16]
 114              	.LBE7:
 115              		.loc 1 425 3 view .LVU26
 426:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 116              		.loc 1 426 3 view .LVU27
 117              	.LBB8:
 118              		.loc 1 426 3 view .LVU28
 119              		.loc 1 426 3 view .LVU29
 120 005c 1A6B     		ldr	r2, [r3, #48]
 121 005e 42F00202 		orr	r2, r2, #2
 122 0062 1A63     		str	r2, [r3, #48]
 123              		.loc 1 426 3 view .LVU30
 124 0064 1A6B     		ldr	r2, [r3, #48]
 125 0066 02F00202 		and	r2, r2, #2
 126 006a 0592     		str	r2, [sp, #20]
 127              		.loc 1 426 3 view .LVU31
 128 006c 059A     		ldr	r2, [sp, #20]
 129              	.LBE8:
 130              		.loc 1 426 3 view .LVU32
 427:Core/Src/main.c ****   __HAL_RCC_GPIOE_CLK_ENABLE();
 131              		.loc 1 427 3 view .LVU33
 132              	.LBB9:
 133              		.loc 1 427 3 view .LVU34
 134              		.loc 1 427 3 view .LVU35
 135 006e 1A6B     		ldr	r2, [r3, #48]
 136 0070 42F01002 		orr	r2, r2, #16
 137 0074 1A63     		str	r2, [r3, #48]
 138              		.loc 1 427 3 view .LVU36
 139 0076 1A6B     		ldr	r2, [r3, #48]
 140 0078 02F01002 		and	r2, r2, #16
 141 007c 0692     		str	r2, [sp, #24]
 142              		.loc 1 427 3 view .LVU37
 143 007e 069A     		ldr	r2, [sp, #24]
 144              	.LBE9:
ARM GAS  C:\msys64\tmp\ccXhMvGI.s 			page 11


 145              		.loc 1 427 3 view .LVU38
 428:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 146              		.loc 1 428 3 view .LVU39
 147              	.LBB10:
 148              		.loc 1 428 3 view .LVU40
 149              		.loc 1 428 3 view .LVU41
 150 0080 1A6B     		ldr	r2, [r3, #48]
 151 0082 42F00802 		orr	r2, r2, #8
 152 0086 1A63     		str	r2, [r3, #48]
 153              		.loc 1 428 3 view .LVU42
 154 0088 1A6B     		ldr	r2, [r3, #48]
 155 008a 02F00802 		and	r2, r2, #8
 156 008e 0792     		str	r2, [sp, #28]
 157              		.loc 1 428 3 view .LVU43
 158 0090 079A     		ldr	r2, [sp, #28]
 159              	.LBE10:
 160              		.loc 1 428 3 view .LVU44
 429:Core/Src/main.c ****   __HAL_RCC_GPIOG_CLK_ENABLE();
 161              		.loc 1 429 3 view .LVU45
 162              	.LBB11:
 163              		.loc 1 429 3 view .LVU46
 164              		.loc 1 429 3 view .LVU47
 165 0092 1A6B     		ldr	r2, [r3, #48]
 166 0094 42F04002 		orr	r2, r2, #64
 167 0098 1A63     		str	r2, [r3, #48]
 168              		.loc 1 429 3 view .LVU48
 169 009a 1B6B     		ldr	r3, [r3, #48]
 170 009c 03F04003 		and	r3, r3, #64
 171 00a0 0893     		str	r3, [sp, #32]
 172              		.loc 1 429 3 view .LVU49
 173 00a2 089B     		ldr	r3, [sp, #32]
 174              	.LBE11:
 175              		.loc 1 429 3 view .LVU50
 430:Core/Src/main.c **** 
 431:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 432:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, LD1_Pin|LD3_Pin|LD2_Pin, GPIO_PIN_RESET);
 176              		.loc 1 432 3 view .LVU51
 177 00a4 DFF81891 		ldr	r9, .L3+24
 178 00a8 2246     		mov	r2, r4
 179 00aa 44F28101 		movw	r1, #16513
 180 00ae 4846     		mov	r0, r9
 181 00b0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 182              	.LVL0:
 433:Core/Src/main.c **** 
 434:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 435:Core/Src/main.c ****   HAL_GPIO_WritePin(USB_PowerSwitchOn_GPIO_Port, USB_PowerSwitchOn_Pin, GPIO_PIN_RESET);
 183              		.loc 1 435 3 view .LVU52
 184 00b4 3D4F     		ldr	r7, .L3+4
 185 00b6 2246     		mov	r2, r4
 186 00b8 4021     		movs	r1, #64
 187 00ba 3846     		mov	r0, r7
 188 00bc FFF7FEFF 		bl	HAL_GPIO_WritePin
 189              	.LVL1:
 436:Core/Src/main.c **** 
 437:Core/Src/main.c ****   /*Configure GPIO pin : USER_Btn_Pin */
 438:Core/Src/main.c ****   GPIO_InitStruct.Pin = USER_Btn_Pin;
 190              		.loc 1 438 3 view .LVU53
ARM GAS  C:\msys64\tmp\ccXhMvGI.s 			page 12


 191              		.loc 1 438 23 is_stmt 0 view .LVU54
 192 00c0 4FF4005A 		mov	r10, #8192
 193 00c4 CDF824A0 		str	r10, [sp, #36]
 439:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 194              		.loc 1 439 3 is_stmt 1 view .LVU55
 195              		.loc 1 439 24 is_stmt 0 view .LVU56
 196 00c8 394B     		ldr	r3, .L3+8
 197 00ca 0A93     		str	r3, [sp, #40]
 440:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 198              		.loc 1 440 3 is_stmt 1 view .LVU57
 199              		.loc 1 440 24 is_stmt 0 view .LVU58
 200 00cc 0B94     		str	r4, [sp, #44]
 441:Core/Src/main.c ****   HAL_GPIO_Init(USER_Btn_GPIO_Port, &GPIO_InitStruct);
 201              		.loc 1 441 3 is_stmt 1 view .LVU59
 202 00ce DFF8F4B0 		ldr	fp, .L3+28
 203 00d2 09A9     		add	r1, sp, #36
 204 00d4 5846     		mov	r0, fp
 205 00d6 FFF7FEFF 		bl	HAL_GPIO_Init
 206              	.LVL2:
 442:Core/Src/main.c **** 
 443:Core/Src/main.c ****   /*Configure GPIO pins : RMII_MDC_Pin RMII_RXD0_Pin RMII_RXD1_Pin */
 444:Core/Src/main.c ****   GPIO_InitStruct.Pin = RMII_MDC_Pin|RMII_RXD0_Pin|RMII_RXD1_Pin;
 207              		.loc 1 444 3 view .LVU60
 208              		.loc 1 444 23 is_stmt 0 view .LVU61
 209 00da 3223     		movs	r3, #50
 210 00dc 0993     		str	r3, [sp, #36]
 445:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 211              		.loc 1 445 3 is_stmt 1 view .LVU62
 212              		.loc 1 445 24 is_stmt 0 view .LVU63
 213 00de 0226     		movs	r6, #2
 214 00e0 0A96     		str	r6, [sp, #40]
 446:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 215              		.loc 1 446 3 is_stmt 1 view .LVU64
 216              		.loc 1 446 24 is_stmt 0 view .LVU65
 217 00e2 0B94     		str	r4, [sp, #44]
 447:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 218              		.loc 1 447 3 is_stmt 1 view .LVU66
 219              		.loc 1 447 25 is_stmt 0 view .LVU67
 220 00e4 0325     		movs	r5, #3
 221 00e6 0C95     		str	r5, [sp, #48]
 448:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 222              		.loc 1 448 3 is_stmt 1 view .LVU68
 223              		.loc 1 448 29 is_stmt 0 view .LVU69
 224 00e8 4FF00B08 		mov	r8, #11
 225 00ec CDF83480 		str	r8, [sp, #52]
 449:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 226              		.loc 1 449 3 is_stmt 1 view .LVU70
 227 00f0 09A9     		add	r1, sp, #36
 228 00f2 5846     		mov	r0, fp
 229 00f4 FFF7FEFF 		bl	HAL_GPIO_Init
 230              	.LVL3:
 450:Core/Src/main.c **** 
 451:Core/Src/main.c ****   /*Configure GPIO pins : RMII_REF_CLK_Pin RMII_MDIO_Pin RMII_CRS_DV_Pin */
 452:Core/Src/main.c ****   GPIO_InitStruct.Pin = RMII_REF_CLK_Pin|RMII_MDIO_Pin|RMII_CRS_DV_Pin;
 231              		.loc 1 452 3 view .LVU71
 232              		.loc 1 452 23 is_stmt 0 view .LVU72
 233 00f8 8623     		movs	r3, #134
ARM GAS  C:\msys64\tmp\ccXhMvGI.s 			page 13


 234 00fa 0993     		str	r3, [sp, #36]
 453:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 235              		.loc 1 453 3 is_stmt 1 view .LVU73
 236              		.loc 1 453 24 is_stmt 0 view .LVU74
 237 00fc 0A96     		str	r6, [sp, #40]
 454:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 238              		.loc 1 454 3 is_stmt 1 view .LVU75
 239              		.loc 1 454 24 is_stmt 0 view .LVU76
 240 00fe 0B94     		str	r4, [sp, #44]
 455:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 241              		.loc 1 455 3 is_stmt 1 view .LVU77
 242              		.loc 1 455 25 is_stmt 0 view .LVU78
 243 0100 0C95     		str	r5, [sp, #48]
 456:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 244              		.loc 1 456 3 is_stmt 1 view .LVU79
 245              		.loc 1 456 29 is_stmt 0 view .LVU80
 246 0102 CDF83480 		str	r8, [sp, #52]
 457:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 247              		.loc 1 457 3 is_stmt 1 view .LVU81
 248 0106 09A9     		add	r1, sp, #36
 249 0108 2A48     		ldr	r0, .L3+12
 250 010a FFF7FEFF 		bl	HAL_GPIO_Init
 251              	.LVL4:
 458:Core/Src/main.c **** 
 459:Core/Src/main.c ****   /*Configure GPIO pins : LD1_Pin LD3_Pin LD2_Pin */
 460:Core/Src/main.c ****   GPIO_InitStruct.Pin = LD1_Pin|LD3_Pin|LD2_Pin;
 252              		.loc 1 460 3 view .LVU82
 253              		.loc 1 460 23 is_stmt 0 view .LVU83
 254 010e 44F28103 		movw	r3, #16513
 255 0112 0993     		str	r3, [sp, #36]
 461:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 256              		.loc 1 461 3 is_stmt 1 view .LVU84
 257              		.loc 1 461 24 is_stmt 0 view .LVU85
 258 0114 4FF0010B 		mov	fp, #1
 259 0118 CDF828B0 		str	fp, [sp, #40]
 462:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 260              		.loc 1 462 3 is_stmt 1 view .LVU86
 261              		.loc 1 462 24 is_stmt 0 view .LVU87
 262 011c 0B94     		str	r4, [sp, #44]
 463:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 263              		.loc 1 463 3 is_stmt 1 view .LVU88
 264              		.loc 1 463 25 is_stmt 0 view .LVU89
 265 011e 0C94     		str	r4, [sp, #48]
 464:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 266              		.loc 1 464 3 is_stmt 1 view .LVU90
 267 0120 09A9     		add	r1, sp, #36
 268 0122 4846     		mov	r0, r9
 269 0124 FFF7FEFF 		bl	HAL_GPIO_Init
 270              	.LVL5:
 465:Core/Src/main.c **** 
 466:Core/Src/main.c ****   /*Configure GPIO pin : PE13 */
 467:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_13;
 271              		.loc 1 467 3 view .LVU91
 272              		.loc 1 467 23 is_stmt 0 view .LVU92
 273 0128 CDF824A0 		str	r10, [sp, #36]
 468:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 274              		.loc 1 468 3 is_stmt 1 view .LVU93
ARM GAS  C:\msys64\tmp\ccXhMvGI.s 			page 14


 275              		.loc 1 468 24 is_stmt 0 view .LVU94
 276 012c 0A94     		str	r4, [sp, #40]
 469:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 277              		.loc 1 469 3 is_stmt 1 view .LVU95
 278              		.loc 1 469 24 is_stmt 0 view .LVU96
 279 012e 0B94     		str	r4, [sp, #44]
 470:Core/Src/main.c ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 280              		.loc 1 470 3 is_stmt 1 view .LVU97
 281 0130 09A9     		add	r1, sp, #36
 282 0132 2148     		ldr	r0, .L3+16
 283 0134 FFF7FEFF 		bl	HAL_GPIO_Init
 284              	.LVL6:
 471:Core/Src/main.c **** 
 472:Core/Src/main.c ****   /*Configure GPIO pin : RMII_TXD1_Pin */
 473:Core/Src/main.c ****   GPIO_InitStruct.Pin = RMII_TXD1_Pin;
 285              		.loc 1 473 3 view .LVU98
 286              		.loc 1 473 23 is_stmt 0 view .LVU99
 287 0138 CDF824A0 		str	r10, [sp, #36]
 474:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 288              		.loc 1 474 3 is_stmt 1 view .LVU100
 289              		.loc 1 474 24 is_stmt 0 view .LVU101
 290 013c 0A96     		str	r6, [sp, #40]
 475:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 291              		.loc 1 475 3 is_stmt 1 view .LVU102
 292              		.loc 1 475 24 is_stmt 0 view .LVU103
 293 013e 0B94     		str	r4, [sp, #44]
 476:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 294              		.loc 1 476 3 is_stmt 1 view .LVU104
 295              		.loc 1 476 25 is_stmt 0 view .LVU105
 296 0140 0C95     		str	r5, [sp, #48]
 477:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 297              		.loc 1 477 3 is_stmt 1 view .LVU106
 298              		.loc 1 477 29 is_stmt 0 view .LVU107
 299 0142 CDF83480 		str	r8, [sp, #52]
 478:Core/Src/main.c ****   HAL_GPIO_Init(RMII_TXD1_GPIO_Port, &GPIO_InitStruct);
 300              		.loc 1 478 3 is_stmt 1 view .LVU108
 301 0146 09A9     		add	r1, sp, #36
 302 0148 4846     		mov	r0, r9
 303 014a FFF7FEFF 		bl	HAL_GPIO_Init
 304              	.LVL7:
 479:Core/Src/main.c **** 
 480:Core/Src/main.c ****   /*Configure GPIO pins : STLK_RX_Pin STLK_TX_Pin */
 481:Core/Src/main.c ****   GPIO_InitStruct.Pin = STLK_RX_Pin|STLK_TX_Pin;
 305              		.loc 1 481 3 view .LVU109
 306              		.loc 1 481 23 is_stmt 0 view .LVU110
 307 014e 4FF44073 		mov	r3, #768
 308 0152 0993     		str	r3, [sp, #36]
 482:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 309              		.loc 1 482 3 is_stmt 1 view .LVU111
 310              		.loc 1 482 24 is_stmt 0 view .LVU112
 311 0154 0A96     		str	r6, [sp, #40]
 483:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 312              		.loc 1 483 3 is_stmt 1 view .LVU113
 313              		.loc 1 483 24 is_stmt 0 view .LVU114
 314 0156 0B94     		str	r4, [sp, #44]
 484:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 315              		.loc 1 484 3 is_stmt 1 view .LVU115
ARM GAS  C:\msys64\tmp\ccXhMvGI.s 			page 15


 316              		.loc 1 484 25 is_stmt 0 view .LVU116
 317 0158 0C95     		str	r5, [sp, #48]
 485:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
 318              		.loc 1 485 3 is_stmt 1 view .LVU117
 319              		.loc 1 485 29 is_stmt 0 view .LVU118
 320 015a 0723     		movs	r3, #7
 321 015c 0D93     		str	r3, [sp, #52]
 486:Core/Src/main.c ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 322              		.loc 1 486 3 is_stmt 1 view .LVU119
 323 015e 09A9     		add	r1, sp, #36
 324 0160 1648     		ldr	r0, .L3+20
 325 0162 FFF7FEFF 		bl	HAL_GPIO_Init
 326              	.LVL8:
 487:Core/Src/main.c **** 
 488:Core/Src/main.c ****   /*Configure GPIO pin : USB_PowerSwitchOn_Pin */
 489:Core/Src/main.c ****   GPIO_InitStruct.Pin = USB_PowerSwitchOn_Pin;
 327              		.loc 1 489 3 view .LVU120
 328              		.loc 1 489 23 is_stmt 0 view .LVU121
 329 0166 4023     		movs	r3, #64
 330 0168 0993     		str	r3, [sp, #36]
 490:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 331              		.loc 1 490 3 is_stmt 1 view .LVU122
 332              		.loc 1 490 24 is_stmt 0 view .LVU123
 333 016a CDF828B0 		str	fp, [sp, #40]
 491:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 334              		.loc 1 491 3 is_stmt 1 view .LVU124
 335              		.loc 1 491 24 is_stmt 0 view .LVU125
 336 016e 0B94     		str	r4, [sp, #44]
 492:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 337              		.loc 1 492 3 is_stmt 1 view .LVU126
 338              		.loc 1 492 25 is_stmt 0 view .LVU127
 339 0170 0C94     		str	r4, [sp, #48]
 493:Core/Src/main.c ****   HAL_GPIO_Init(USB_PowerSwitchOn_GPIO_Port, &GPIO_InitStruct);
 340              		.loc 1 493 3 is_stmt 1 view .LVU128
 341 0172 09A9     		add	r1, sp, #36
 342 0174 3846     		mov	r0, r7
 343 0176 FFF7FEFF 		bl	HAL_GPIO_Init
 344              	.LVL9:
 494:Core/Src/main.c **** 
 495:Core/Src/main.c ****   /*Configure GPIO pin : USB_OverCurrent_Pin */
 496:Core/Src/main.c ****   GPIO_InitStruct.Pin = USB_OverCurrent_Pin;
 345              		.loc 1 496 3 view .LVU129
 346              		.loc 1 496 23 is_stmt 0 view .LVU130
 347 017a 8023     		movs	r3, #128
 348 017c 0993     		str	r3, [sp, #36]
 497:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 349              		.loc 1 497 3 is_stmt 1 view .LVU131
 350              		.loc 1 497 24 is_stmt 0 view .LVU132
 351 017e 0A94     		str	r4, [sp, #40]
 498:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 352              		.loc 1 498 3 is_stmt 1 view .LVU133
 353              		.loc 1 498 24 is_stmt 0 view .LVU134
 354 0180 0B94     		str	r4, [sp, #44]
 499:Core/Src/main.c ****   HAL_GPIO_Init(USB_OverCurrent_GPIO_Port, &GPIO_InitStruct);
 355              		.loc 1 499 3 is_stmt 1 view .LVU135
 356 0182 09A9     		add	r1, sp, #36
 357 0184 3846     		mov	r0, r7
ARM GAS  C:\msys64\tmp\ccXhMvGI.s 			page 16


 358 0186 FFF7FEFF 		bl	HAL_GPIO_Init
 359              	.LVL10:
 500:Core/Src/main.c **** 
 501:Core/Src/main.c ****   /*Configure GPIO pins : RMII_TX_EN_Pin RMII_TXD0_Pin */
 502:Core/Src/main.c ****   GPIO_InitStruct.Pin = RMII_TX_EN_Pin|RMII_TXD0_Pin;
 360              		.loc 1 502 3 view .LVU136
 361              		.loc 1 502 23 is_stmt 0 view .LVU137
 362 018a 4FF42053 		mov	r3, #10240
 363 018e 0993     		str	r3, [sp, #36]
 503:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 364              		.loc 1 503 3 is_stmt 1 view .LVU138
 365              		.loc 1 503 24 is_stmt 0 view .LVU139
 366 0190 0A96     		str	r6, [sp, #40]
 504:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 367              		.loc 1 504 3 is_stmt 1 view .LVU140
 368              		.loc 1 504 24 is_stmt 0 view .LVU141
 369 0192 0B94     		str	r4, [sp, #44]
 505:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 370              		.loc 1 505 3 is_stmt 1 view .LVU142
 371              		.loc 1 505 25 is_stmt 0 view .LVU143
 372 0194 0C95     		str	r5, [sp, #48]
 506:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 373              		.loc 1 506 3 is_stmt 1 view .LVU144
 374              		.loc 1 506 29 is_stmt 0 view .LVU145
 375 0196 CDF83480 		str	r8, [sp, #52]
 507:Core/Src/main.c ****   HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 376              		.loc 1 507 3 is_stmt 1 view .LVU146
 377 019a 09A9     		add	r1, sp, #36
 378 019c 3846     		mov	r0, r7
 379 019e FFF7FEFF 		bl	HAL_GPIO_Init
 380              	.LVL11:
 508:Core/Src/main.c **** 
 509:Core/Src/main.c **** }
 381              		.loc 1 509 1 is_stmt 0 view .LVU147
 382 01a2 0FB0     		add	sp, sp, #60
 383              	.LCFI2:
 384              		.cfi_def_cfa_offset 36
 385              		@ sp needed
 386 01a4 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 387              	.L4:
 388              		.align	2
 389              	.L3:
 390 01a8 00380240 		.word	1073887232
 391 01ac 00180240 		.word	1073879040
 392 01b0 00001110 		.word	269549568
 393 01b4 00000240 		.word	1073872896
 394 01b8 00100240 		.word	1073876992
 395 01bc 000C0240 		.word	1073875968
 396 01c0 00040240 		.word	1073873920
 397 01c4 00080240 		.word	1073874944
 398              		.cfi_endproc
 399              	.LFE154:
 401              		.section	.text.StartDefaultTask,"ax",%progbits
 402              		.align	1
 403              		.global	StartDefaultTask
 404              		.syntax unified
 405              		.thumb
ARM GAS  C:\msys64\tmp\ccXhMvGI.s 			page 17


 406              		.thumb_func
 408              	StartDefaultTask:
 409              	.LFB155:
 510:Core/Src/main.c **** 
 511:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 512:Core/Src/main.c **** 
 513:Core/Src/main.c **** /* USER CODE END 4 */
 514:Core/Src/main.c **** 
 515:Core/Src/main.c **** /* USER CODE BEGIN Header_StartDefaultTask */
 516:Core/Src/main.c **** /**
 517:Core/Src/main.c ****   * @brief  Function implementing the defaultTask thread.
 518:Core/Src/main.c ****   * @param  argument: Not used
 519:Core/Src/main.c ****   * @retval None
 520:Core/Src/main.c ****   */
 521:Core/Src/main.c **** /* USER CODE END Header_StartDefaultTask */
 522:Core/Src/main.c **** void StartDefaultTask(void *argument)
 523:Core/Src/main.c **** {
 410              		.loc 1 523 1 is_stmt 1 view -0
 411              		.cfi_startproc
 412              		@ Volatile: function does not return.
 413              		@ args = 0, pretend = 0, frame = 0
 414              		@ frame_needed = 0, uses_anonymous_args = 0
 415              	.LVL12:
 416              		.loc 1 523 1 is_stmt 0 view .LVU149
 417 0000 08B5     		push	{r3, lr}
 418              	.LCFI3:
 419              		.cfi_def_cfa_offset 8
 420              		.cfi_offset 3, -8
 421              		.cfi_offset 14, -4
 422              	.LVL13:
 423              	.L6:
 524:Core/Src/main.c ****   /* USER CODE BEGIN 5 */
 525:Core/Src/main.c ****   /* Infinite loop */
 526:Core/Src/main.c ****   for(;;)
 424              		.loc 1 526 3 is_stmt 1 discriminator 1 view .LVU150
 527:Core/Src/main.c ****   {
 528:Core/Src/main.c ****     osDelay(1);
 425              		.loc 1 528 5 discriminator 1 view .LVU151
 426 0002 0120     		movs	r0, #1
 427 0004 FFF7FEFF 		bl	osDelay
 428              	.LVL14:
 526:Core/Src/main.c ****   {
 429              		.loc 1 526 8 discriminator 1 view .LVU152
 430 0008 FBE7     		b	.L6
 431              		.cfi_endproc
 432              	.LFE155:
 434              		.section	.text.StartTask03,"ax",%progbits
 435              		.align	1
 436              		.global	StartTask03
 437              		.syntax unified
 438              		.thumb
 439              		.thumb_func
 441              	StartTask03:
 442              	.LFB157:
 529:Core/Src/main.c ****   }
 530:Core/Src/main.c ****   /* USER CODE END 5 */
 531:Core/Src/main.c **** }
ARM GAS  C:\msys64\tmp\ccXhMvGI.s 			page 18


 532:Core/Src/main.c **** 
 533:Core/Src/main.c **** /* USER CODE BEGIN Header_Sensor_Reading_Task */
 534:Core/Src/main.c **** /**
 535:Core/Src/main.c **** * @brief Function implementing the myTask02 thread.
 536:Core/Src/main.c **** * @param argument: Not used
 537:Core/Src/main.c **** * @retval None
 538:Core/Src/main.c **** */
 539:Core/Src/main.c **** /* USER CODE END Header_Sensor_Reading_Task */
 540:Core/Src/main.c **** void Sensor_Reading_Task(void *argument)
 541:Core/Src/main.c **** {
 542:Core/Src/main.c ****   /* USER CODE BEGIN Sensor_Reading_Task */
 543:Core/Src/main.c ****   /* Infinite loop */
 544:Core/Src/main.c ****   for(;;)
 545:Core/Src/main.c ****   {
 546:Core/Src/main.c ****    // HAL_GPIO_TogglePin(LD3_GPIO_Port,LD3_Pin);
 547:Core/Src/main.c **** 
 548:Core/Src/main.c ****    float dc18b20_temp  = ds18b20_output();
 549:Core/Src/main.c ****    printf("temp : %f \n",dc18b20_temp);    
 550:Core/Src/main.c ****    // HAL_GPIO_TogglePin(LD2_GPIO_Port,LD2_Pin);
 551:Core/Src/main.c ****    HAL_Delay(1000);
 552:Core/Src/main.c **** 
 553:Core/Src/main.c ****     //osDelay(1);
 554:Core/Src/main.c ****   }
 555:Core/Src/main.c ****   /* USER CODE END Sensor_Reading_Task */
 556:Core/Src/main.c **** }
 557:Core/Src/main.c **** 
 558:Core/Src/main.c **** /* USER CODE BEGIN Header_StartTask03 */
 559:Core/Src/main.c **** /**
 560:Core/Src/main.c **** * @brief Function implementing the myTask03 thread.
 561:Core/Src/main.c **** * @param argument: Not used
 562:Core/Src/main.c **** * @retval None
 563:Core/Src/main.c **** */
 564:Core/Src/main.c **** /* USER CODE END Header_StartTask03 */
 565:Core/Src/main.c **** void StartTask03(void *argument)
 566:Core/Src/main.c **** {
 443              		.loc 1 566 1 view -0
 444              		.cfi_startproc
 445              		@ Volatile: function does not return.
 446              		@ args = 0, pretend = 0, frame = 0
 447              		@ frame_needed = 0, uses_anonymous_args = 0
 448              	.LVL15:
 449              		.loc 1 566 1 is_stmt 0 view .LVU154
 450 0000 08B5     		push	{r3, lr}
 451              	.LCFI4:
 452              		.cfi_def_cfa_offset 8
 453              		.cfi_offset 3, -8
 454              		.cfi_offset 14, -4
 455              	.LVL16:
 456              	.L9:
 567:Core/Src/main.c ****   /* USER CODE BEGIN StartTask03 */
 568:Core/Src/main.c ****   /* Infinite loop */
 569:Core/Src/main.c ****   for(;;)
 457              		.loc 1 569 3 is_stmt 1 discriminator 1 view .LVU155
 570:Core/Src/main.c ****   {
 571:Core/Src/main.c ****     osDelay(1);
 458              		.loc 1 571 5 discriminator 1 view .LVU156
 459 0002 0120     		movs	r0, #1
ARM GAS  C:\msys64\tmp\ccXhMvGI.s 			page 19


 460 0004 FFF7FEFF 		bl	osDelay
 461              	.LVL17:
 569:Core/Src/main.c ****   {
 462              		.loc 1 569 8 discriminator 1 view .LVU157
 463 0008 FBE7     		b	.L9
 464              		.cfi_endproc
 465              	.LFE157:
 467              		.section	.text.StartTask04,"ax",%progbits
 468              		.align	1
 469              		.global	StartTask04
 470              		.syntax unified
 471              		.thumb
 472              		.thumb_func
 474              	StartTask04:
 475              	.LFB158:
 572:Core/Src/main.c ****   }
 573:Core/Src/main.c ****   /* USER CODE END StartTask03 */
 574:Core/Src/main.c **** }
 575:Core/Src/main.c **** 
 576:Core/Src/main.c **** /* USER CODE BEGIN Header_StartTask04 */
 577:Core/Src/main.c **** /**
 578:Core/Src/main.c **** * @brief Function implementing the myTask04 thread.
 579:Core/Src/main.c **** * @param argument: Not used
 580:Core/Src/main.c **** * @retval None
 581:Core/Src/main.c **** */
 582:Core/Src/main.c **** /* USER CODE END Header_StartTask04 */
 583:Core/Src/main.c **** void StartTask04(void *argument)
 584:Core/Src/main.c **** {
 476              		.loc 1 584 1 view -0
 477              		.cfi_startproc
 478              		@ Volatile: function does not return.
 479              		@ args = 0, pretend = 0, frame = 0
 480              		@ frame_needed = 0, uses_anonymous_args = 0
 481              	.LVL18:
 482              		.loc 1 584 1 is_stmt 0 view .LVU159
 483 0000 08B5     		push	{r3, lr}
 484              	.LCFI5:
 485              		.cfi_def_cfa_offset 8
 486              		.cfi_offset 3, -8
 487              		.cfi_offset 14, -4
 488              	.LVL19:
 489              	.L12:
 585:Core/Src/main.c ****   /* USER CODE BEGIN StartTask04 */
 586:Core/Src/main.c ****   /* Infinite loop */
 587:Core/Src/main.c ****   for(;;)
 490              		.loc 1 587 3 is_stmt 1 discriminator 1 view .LVU160
 588:Core/Src/main.c ****   {
 589:Core/Src/main.c ****     osDelay(1);
 491              		.loc 1 589 5 discriminator 1 view .LVU161
 492 0002 0120     		movs	r0, #1
 493 0004 FFF7FEFF 		bl	osDelay
 494              	.LVL20:
 587:Core/Src/main.c ****   {
 495              		.loc 1 587 8 discriminator 1 view .LVU162
 496 0008 FBE7     		b	.L12
 497              		.cfi_endproc
 498              	.LFE158:
ARM GAS  C:\msys64\tmp\ccXhMvGI.s 			page 20


 500              		.global	__aeabi_f2d
 501              		.section	.rodata.Sensor_Reading_Task.str1.4,"aMS",%progbits,1
 502              		.align	2
 503              	.LC0:
 504 0000 74656D70 		.ascii	"temp : %f \012\000"
 504      203A2025 
 504      66200A00 
 505              		.section	.text.Sensor_Reading_Task,"ax",%progbits
 506              		.align	1
 507              		.global	Sensor_Reading_Task
 508              		.syntax unified
 509              		.thumb
 510              		.thumb_func
 512              	Sensor_Reading_Task:
 513              	.LFB156:
 541:Core/Src/main.c ****   /* USER CODE BEGIN Sensor_Reading_Task */
 514              		.loc 1 541 1 view -0
 515              		.cfi_startproc
 516              		@ args = 0, pretend = 0, frame = 0
 517              		@ frame_needed = 0, uses_anonymous_args = 0
 518              	.LVL21:
 541:Core/Src/main.c ****   /* USER CODE BEGIN Sensor_Reading_Task */
 519              		.loc 1 541 1 is_stmt 0 view .LVU164
 520 0000 08B5     		push	{r3, lr}
 521              	.LCFI6:
 522              		.cfi_def_cfa_offset 8
 523              		.cfi_offset 3, -8
 524              		.cfi_offset 14, -4
 525              	.LVL22:
 526              	.L15:
 544:Core/Src/main.c ****   {
 527              		.loc 1 544 3 is_stmt 1 discriminator 1 view .LVU165
 528              	.LBB12:
 548:Core/Src/main.c ****    printf("temp : %f \n",dc18b20_temp);    
 529              		.loc 1 548 4 discriminator 1 view .LVU166
 548:Core/Src/main.c ****    printf("temp : %f \n",dc18b20_temp);    
 530              		.loc 1 548 26 is_stmt 0 discriminator 1 view .LVU167
 531 0002 FFF7FEFF 		bl	ds18b20_output
 532              	.LVL23:
 533 0006 10EE100A 		vmov	r0, s0
 534              	.LVL24:
 549:Core/Src/main.c ****    // HAL_GPIO_TogglePin(LD2_GPIO_Port,LD2_Pin);
 535              		.loc 1 549 4 is_stmt 1 discriminator 1 view .LVU168
 536 000a FFF7FEFF 		bl	__aeabi_f2d
 537              	.LVL25:
 549:Core/Src/main.c ****    // HAL_GPIO_TogglePin(LD2_GPIO_Port,LD2_Pin);
 538              		.loc 1 549 4 is_stmt 0 discriminator 1 view .LVU169
 539 000e 0246     		mov	r2, r0
 540 0010 0B46     		mov	r3, r1
 541 0012 0448     		ldr	r0, .L17
 542 0014 FFF7FEFF 		bl	printf
 543              	.LVL26:
 551:Core/Src/main.c **** 
 544              		.loc 1 551 4 is_stmt 1 discriminator 1 view .LVU170
 545 0018 4FF47A70 		mov	r0, #1000
 546 001c FFF7FEFF 		bl	HAL_Delay
 547              	.LVL27:
ARM GAS  C:\msys64\tmp\ccXhMvGI.s 			page 21


 548              	.LBE12:
 544:Core/Src/main.c ****   {
 549              		.loc 1 544 8 discriminator 1 view .LVU171
 550 0020 EFE7     		b	.L15
 551              	.L18:
 552 0022 00BF     		.align	2
 553              	.L17:
 554 0024 00000000 		.word	.LC0
 555              		.cfi_endproc
 556              	.LFE156:
 558              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 559              		.align	1
 560              		.global	HAL_TIM_PeriodElapsedCallback
 561              		.syntax unified
 562              		.thumb
 563              		.thumb_func
 565              	HAL_TIM_PeriodElapsedCallback:
 566              	.LVL28:
 567              	.LFB159:
 590:Core/Src/main.c ****   }
 591:Core/Src/main.c ****   /* USER CODE END StartTask04 */
 592:Core/Src/main.c **** }
 593:Core/Src/main.c **** 
 594:Core/Src/main.c ****  /**
 595:Core/Src/main.c ****   * @brief  Period elapsed callback in non blocking mode
 596:Core/Src/main.c ****   * @note   This function is called  when TIM1 interrupt took place, inside
 597:Core/Src/main.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 598:Core/Src/main.c ****   * a global variable "uwTick" used as application time base.
 599:Core/Src/main.c ****   * @param  htim : TIM handle
 600:Core/Src/main.c ****   * @retval None
 601:Core/Src/main.c ****   */
 602:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 603:Core/Src/main.c **** {
 568              		.loc 1 603 1 view -0
 569              		.cfi_startproc
 570              		@ args = 0, pretend = 0, frame = 0
 571              		@ frame_needed = 0, uses_anonymous_args = 0
 572              		.loc 1 603 1 is_stmt 0 view .LVU173
 573 0000 08B5     		push	{r3, lr}
 574              	.LCFI7:
 575              		.cfi_def_cfa_offset 8
 576              		.cfi_offset 3, -8
 577              		.cfi_offset 14, -4
 604:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 605:Core/Src/main.c **** 
 606:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 607:Core/Src/main.c ****   if (htim->Instance == TIM1) {
 578              		.loc 1 607 3 is_stmt 1 view .LVU174
 579              		.loc 1 607 11 is_stmt 0 view .LVU175
 580 0002 0268     		ldr	r2, [r0]
 581              		.loc 1 607 6 view .LVU176
 582 0004 034B     		ldr	r3, .L23
 583 0006 9A42     		cmp	r2, r3
 584 0008 00D0     		beq	.L22
 585              	.LVL29:
 586              	.L19:
 608:Core/Src/main.c ****     HAL_IncTick();
ARM GAS  C:\msys64\tmp\ccXhMvGI.s 			page 22


 609:Core/Src/main.c ****   }
 610:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 611:Core/Src/main.c **** 
 612:Core/Src/main.c ****   /* USER CODE END Callback 1 */
 613:Core/Src/main.c **** }
 587              		.loc 1 613 1 view .LVU177
 588 000a 08BD     		pop	{r3, pc}
 589              	.LVL30:
 590              	.L22:
 608:Core/Src/main.c ****     HAL_IncTick();
 591              		.loc 1 608 5 is_stmt 1 view .LVU178
 592 000c FFF7FEFF 		bl	HAL_IncTick
 593              	.LVL31:
 594              		.loc 1 613 1 is_stmt 0 view .LVU179
 595 0010 FBE7     		b	.L19
 596              	.L24:
 597 0012 00BF     		.align	2
 598              	.L23:
 599 0014 00000140 		.word	1073807360
 600              		.cfi_endproc
 601              	.LFE159:
 603              		.section	.text.Error_Handler,"ax",%progbits
 604              		.align	1
 605              		.global	Error_Handler
 606              		.syntax unified
 607              		.thumb
 608              		.thumb_func
 610              	Error_Handler:
 611              	.LFB160:
 614:Core/Src/main.c **** 
 615:Core/Src/main.c **** /**
 616:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 617:Core/Src/main.c ****   * @retval None
 618:Core/Src/main.c ****   */
 619:Core/Src/main.c **** void Error_Handler(void)
 620:Core/Src/main.c **** {
 612              		.loc 1 620 1 is_stmt 1 view -0
 613              		.cfi_startproc
 614              		@ Volatile: function does not return.
 615              		@ args = 0, pretend = 0, frame = 0
 616              		@ frame_needed = 0, uses_anonymous_args = 0
 617              		@ link register save eliminated.
 621:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 622:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 623:Core/Src/main.c ****   __disable_irq();
 618              		.loc 1 623 3 view .LVU181
 619              	.LBB13:
 620              	.LBI13:
 621              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
ARM GAS  C:\msys64\tmp\ccXhMvGI.s 			page 23


   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
ARM GAS  C:\msys64\tmp\ccXhMvGI.s 			page 24


  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\msys64\tmp\ccXhMvGI.s 			page 25


 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 622              		.loc 2 140 27 view .LVU182
 623              	.LBB14:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 624              		.loc 2 142 3 view .LVU183
 625              		.syntax unified
 626              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 627 0000 72B6     		cpsid i
 628              	@ 0 "" 2
 629              		.thumb
 630              		.syntax unified
 631              	.L26:
 632              	.LBE14:
 633              	.LBE13:
 624:Core/Src/main.c ****   while (1)
 634              		.loc 1 624 3 discriminator 1 view .LVU184
 625:Core/Src/main.c ****   {
 626:Core/Src/main.c ****   }
 635              		.loc 1 626 3 discriminator 1 view .LVU185
 624:Core/Src/main.c ****   while (1)
 636              		.loc 1 624 9 discriminator 1 view .LVU186
 637 0002 FEE7     		b	.L26
 638              		.cfi_endproc
 639              	.LFE160:
 641              		.section	.text.MX_USB_OTG_FS_PCD_Init,"ax",%progbits
 642              		.align	1
 643              		.syntax unified
 644              		.thumb
 645              		.thumb_func
 647              	MX_USB_OTG_FS_PCD_Init:
 648              	.LFB153:
 383:Core/Src/main.c **** 
 649              		.loc 1 383 1 view -0
 650              		.cfi_startproc
 651              		@ args = 0, pretend = 0, frame = 0
 652              		@ frame_needed = 0, uses_anonymous_args = 0
 653 0000 08B5     		push	{r3, lr}
 654              	.LCFI8:
 655              		.cfi_def_cfa_offset 8
ARM GAS  C:\msys64\tmp\ccXhMvGI.s 			page 26


 656              		.cfi_offset 3, -8
 657              		.cfi_offset 14, -4
 392:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.dev_endpoints = 6;
 658              		.loc 1 392 3 view .LVU188
 392:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.dev_endpoints = 6;
 659              		.loc 1 392 28 is_stmt 0 view .LVU189
 660 0002 0B48     		ldr	r0, .L31
 661 0004 4FF0A043 		mov	r3, #1342177280
 662 0008 0360     		str	r3, [r0]
 393:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.speed = PCD_SPEED_FULL;
 663              		.loc 1 393 3 is_stmt 1 view .LVU190
 393:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.speed = PCD_SPEED_FULL;
 664              		.loc 1 393 38 is_stmt 0 view .LVU191
 665 000a 0623     		movs	r3, #6
 666 000c 4360     		str	r3, [r0, #4]
 394:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.dma_enable = DISABLE;
 667              		.loc 1 394 3 is_stmt 1 view .LVU192
 394:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.dma_enable = DISABLE;
 668              		.loc 1 394 30 is_stmt 0 view .LVU193
 669 000e 0222     		movs	r2, #2
 670 0010 C260     		str	r2, [r0, #12]
 395:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.phy_itface = PCD_PHY_EMBEDDED;
 671              		.loc 1 395 3 is_stmt 1 view .LVU194
 395:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.phy_itface = PCD_PHY_EMBEDDED;
 672              		.loc 1 395 35 is_stmt 0 view .LVU195
 673 0012 0023     		movs	r3, #0
 674 0014 0361     		str	r3, [r0, #16]
 396:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.Sof_enable = ENABLE;
 675              		.loc 1 396 3 is_stmt 1 view .LVU196
 396:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.Sof_enable = ENABLE;
 676              		.loc 1 396 35 is_stmt 0 view .LVU197
 677 0016 8261     		str	r2, [r0, #24]
 397:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.low_power_enable = DISABLE;
 678              		.loc 1 397 3 is_stmt 1 view .LVU198
 397:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.low_power_enable = DISABLE;
 679              		.loc 1 397 35 is_stmt 0 view .LVU199
 680 0018 0122     		movs	r2, #1
 681 001a C261     		str	r2, [r0, #28]
 398:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.lpm_enable = DISABLE;
 682              		.loc 1 398 3 is_stmt 1 view .LVU200
 398:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.lpm_enable = DISABLE;
 683              		.loc 1 398 41 is_stmt 0 view .LVU201
 684 001c 0362     		str	r3, [r0, #32]
 399:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.vbus_sensing_enable = ENABLE;
 685              		.loc 1 399 3 is_stmt 1 view .LVU202
 399:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.vbus_sensing_enable = ENABLE;
 686              		.loc 1 399 35 is_stmt 0 view .LVU203
 687 001e 4362     		str	r3, [r0, #36]
 400:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.use_dedicated_ep1 = DISABLE;
 688              		.loc 1 400 3 is_stmt 1 view .LVU204
 400:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.use_dedicated_ep1 = DISABLE;
 689              		.loc 1 400 44 is_stmt 0 view .LVU205
 690 0020 C262     		str	r2, [r0, #44]
 401:Core/Src/main.c ****   if (HAL_PCD_Init(&hpcd_USB_OTG_FS) != HAL_OK)
 691              		.loc 1 401 3 is_stmt 1 view .LVU206
 401:Core/Src/main.c ****   if (HAL_PCD_Init(&hpcd_USB_OTG_FS) != HAL_OK)
 692              		.loc 1 401 42 is_stmt 0 view .LVU207
ARM GAS  C:\msys64\tmp\ccXhMvGI.s 			page 27


 693 0022 0363     		str	r3, [r0, #48]
 402:Core/Src/main.c ****   {
 694              		.loc 1 402 3 is_stmt 1 view .LVU208
 402:Core/Src/main.c ****   {
 695              		.loc 1 402 7 is_stmt 0 view .LVU209
 696 0024 FFF7FEFF 		bl	HAL_PCD_Init
 697              	.LVL32:
 402:Core/Src/main.c ****   {
 698              		.loc 1 402 6 view .LVU210
 699 0028 00B9     		cbnz	r0, .L30
 410:Core/Src/main.c **** 
 700              		.loc 1 410 1 view .LVU211
 701 002a 08BD     		pop	{r3, pc}
 702              	.L30:
 404:Core/Src/main.c ****   }
 703              		.loc 1 404 5 is_stmt 1 view .LVU212
 704 002c FFF7FEFF 		bl	Error_Handler
 705              	.LVL33:
 706              	.L32:
 707              		.align	2
 708              	.L31:
 709 0030 00000000 		.word	.LANCHOR0
 710              		.cfi_endproc
 711              	.LFE153:
 713              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 714              		.align	1
 715              		.syntax unified
 716              		.thumb
 717              		.thumb_func
 719              	MX_USART2_UART_Init:
 720              	.LFB152:
 348:Core/Src/main.c **** 
 721              		.loc 1 348 1 view -0
 722              		.cfi_startproc
 723              		@ args = 0, pretend = 0, frame = 0
 724              		@ frame_needed = 0, uses_anonymous_args = 0
 725 0000 08B5     		push	{r3, lr}
 726              	.LCFI9:
 727              		.cfi_def_cfa_offset 8
 728              		.cfi_offset 3, -8
 729              		.cfi_offset 14, -4
 357:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 730              		.loc 1 357 3 view .LVU214
 357:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 731              		.loc 1 357 19 is_stmt 0 view .LVU215
 732 0002 0B48     		ldr	r0, .L37
 733 0004 0B4B     		ldr	r3, .L37+4
 734 0006 0360     		str	r3, [r0]
 358:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 735              		.loc 1 358 3 is_stmt 1 view .LVU216
 358:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 736              		.loc 1 358 24 is_stmt 0 view .LVU217
 737 0008 4FF4E133 		mov	r3, #115200
 738 000c 4360     		str	r3, [r0, #4]
 359:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 739              		.loc 1 359 3 is_stmt 1 view .LVU218
 359:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
ARM GAS  C:\msys64\tmp\ccXhMvGI.s 			page 28


 740              		.loc 1 359 26 is_stmt 0 view .LVU219
 741 000e 0023     		movs	r3, #0
 742 0010 8360     		str	r3, [r0, #8]
 360:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 743              		.loc 1 360 3 is_stmt 1 view .LVU220
 360:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 744              		.loc 1 360 24 is_stmt 0 view .LVU221
 745 0012 C360     		str	r3, [r0, #12]
 361:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 746              		.loc 1 361 3 is_stmt 1 view .LVU222
 361:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 747              		.loc 1 361 22 is_stmt 0 view .LVU223
 748 0014 0361     		str	r3, [r0, #16]
 362:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 749              		.loc 1 362 3 is_stmt 1 view .LVU224
 362:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 750              		.loc 1 362 20 is_stmt 0 view .LVU225
 751 0016 0C22     		movs	r2, #12
 752 0018 4261     		str	r2, [r0, #20]
 363:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 753              		.loc 1 363 3 is_stmt 1 view .LVU226
 363:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 754              		.loc 1 363 25 is_stmt 0 view .LVU227
 755 001a 8361     		str	r3, [r0, #24]
 364:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 756              		.loc 1 364 3 is_stmt 1 view .LVU228
 364:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 757              		.loc 1 364 28 is_stmt 0 view .LVU229
 758 001c C361     		str	r3, [r0, #28]
 365:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 759              		.loc 1 365 3 is_stmt 1 view .LVU230
 365:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 760              		.loc 1 365 30 is_stmt 0 view .LVU231
 761 001e 0362     		str	r3, [r0, #32]
 366:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 762              		.loc 1 366 3 is_stmt 1 view .LVU232
 366:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 763              		.loc 1 366 38 is_stmt 0 view .LVU233
 764 0020 4362     		str	r3, [r0, #36]
 367:Core/Src/main.c ****   {
 765              		.loc 1 367 3 is_stmt 1 view .LVU234
 367:Core/Src/main.c ****   {
 766              		.loc 1 367 7 is_stmt 0 view .LVU235
 767 0022 FFF7FEFF 		bl	HAL_UART_Init
 768              	.LVL34:
 367:Core/Src/main.c ****   {
 769              		.loc 1 367 6 view .LVU236
 770 0026 00B9     		cbnz	r0, .L36
 375:Core/Src/main.c **** 
 771              		.loc 1 375 1 view .LVU237
 772 0028 08BD     		pop	{r3, pc}
 773              	.L36:
 369:Core/Src/main.c ****   }
 774              		.loc 1 369 5 is_stmt 1 view .LVU238
 775 002a FFF7FEFF 		bl	Error_Handler
 776              	.LVL35:
 777              	.L38:
ARM GAS  C:\msys64\tmp\ccXhMvGI.s 			page 29


 778 002e 00BF     		.align	2
 779              	.L37:
 780 0030 00000000 		.word	.LANCHOR1
 781 0034 00440040 		.word	1073759232
 782              		.cfi_endproc
 783              	.LFE152:
 785              		.section	.text.MX_I2C2_Init,"ax",%progbits
 786              		.align	1
 787              		.syntax unified
 788              		.thumb
 789              		.thumb_func
 791              	MX_I2C2_Init:
 792              	.LFB150:
 262:Core/Src/main.c **** 
 793              		.loc 1 262 1 view -0
 794              		.cfi_startproc
 795              		@ args = 0, pretend = 0, frame = 0
 796              		@ frame_needed = 0, uses_anonymous_args = 0
 797 0000 08B5     		push	{r3, lr}
 798              	.LCFI10:
 799              		.cfi_def_cfa_offset 8
 800              		.cfi_offset 3, -8
 801              		.cfi_offset 14, -4
 271:Core/Src/main.c ****   hi2c2.Init.Timing = 0x00301739;
 802              		.loc 1 271 3 view .LVU240
 271:Core/Src/main.c ****   hi2c2.Init.Timing = 0x00301739;
 803              		.loc 1 271 18 is_stmt 0 view .LVU241
 804 0002 1148     		ldr	r0, .L47
 805 0004 114B     		ldr	r3, .L47+4
 806 0006 0360     		str	r3, [r0]
 272:Core/Src/main.c ****   hi2c2.Init.OwnAddress1 = 0;
 807              		.loc 1 272 3 is_stmt 1 view .LVU242
 272:Core/Src/main.c ****   hi2c2.Init.OwnAddress1 = 0;
 808              		.loc 1 272 21 is_stmt 0 view .LVU243
 809 0008 114B     		ldr	r3, .L47+8
 810 000a 4360     		str	r3, [r0, #4]
 273:Core/Src/main.c ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 811              		.loc 1 273 3 is_stmt 1 view .LVU244
 273:Core/Src/main.c ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 812              		.loc 1 273 26 is_stmt 0 view .LVU245
 813 000c 0023     		movs	r3, #0
 814 000e 8360     		str	r3, [r0, #8]
 274:Core/Src/main.c ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 815              		.loc 1 274 3 is_stmt 1 view .LVU246
 274:Core/Src/main.c ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 816              		.loc 1 274 29 is_stmt 0 view .LVU247
 817 0010 0122     		movs	r2, #1
 818 0012 C260     		str	r2, [r0, #12]
 275:Core/Src/main.c ****   hi2c2.Init.OwnAddress2 = 0;
 819              		.loc 1 275 3 is_stmt 1 view .LVU248
 275:Core/Src/main.c ****   hi2c2.Init.OwnAddress2 = 0;
 820              		.loc 1 275 30 is_stmt 0 view .LVU249
 821 0014 0361     		str	r3, [r0, #16]
 276:Core/Src/main.c ****   hi2c2.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 822              		.loc 1 276 3 is_stmt 1 view .LVU250
 276:Core/Src/main.c ****   hi2c2.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 823              		.loc 1 276 26 is_stmt 0 view .LVU251
ARM GAS  C:\msys64\tmp\ccXhMvGI.s 			page 30


 824 0016 4361     		str	r3, [r0, #20]
 277:Core/Src/main.c ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 825              		.loc 1 277 3 is_stmt 1 view .LVU252
 277:Core/Src/main.c ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 826              		.loc 1 277 31 is_stmt 0 view .LVU253
 827 0018 8361     		str	r3, [r0, #24]
 278:Core/Src/main.c ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 828              		.loc 1 278 3 is_stmt 1 view .LVU254
 278:Core/Src/main.c ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 829              		.loc 1 278 30 is_stmt 0 view .LVU255
 830 001a C361     		str	r3, [r0, #28]
 279:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 831              		.loc 1 279 3 is_stmt 1 view .LVU256
 279:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 832              		.loc 1 279 28 is_stmt 0 view .LVU257
 833 001c 0362     		str	r3, [r0, #32]
 280:Core/Src/main.c ****   {
 834              		.loc 1 280 3 is_stmt 1 view .LVU258
 280:Core/Src/main.c ****   {
 835              		.loc 1 280 7 is_stmt 0 view .LVU259
 836 001e FFF7FEFF 		bl	HAL_I2C_Init
 837              	.LVL36:
 280:Core/Src/main.c ****   {
 838              		.loc 1 280 6 view .LVU260
 839 0022 50B9     		cbnz	r0, .L44
 286:Core/Src/main.c ****   {
 840              		.loc 1 286 3 is_stmt 1 view .LVU261
 286:Core/Src/main.c ****   {
 841              		.loc 1 286 7 is_stmt 0 view .LVU262
 842 0024 0021     		movs	r1, #0
 843 0026 0848     		ldr	r0, .L47
 844 0028 FFF7FEFF 		bl	HAL_I2CEx_ConfigAnalogFilter
 845              	.LVL37:
 286:Core/Src/main.c ****   {
 846              		.loc 1 286 6 view .LVU263
 847 002c 38B9     		cbnz	r0, .L45
 292:Core/Src/main.c ****   {
 848              		.loc 1 292 3 is_stmt 1 view .LVU264
 292:Core/Src/main.c ****   {
 849              		.loc 1 292 7 is_stmt 0 view .LVU265
 850 002e 0021     		movs	r1, #0
 851 0030 0548     		ldr	r0, .L47
 852 0032 FFF7FEFF 		bl	HAL_I2CEx_ConfigDigitalFilter
 853              	.LVL38:
 292:Core/Src/main.c ****   {
 854              		.loc 1 292 6 view .LVU266
 855 0036 20B9     		cbnz	r0, .L46
 300:Core/Src/main.c **** 
 856              		.loc 1 300 1 view .LVU267
 857 0038 08BD     		pop	{r3, pc}
 858              	.L44:
 282:Core/Src/main.c ****   }
 859              		.loc 1 282 5 is_stmt 1 view .LVU268
 860 003a FFF7FEFF 		bl	Error_Handler
 861              	.LVL39:
 862              	.L45:
 288:Core/Src/main.c ****   }
ARM GAS  C:\msys64\tmp\ccXhMvGI.s 			page 31


 863              		.loc 1 288 5 view .LVU269
 864 003e FFF7FEFF 		bl	Error_Handler
 865              	.LVL40:
 866              	.L46:
 294:Core/Src/main.c ****   }
 867              		.loc 1 294 5 view .LVU270
 868 0042 FFF7FEFF 		bl	Error_Handler
 869              	.LVL41:
 870              	.L48:
 871 0046 00BF     		.align	2
 872              	.L47:
 873 0048 00000000 		.word	.LANCHOR2
 874 004c 00580040 		.word	1073764352
 875 0050 39173000 		.word	3151673
 876              		.cfi_endproc
 877              	.LFE150:
 879              		.section	.text.MX_SPI1_Init,"ax",%progbits
 880              		.align	1
 881              		.syntax unified
 882              		.thumb
 883              		.thumb_func
 885              	MX_SPI1_Init:
 886              	.LFB151:
 308:Core/Src/main.c **** 
 887              		.loc 1 308 1 view -0
 888              		.cfi_startproc
 889              		@ args = 0, pretend = 0, frame = 0
 890              		@ frame_needed = 0, uses_anonymous_args = 0
 891 0000 08B5     		push	{r3, lr}
 892              	.LCFI11:
 893              		.cfi_def_cfa_offset 8
 894              		.cfi_offset 3, -8
 895              		.cfi_offset 14, -4
 318:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 896              		.loc 1 318 3 view .LVU272
 318:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 897              		.loc 1 318 18 is_stmt 0 view .LVU273
 898 0002 0F48     		ldr	r0, .L53
 899 0004 0F4B     		ldr	r3, .L53+4
 900 0006 0360     		str	r3, [r0]
 319:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 901              		.loc 1 319 3 is_stmt 1 view .LVU274
 319:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 902              		.loc 1 319 19 is_stmt 0 view .LVU275
 903 0008 4FF48273 		mov	r3, #260
 904 000c 4360     		str	r3, [r0, #4]
 320:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_16BIT;
 905              		.loc 1 320 3 is_stmt 1 view .LVU276
 320:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_16BIT;
 906              		.loc 1 320 24 is_stmt 0 view .LVU277
 907 000e 0023     		movs	r3, #0
 908 0010 8360     		str	r3, [r0, #8]
 321:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 909              		.loc 1 321 3 is_stmt 1 view .LVU278
 321:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 910              		.loc 1 321 23 is_stmt 0 view .LVU279
 911 0012 4FF47062 		mov	r2, #3840
ARM GAS  C:\msys64\tmp\ccXhMvGI.s 			page 32


 912 0016 C260     		str	r2, [r0, #12]
 322:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_2EDGE;
 913              		.loc 1 322 3 is_stmt 1 view .LVU280
 322:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_2EDGE;
 914              		.loc 1 322 26 is_stmt 0 view .LVU281
 915 0018 0361     		str	r3, [r0, #16]
 323:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 916              		.loc 1 323 3 is_stmt 1 view .LVU282
 323:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 917              		.loc 1 323 23 is_stmt 0 view .LVU283
 918 001a 0122     		movs	r2, #1
 919 001c 4261     		str	r2, [r0, #20]
 324:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 920              		.loc 1 324 3 is_stmt 1 view .LVU284
 324:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 921              		.loc 1 324 18 is_stmt 0 view .LVU285
 922 001e 4FF40072 		mov	r2, #512
 923 0022 8261     		str	r2, [r0, #24]
 325:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 924              		.loc 1 325 3 is_stmt 1 view .LVU286
 325:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 925              		.loc 1 325 32 is_stmt 0 view .LVU287
 926 0024 C361     		str	r3, [r0, #28]
 326:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 927              		.loc 1 326 3 is_stmt 1 view .LVU288
 326:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 928              		.loc 1 326 23 is_stmt 0 view .LVU289
 929 0026 0362     		str	r3, [r0, #32]
 327:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 930              		.loc 1 327 3 is_stmt 1 view .LVU290
 327:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 931              		.loc 1 327 21 is_stmt 0 view .LVU291
 932 0028 4362     		str	r3, [r0, #36]
 328:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 7;
 933              		.loc 1 328 3 is_stmt 1 view .LVU292
 328:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 7;
 934              		.loc 1 328 29 is_stmt 0 view .LVU293
 935 002a 8362     		str	r3, [r0, #40]
 329:Core/Src/main.c ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 936              		.loc 1 329 3 is_stmt 1 view .LVU294
 329:Core/Src/main.c ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 937              		.loc 1 329 28 is_stmt 0 view .LVU295
 938 002c 0722     		movs	r2, #7
 939 002e C262     		str	r2, [r0, #44]
 330:Core/Src/main.c ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
 940              		.loc 1 330 3 is_stmt 1 view .LVU296
 330:Core/Src/main.c ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
 941              		.loc 1 330 24 is_stmt 0 view .LVU297
 942 0030 0363     		str	r3, [r0, #48]
 331:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 943              		.loc 1 331 3 is_stmt 1 view .LVU298
 331:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 944              		.loc 1 331 23 is_stmt 0 view .LVU299
 945 0032 4363     		str	r3, [r0, #52]
 332:Core/Src/main.c ****   {
 946              		.loc 1 332 3 is_stmt 1 view .LVU300
 332:Core/Src/main.c ****   {
ARM GAS  C:\msys64\tmp\ccXhMvGI.s 			page 33


 947              		.loc 1 332 7 is_stmt 0 view .LVU301
 948 0034 FFF7FEFF 		bl	HAL_SPI_Init
 949              	.LVL42:
 332:Core/Src/main.c ****   {
 950              		.loc 1 332 6 view .LVU302
 951 0038 00B9     		cbnz	r0, .L52
 340:Core/Src/main.c **** 
 952              		.loc 1 340 1 view .LVU303
 953 003a 08BD     		pop	{r3, pc}
 954              	.L52:
 334:Core/Src/main.c ****   }
 955              		.loc 1 334 5 is_stmt 1 view .LVU304
 956 003c FFF7FEFF 		bl	Error_Handler
 957              	.LVL43:
 958              	.L54:
 959              		.align	2
 960              	.L53:
 961 0040 00000000 		.word	.LANCHOR3
 962 0044 00300140 		.word	1073819648
 963              		.cfi_endproc
 964              	.LFE151:
 966              		.section	.text.SystemClock_Config,"ax",%progbits
 967              		.align	1
 968              		.global	SystemClock_Config
 969              		.syntax unified
 970              		.thumb
 971              		.thumb_func
 973              	SystemClock_Config:
 974              	.LFB149:
 205:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 975              		.loc 1 205 1 view -0
 976              		.cfi_startproc
 977              		@ args = 0, pretend = 0, frame = 208
 978              		@ frame_needed = 0, uses_anonymous_args = 0
 979 0000 00B5     		push	{lr}
 980              	.LCFI12:
 981              		.cfi_def_cfa_offset 4
 982              		.cfi_offset 14, -4
 983 0002 B5B0     		sub	sp, sp, #212
 984              	.LCFI13:
 985              		.cfi_def_cfa_offset 216
 206:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 986              		.loc 1 206 3 view .LVU306
 206:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 987              		.loc 1 206 22 is_stmt 0 view .LVU307
 988 0004 3022     		movs	r2, #48
 989 0006 0021     		movs	r1, #0
 990 0008 28A8     		add	r0, sp, #160
 991 000a FFF7FEFF 		bl	memset
 992              	.LVL44:
 207:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 993              		.loc 1 207 3 is_stmt 1 view .LVU308
 207:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 994              		.loc 1 207 22 is_stmt 0 view .LVU309
 995 000e 0021     		movs	r1, #0
 996 0010 2391     		str	r1, [sp, #140]
 997 0012 2491     		str	r1, [sp, #144]
ARM GAS  C:\msys64\tmp\ccXhMvGI.s 			page 34


 998 0014 2591     		str	r1, [sp, #148]
 999 0016 2691     		str	r1, [sp, #152]
 1000 0018 2791     		str	r1, [sp, #156]
 208:Core/Src/main.c **** 
 1001              		.loc 1 208 3 is_stmt 1 view .LVU310
 208:Core/Src/main.c **** 
 1002              		.loc 1 208 28 is_stmt 0 view .LVU311
 1003 001a 8422     		movs	r2, #132
 1004 001c 02A8     		add	r0, sp, #8
 1005 001e FFF7FEFF 		bl	memset
 1006              	.LVL45:
 212:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 1007              		.loc 1 212 3 is_stmt 1 view .LVU312
 1008 0022 FFF7FEFF 		bl	HAL_PWR_EnableBkUpAccess
 1009              	.LVL46:
 215:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1010              		.loc 1 215 3 view .LVU313
 1011              	.LBB15:
 215:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1012              		.loc 1 215 3 view .LVU314
 215:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1013              		.loc 1 215 3 view .LVU315
 1014 0026 264B     		ldr	r3, .L63
 1015 0028 1A6C     		ldr	r2, [r3, #64]
 1016 002a 42F08052 		orr	r2, r2, #268435456
 1017 002e 1A64     		str	r2, [r3, #64]
 215:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1018              		.loc 1 215 3 view .LVU316
 1019 0030 1B6C     		ldr	r3, [r3, #64]
 1020 0032 03F08053 		and	r3, r3, #268435456
 1021 0036 0093     		str	r3, [sp]
 215:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1022              		.loc 1 215 3 view .LVU317
 1023 0038 009B     		ldr	r3, [sp]
 1024              	.LBE15:
 215:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1025              		.loc 1 215 3 view .LVU318
 216:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 1026              		.loc 1 216 3 view .LVU319
 1027              	.LBB16:
 216:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 1028              		.loc 1 216 3 view .LVU320
 216:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 1029              		.loc 1 216 3 view .LVU321
 1030 003a 224A     		ldr	r2, .L63+4
 1031 003c 1368     		ldr	r3, [r2]
 1032 003e 23F44043 		bic	r3, r3, #49152
 1033 0042 43F48043 		orr	r3, r3, #16384
 1034 0046 1360     		str	r3, [r2]
 216:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 1035              		.loc 1 216 3 view .LVU322
 1036 0048 1368     		ldr	r3, [r2]
 1037 004a 03F44043 		and	r3, r3, #49152
 1038 004e 0193     		str	r3, [sp, #4]
 216:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 1039              		.loc 1 216 3 view .LVU323
 1040 0050 019B     		ldr	r3, [sp, #4]
ARM GAS  C:\msys64\tmp\ccXhMvGI.s 			page 35


 1041              	.LBE16:
 216:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 1042              		.loc 1 216 3 view .LVU324
 220:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 1043              		.loc 1 220 3 view .LVU325
 220:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 1044              		.loc 1 220 36 is_stmt 0 view .LVU326
 1045 0052 0123     		movs	r3, #1
 1046 0054 2893     		str	r3, [sp, #160]
 221:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1047              		.loc 1 221 3 is_stmt 1 view .LVU327
 221:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1048              		.loc 1 221 30 is_stmt 0 view .LVU328
 1049 0056 4FF4A023 		mov	r3, #327680
 1050 005a 2993     		str	r3, [sp, #164]
 222:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1051              		.loc 1 222 3 is_stmt 1 view .LVU329
 222:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1052              		.loc 1 222 34 is_stmt 0 view .LVU330
 1053 005c 0223     		movs	r3, #2
 1054 005e 2E93     		str	r3, [sp, #184]
 223:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 1055              		.loc 1 223 3 is_stmt 1 view .LVU331
 223:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 1056              		.loc 1 223 35 is_stmt 0 view .LVU332
 1057 0060 4FF48002 		mov	r2, #4194304
 1058 0064 2F92     		str	r2, [sp, #188]
 224:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 72;
 1059              		.loc 1 224 3 is_stmt 1 view .LVU333
 224:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 72;
 1060              		.loc 1 224 30 is_stmt 0 view .LVU334
 1061 0066 0422     		movs	r2, #4
 1062 0068 3092     		str	r2, [sp, #192]
 225:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1063              		.loc 1 225 3 is_stmt 1 view .LVU335
 225:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1064              		.loc 1 225 30 is_stmt 0 view .LVU336
 1065 006a 4822     		movs	r2, #72
 1066 006c 3192     		str	r2, [sp, #196]
 226:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 3;
 1067              		.loc 1 226 3 is_stmt 1 view .LVU337
 226:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 3;
 1068              		.loc 1 226 30 is_stmt 0 view .LVU338
 1069 006e 3293     		str	r3, [sp, #200]
 227:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1070              		.loc 1 227 3 is_stmt 1 view .LVU339
 227:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1071              		.loc 1 227 30 is_stmt 0 view .LVU340
 1072 0070 0323     		movs	r3, #3
 1073 0072 3393     		str	r3, [sp, #204]
 228:Core/Src/main.c ****   {
 1074              		.loc 1 228 3 is_stmt 1 view .LVU341
 228:Core/Src/main.c ****   {
 1075              		.loc 1 228 7 is_stmt 0 view .LVU342
 1076 0074 28A8     		add	r0, sp, #160
 1077 0076 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1078              	.LVL47:
ARM GAS  C:\msys64\tmp\ccXhMvGI.s 			page 36


 228:Core/Src/main.c ****   {
 1079              		.loc 1 228 6 view .LVU343
 1080 007a D0B9     		cbnz	r0, .L60
 234:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1081              		.loc 1 234 3 is_stmt 1 view .LVU344
 234:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1082              		.loc 1 234 31 is_stmt 0 view .LVU345
 1083 007c 0F23     		movs	r3, #15
 1084 007e 2393     		str	r3, [sp, #140]
 236:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1085              		.loc 1 236 3 is_stmt 1 view .LVU346
 236:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1086              		.loc 1 236 34 is_stmt 0 view .LVU347
 1087 0080 0221     		movs	r1, #2
 1088 0082 2491     		str	r1, [sp, #144]
 237:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1089              		.loc 1 237 3 is_stmt 1 view .LVU348
 237:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1090              		.loc 1 237 35 is_stmt 0 view .LVU349
 1091 0084 0023     		movs	r3, #0
 1092 0086 2593     		str	r3, [sp, #148]
 238:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1093              		.loc 1 238 3 is_stmt 1 view .LVU350
 238:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1094              		.loc 1 238 36 is_stmt 0 view .LVU351
 1095 0088 4FF48052 		mov	r2, #4096
 1096 008c 2692     		str	r2, [sp, #152]
 239:Core/Src/main.c **** 
 1097              		.loc 1 239 3 is_stmt 1 view .LVU352
 239:Core/Src/main.c **** 
 1098              		.loc 1 239 36 is_stmt 0 view .LVU353
 1099 008e 2793     		str	r3, [sp, #156]
 241:Core/Src/main.c ****   {
 1100              		.loc 1 241 3 is_stmt 1 view .LVU354
 241:Core/Src/main.c ****   {
 1101              		.loc 1 241 7 is_stmt 0 view .LVU355
 1102 0090 23A8     		add	r0, sp, #140
 1103 0092 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1104              	.LVL48:
 241:Core/Src/main.c ****   {
 1105              		.loc 1 241 6 view .LVU356
 1106 0096 70B9     		cbnz	r0, .L61
 245:Core/Src/main.c ****                               |RCC_PERIPHCLK_CLK48;
 1107              		.loc 1 245 3 is_stmt 1 view .LVU357
 245:Core/Src/main.c ****                               |RCC_PERIPHCLK_CLK48;
 1108              		.loc 1 245 44 is_stmt 0 view .LVU358
 1109 0098 0B4B     		ldr	r3, .L63+8
 1110 009a 0293     		str	r3, [sp, #8]
 247:Core/Src/main.c ****   PeriphClkInitStruct.I2c2ClockSelection = RCC_I2C2CLKSOURCE_PCLK1;
 1111              		.loc 1 247 3 is_stmt 1 view .LVU359
 247:Core/Src/main.c ****   PeriphClkInitStruct.I2c2ClockSelection = RCC_I2C2CLKSOURCE_PCLK1;
 1112              		.loc 1 247 44 is_stmt 0 view .LVU360
 1113 009c 0023     		movs	r3, #0
 1114 009e 1493     		str	r3, [sp, #80]
 248:Core/Src/main.c ****   PeriphClkInitStruct.Clk48ClockSelection = RCC_CLK48SOURCE_PLL;
 1115              		.loc 1 248 3 is_stmt 1 view .LVU361
 248:Core/Src/main.c ****   PeriphClkInitStruct.Clk48ClockSelection = RCC_CLK48SOURCE_PLL;
ARM GAS  C:\msys64\tmp\ccXhMvGI.s 			page 37


 1116              		.loc 1 248 42 is_stmt 0 view .LVU362
 1117 00a0 1C93     		str	r3, [sp, #112]
 249:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 1118              		.loc 1 249 3 is_stmt 1 view .LVU363
 249:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 1119              		.loc 1 249 43 is_stmt 0 view .LVU364
 1120 00a2 2193     		str	r3, [sp, #132]
 250:Core/Src/main.c ****   {
 1121              		.loc 1 250 3 is_stmt 1 view .LVU365
 250:Core/Src/main.c ****   {
 1122              		.loc 1 250 7 is_stmt 0 view .LVU366
 1123 00a4 02A8     		add	r0, sp, #8
 1124 00a6 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 1125              	.LVL49:
 250:Core/Src/main.c ****   {
 1126              		.loc 1 250 6 view .LVU367
 1127 00aa 30B9     		cbnz	r0, .L62
 254:Core/Src/main.c **** 
 1128              		.loc 1 254 1 view .LVU368
 1129 00ac 35B0     		add	sp, sp, #212
 1130              	.LCFI14:
 1131              		.cfi_remember_state
 1132              		.cfi_def_cfa_offset 4
 1133              		@ sp needed
 1134 00ae 5DF804FB 		ldr	pc, [sp], #4
 1135              	.L60:
 1136              	.LCFI15:
 1137              		.cfi_restore_state
 230:Core/Src/main.c ****   }
 1138              		.loc 1 230 5 is_stmt 1 view .LVU369
 1139 00b2 FFF7FEFF 		bl	Error_Handler
 1140              	.LVL50:
 1141              	.L61:
 243:Core/Src/main.c ****   }
 1142              		.loc 1 243 5 view .LVU370
 1143 00b6 FFF7FEFF 		bl	Error_Handler
 1144              	.LVL51:
 1145              	.L62:
 252:Core/Src/main.c ****   }
 1146              		.loc 1 252 5 view .LVU371
 1147 00ba FFF7FEFF 		bl	Error_Handler
 1148              	.LVL52:
 1149              	.L64:
 1150 00be 00BF     		.align	2
 1151              	.L63:
 1152 00c0 00380240 		.word	1073887232
 1153 00c4 00700040 		.word	1073770496
 1154 00c8 80802000 		.word	2130048
 1155              		.cfi_endproc
 1156              	.LFE149:
 1158              		.section	.text.main,"ax",%progbits
 1159              		.align	1
 1160              		.global	main
 1161              		.syntax unified
 1162              		.thumb
 1163              		.thumb_func
 1165              	main:
ARM GAS  C:\msys64\tmp\ccXhMvGI.s 			page 38


 1166              	.LFB148:
 114:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 1167              		.loc 1 114 1 view -0
 1168              		.cfi_startproc
 1169              		@ Volatile: function does not return.
 1170              		@ args = 0, pretend = 0, frame = 0
 1171              		@ frame_needed = 0, uses_anonymous_args = 0
 1172 0000 08B5     		push	{r3, lr}
 1173              	.LCFI16:
 1174              		.cfi_def_cfa_offset 8
 1175              		.cfi_offset 3, -8
 1176              		.cfi_offset 14, -4
 122:Core/Src/main.c **** 
 1177              		.loc 1 122 3 view .LVU373
 1178 0002 FFF7FEFF 		bl	HAL_Init
 1179              	.LVL53:
 129:Core/Src/main.c **** 
 1180              		.loc 1 129 3 view .LVU374
 1181 0006 FFF7FEFF 		bl	SystemClock_Config
 1182              	.LVL54:
 136:Core/Src/main.c ****   MX_USB_OTG_FS_PCD_Init();
 1183              		.loc 1 136 3 view .LVU375
 1184 000a FFF7FEFF 		bl	MX_GPIO_Init
 1185              	.LVL55:
 137:Core/Src/main.c ****   MX_USART2_UART_Init();
 1186              		.loc 1 137 3 view .LVU376
 1187 000e FFF7FEFF 		bl	MX_USB_OTG_FS_PCD_Init
 1188              	.LVL56:
 138:Core/Src/main.c ****   MX_I2C2_Init();
 1189              		.loc 1 138 3 view .LVU377
 1190 0012 FFF7FEFF 		bl	MX_USART2_UART_Init
 1191              	.LVL57:
 139:Core/Src/main.c ****   MX_SPI1_Init();
 1192              		.loc 1 139 3 view .LVU378
 1193 0016 FFF7FEFF 		bl	MX_I2C2_Init
 1194              	.LVL58:
 140:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1195              		.loc 1 140 3 view .LVU379
 1196 001a FFF7FEFF 		bl	MX_SPI1_Init
 1197              	.LVL59:
 146:Core/Src/main.c **** 
 1198              		.loc 1 146 3 view .LVU380
 1199 001e FFF7FEFF 		bl	osKernelInitialize
 1200              	.LVL60:
 166:Core/Src/main.c **** 
 1201              		.loc 1 166 3 view .LVU381
 166:Core/Src/main.c **** 
 1202              		.loc 1 166 23 is_stmt 0 view .LVU382
 1203 0022 0F4A     		ldr	r2, .L68
 1204 0024 0021     		movs	r1, #0
 1205 0026 0F48     		ldr	r0, .L68+4
 1206 0028 FFF7FEFF 		bl	osThreadNew
 1207              	.LVL61:
 166:Core/Src/main.c **** 
 1208              		.loc 1 166 21 view .LVU383
 1209 002c 0E4B     		ldr	r3, .L68+8
 1210 002e 1860     		str	r0, [r3]
ARM GAS  C:\msys64\tmp\ccXhMvGI.s 			page 39


 169:Core/Src/main.c **** 
 1211              		.loc 1 169 3 is_stmt 1 view .LVU384
 169:Core/Src/main.c **** 
 1212              		.loc 1 169 20 is_stmt 0 view .LVU385
 1213 0030 0E4A     		ldr	r2, .L68+12
 1214 0032 0021     		movs	r1, #0
 1215 0034 0E48     		ldr	r0, .L68+16
 1216 0036 FFF7FEFF 		bl	osThreadNew
 1217              	.LVL62:
 169:Core/Src/main.c **** 
 1218              		.loc 1 169 18 view .LVU386
 1219 003a 0E4B     		ldr	r3, .L68+20
 1220 003c 1860     		str	r0, [r3]
 172:Core/Src/main.c **** 
 1221              		.loc 1 172 3 is_stmt 1 view .LVU387
 172:Core/Src/main.c **** 
 1222              		.loc 1 172 20 is_stmt 0 view .LVU388
 1223 003e 0E4A     		ldr	r2, .L68+24
 1224 0040 0021     		movs	r1, #0
 1225 0042 0E48     		ldr	r0, .L68+28
 1226 0044 FFF7FEFF 		bl	osThreadNew
 1227              	.LVL63:
 172:Core/Src/main.c **** 
 1228              		.loc 1 172 18 view .LVU389
 1229 0048 0D4B     		ldr	r3, .L68+32
 1230 004a 1860     		str	r0, [r3]
 175:Core/Src/main.c **** 
 1231              		.loc 1 175 3 is_stmt 1 view .LVU390
 175:Core/Src/main.c **** 
 1232              		.loc 1 175 20 is_stmt 0 view .LVU391
 1233 004c 0D4A     		ldr	r2, .L68+36
 1234 004e 0021     		movs	r1, #0
 1235 0050 0D48     		ldr	r0, .L68+40
 1236 0052 FFF7FEFF 		bl	osThreadNew
 1237              	.LVL64:
 175:Core/Src/main.c **** 
 1238              		.loc 1 175 18 view .LVU392
 1239 0056 0D4B     		ldr	r3, .L68+44
 1240 0058 1860     		str	r0, [r3]
 186:Core/Src/main.c **** 
 1241              		.loc 1 186 3 is_stmt 1 view .LVU393
 1242 005a FFF7FEFF 		bl	osKernelStart
 1243              	.LVL65:
 1244              	.L66:
 191:Core/Src/main.c ****   {
 1245              		.loc 1 191 3 discriminator 1 view .LVU394
 196:Core/Src/main.c ****   /* USER CODE END 3 */
 1246              		.loc 1 196 3 discriminator 1 view .LVU395
 191:Core/Src/main.c ****   {
 1247              		.loc 1 191 9 discriminator 1 view .LVU396
 1248 005e FEE7     		b	.L66
 1249              	.L69:
 1250              		.align	2
 1251              	.L68:
 1252 0060 00000000 		.word	.LANCHOR4
 1253 0064 00000000 		.word	StartDefaultTask
 1254 0068 00000000 		.word	.LANCHOR5
ARM GAS  C:\msys64\tmp\ccXhMvGI.s 			page 40


 1255 006c 00000000 		.word	.LANCHOR6
 1256 0070 00000000 		.word	Sensor_Reading_Task
 1257 0074 00000000 		.word	.LANCHOR7
 1258 0078 00000000 		.word	.LANCHOR8
 1259 007c 00000000 		.word	StartTask03
 1260 0080 00000000 		.word	.LANCHOR9
 1261 0084 00000000 		.word	.LANCHOR10
 1262 0088 00000000 		.word	StartTask04
 1263 008c 00000000 		.word	.LANCHOR11
 1264              		.cfi_endproc
 1265              	.LFE148:
 1267              		.global	myTask04_attributes
 1268              		.section	.rodata.str1.4,"aMS",%progbits,1
 1269              		.align	2
 1270              	.LC1:
 1271 0000 6D795461 		.ascii	"myTask04\000"
 1271      736B3034 
 1271      00
 1272              		.global	myTask04Handle
 1273              		.global	myTask03_attributes
 1274 0009 000000   		.align	2
 1275              	.LC2:
 1276 000c 6D795461 		.ascii	"myTask03\000"
 1276      736B3033 
 1276      00
 1277              		.global	myTask03Handle
 1278              		.global	myTask02_attributes
 1279 0015 000000   		.align	2
 1280              	.LC3:
 1281 0018 6D795461 		.ascii	"myTask02\000"
 1281      736B3032 
 1281      00
 1282              		.global	myTask02Handle
 1283              		.global	defaultTask_attributes
 1284 0021 000000   		.align	2
 1285              	.LC4:
 1286 0024 64656661 		.ascii	"defaultTask\000"
 1286      756C7454 
 1286      61736B00 
 1287              		.global	defaultTaskHandle
 1288              		.global	hpcd_USB_OTG_FS
 1289              		.global	huart2
 1290              		.global	hspi1
 1291              		.global	hi2c2
 1292              		.section	.bss.defaultTaskHandle,"aw",%nobits
 1293              		.align	2
 1294              		.set	.LANCHOR5,. + 0
 1297              	defaultTaskHandle:
 1298 0000 00000000 		.space	4
 1299              		.section	.bss.hi2c2,"aw",%nobits
 1300              		.align	2
 1301              		.set	.LANCHOR2,. + 0
 1304              	hi2c2:
 1305 0000 00000000 		.space	76
 1305      00000000 
 1305      00000000 
 1305      00000000 
ARM GAS  C:\msys64\tmp\ccXhMvGI.s 			page 41


 1305      00000000 
 1306              		.section	.bss.hpcd_USB_OTG_FS,"aw",%nobits
 1307              		.align	2
 1308              		.set	.LANCHOR0,. + 0
 1311              	hpcd_USB_OTG_FS:
 1312 0000 00000000 		.space	1028
 1312      00000000 
 1312      00000000 
 1312      00000000 
 1312      00000000 
 1313              		.section	.bss.hspi1,"aw",%nobits
 1314              		.align	2
 1315              		.set	.LANCHOR3,. + 0
 1318              	hspi1:
 1319 0000 00000000 		.space	100
 1319      00000000 
 1319      00000000 
 1319      00000000 
 1319      00000000 
 1320              		.section	.bss.huart2,"aw",%nobits
 1321              		.align	2
 1322              		.set	.LANCHOR1,. + 0
 1325              	huart2:
 1326 0000 00000000 		.space	132
 1326      00000000 
 1326      00000000 
 1326      00000000 
 1326      00000000 
 1327              		.section	.bss.myTask02Handle,"aw",%nobits
 1328              		.align	2
 1329              		.set	.LANCHOR7,. + 0
 1332              	myTask02Handle:
 1333 0000 00000000 		.space	4
 1334              		.section	.bss.myTask03Handle,"aw",%nobits
 1335              		.align	2
 1336              		.set	.LANCHOR9,. + 0
 1339              	myTask03Handle:
 1340 0000 00000000 		.space	4
 1341              		.section	.bss.myTask04Handle,"aw",%nobits
 1342              		.align	2
 1343              		.set	.LANCHOR11,. + 0
 1346              	myTask04Handle:
 1347 0000 00000000 		.space	4
 1348              		.section	.rodata.defaultTask_attributes,"a"
 1349              		.align	2
 1350              		.set	.LANCHOR4,. + 0
 1353              	defaultTask_attributes:
 1354 0000 24000000 		.word	.LC4
 1355 0004 00000000 		.space	16
 1355      00000000 
 1355      00000000 
 1355      00000000 
 1356 0014 00020000 		.word	512
 1357 0018 18000000 		.word	24
 1358 001c 00000000 		.space	8
 1358      00000000 
 1359              		.section	.rodata.myTask02_attributes,"a"
ARM GAS  C:\msys64\tmp\ccXhMvGI.s 			page 42


 1360              		.align	2
 1361              		.set	.LANCHOR6,. + 0
 1364              	myTask02_attributes:
 1365 0000 18000000 		.word	.LC3
 1366 0004 00000000 		.space	16
 1366      00000000 
 1366      00000000 
 1366      00000000 
 1367 0014 00020000 		.word	512
 1368 0018 08000000 		.word	8
 1369 001c 00000000 		.space	8
 1369      00000000 
 1370              		.section	.rodata.myTask03_attributes,"a"
 1371              		.align	2
 1372              		.set	.LANCHOR8,. + 0
 1375              	myTask03_attributes:
 1376 0000 0C000000 		.word	.LC2
 1377 0004 00000000 		.space	16
 1377      00000000 
 1377      00000000 
 1377      00000000 
 1378 0014 00020000 		.word	512
 1379 0018 08000000 		.word	8
 1380 001c 00000000 		.space	8
 1380      00000000 
 1381              		.section	.rodata.myTask04_attributes,"a"
 1382              		.align	2
 1383              		.set	.LANCHOR10,. + 0
 1386              	myTask04_attributes:
 1387 0000 00000000 		.word	.LC1
 1388 0004 00000000 		.space	16
 1388      00000000 
 1388      00000000 
 1388      00000000 
 1389 0014 00020000 		.word	512
 1390 0018 08000000 		.word	8
 1391 001c 00000000 		.space	8
 1391      00000000 
 1392              		.text
 1393              	.Letext0:
 1394              		.file 3 "c:\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\machine\\_default_typ
 1395              		.file 4 "c:\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\sys\\_stdint.h"
 1396              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 1397              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 1398              		.file 7 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 1399              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc_ex.h"
 1400              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc.h"
 1401              		.file 10 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_gpio.h"
 1402              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 1403              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_i2c.h"
 1404              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_spi.h"
 1405              		.file 14 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim.h"
 1406              		.file 15 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_uart.h"
 1407              		.file 16 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_usb.h"
 1408              		.file 17 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_pcd.h"
 1409              		.file 18 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
 1410              		.file 19 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
ARM GAS  C:\msys64\tmp\ccXhMvGI.s 			page 43


 1411              		.file 20 "Drivers/Sensors/Inc/ds18b20.h"
 1412              		.file 21 "c:\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\stdio.h"
 1413              		.file 22 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_i2c_ex.h"
 1414              		.file 23 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_pwr.h"
 1415              		.file 24 "<built-in>"
ARM GAS  C:\msys64\tmp\ccXhMvGI.s 			page 44


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\msys64\tmp\ccXhMvGI.s:20     .text.MX_GPIO_Init:00000000 $t
C:\msys64\tmp\ccXhMvGI.s:25     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\msys64\tmp\ccXhMvGI.s:390    .text.MX_GPIO_Init:000001a8 $d
C:\msys64\tmp\ccXhMvGI.s:402    .text.StartDefaultTask:00000000 $t
C:\msys64\tmp\ccXhMvGI.s:408    .text.StartDefaultTask:00000000 StartDefaultTask
C:\msys64\tmp\ccXhMvGI.s:435    .text.StartTask03:00000000 $t
C:\msys64\tmp\ccXhMvGI.s:441    .text.StartTask03:00000000 StartTask03
C:\msys64\tmp\ccXhMvGI.s:468    .text.StartTask04:00000000 $t
C:\msys64\tmp\ccXhMvGI.s:474    .text.StartTask04:00000000 StartTask04
C:\msys64\tmp\ccXhMvGI.s:502    .rodata.Sensor_Reading_Task.str1.4:00000000 $d
C:\msys64\tmp\ccXhMvGI.s:506    .text.Sensor_Reading_Task:00000000 $t
C:\msys64\tmp\ccXhMvGI.s:512    .text.Sensor_Reading_Task:00000000 Sensor_Reading_Task
C:\msys64\tmp\ccXhMvGI.s:554    .text.Sensor_Reading_Task:00000024 $d
C:\msys64\tmp\ccXhMvGI.s:559    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\msys64\tmp\ccXhMvGI.s:565    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\msys64\tmp\ccXhMvGI.s:599    .text.HAL_TIM_PeriodElapsedCallback:00000014 $d
C:\msys64\tmp\ccXhMvGI.s:604    .text.Error_Handler:00000000 $t
C:\msys64\tmp\ccXhMvGI.s:610    .text.Error_Handler:00000000 Error_Handler
C:\msys64\tmp\ccXhMvGI.s:642    .text.MX_USB_OTG_FS_PCD_Init:00000000 $t
C:\msys64\tmp\ccXhMvGI.s:647    .text.MX_USB_OTG_FS_PCD_Init:00000000 MX_USB_OTG_FS_PCD_Init
C:\msys64\tmp\ccXhMvGI.s:709    .text.MX_USB_OTG_FS_PCD_Init:00000030 $d
C:\msys64\tmp\ccXhMvGI.s:714    .text.MX_USART2_UART_Init:00000000 $t
C:\msys64\tmp\ccXhMvGI.s:719    .text.MX_USART2_UART_Init:00000000 MX_USART2_UART_Init
C:\msys64\tmp\ccXhMvGI.s:780    .text.MX_USART2_UART_Init:00000030 $d
C:\msys64\tmp\ccXhMvGI.s:786    .text.MX_I2C2_Init:00000000 $t
C:\msys64\tmp\ccXhMvGI.s:791    .text.MX_I2C2_Init:00000000 MX_I2C2_Init
C:\msys64\tmp\ccXhMvGI.s:873    .text.MX_I2C2_Init:00000048 $d
C:\msys64\tmp\ccXhMvGI.s:880    .text.MX_SPI1_Init:00000000 $t
C:\msys64\tmp\ccXhMvGI.s:885    .text.MX_SPI1_Init:00000000 MX_SPI1_Init
C:\msys64\tmp\ccXhMvGI.s:961    .text.MX_SPI1_Init:00000040 $d
C:\msys64\tmp\ccXhMvGI.s:967    .text.SystemClock_Config:00000000 $t
C:\msys64\tmp\ccXhMvGI.s:973    .text.SystemClock_Config:00000000 SystemClock_Config
C:\msys64\tmp\ccXhMvGI.s:1152   .text.SystemClock_Config:000000c0 $d
C:\msys64\tmp\ccXhMvGI.s:1159   .text.main:00000000 $t
C:\msys64\tmp\ccXhMvGI.s:1165   .text.main:00000000 main
C:\msys64\tmp\ccXhMvGI.s:1252   .text.main:00000060 $d
C:\msys64\tmp\ccXhMvGI.s:1386   .rodata.myTask04_attributes:00000000 myTask04_attributes
C:\msys64\tmp\ccXhMvGI.s:1269   .rodata.str1.4:00000000 $d
C:\msys64\tmp\ccXhMvGI.s:1346   .bss.myTask04Handle:00000000 myTask04Handle
C:\msys64\tmp\ccXhMvGI.s:1375   .rodata.myTask03_attributes:00000000 myTask03_attributes
C:\msys64\tmp\ccXhMvGI.s:1339   .bss.myTask03Handle:00000000 myTask03Handle
C:\msys64\tmp\ccXhMvGI.s:1364   .rodata.myTask02_attributes:00000000 myTask02_attributes
C:\msys64\tmp\ccXhMvGI.s:1332   .bss.myTask02Handle:00000000 myTask02Handle
C:\msys64\tmp\ccXhMvGI.s:1353   .rodata.defaultTask_attributes:00000000 defaultTask_attributes
C:\msys64\tmp\ccXhMvGI.s:1297   .bss.defaultTaskHandle:00000000 defaultTaskHandle
C:\msys64\tmp\ccXhMvGI.s:1311   .bss.hpcd_USB_OTG_FS:00000000 hpcd_USB_OTG_FS
C:\msys64\tmp\ccXhMvGI.s:1325   .bss.huart2:00000000 huart2
C:\msys64\tmp\ccXhMvGI.s:1318   .bss.hspi1:00000000 hspi1
C:\msys64\tmp\ccXhMvGI.s:1304   .bss.hi2c2:00000000 hi2c2
C:\msys64\tmp\ccXhMvGI.s:1293   .bss.defaultTaskHandle:00000000 $d
C:\msys64\tmp\ccXhMvGI.s:1300   .bss.hi2c2:00000000 $d
C:\msys64\tmp\ccXhMvGI.s:1307   .bss.hpcd_USB_OTG_FS:00000000 $d
C:\msys64\tmp\ccXhMvGI.s:1314   .bss.hspi1:00000000 $d
C:\msys64\tmp\ccXhMvGI.s:1321   .bss.huart2:00000000 $d
C:\msys64\tmp\ccXhMvGI.s:1328   .bss.myTask02Handle:00000000 $d
ARM GAS  C:\msys64\tmp\ccXhMvGI.s 			page 45


C:\msys64\tmp\ccXhMvGI.s:1335   .bss.myTask03Handle:00000000 $d
C:\msys64\tmp\ccXhMvGI.s:1342   .bss.myTask04Handle:00000000 $d
C:\msys64\tmp\ccXhMvGI.s:1349   .rodata.defaultTask_attributes:00000000 $d
C:\msys64\tmp\ccXhMvGI.s:1360   .rodata.myTask02_attributes:00000000 $d
C:\msys64\tmp\ccXhMvGI.s:1371   .rodata.myTask03_attributes:00000000 $d
C:\msys64\tmp\ccXhMvGI.s:1382   .rodata.myTask04_attributes:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
osDelay
__aeabi_f2d
ds18b20_output
printf
HAL_Delay
HAL_IncTick
HAL_PCD_Init
HAL_UART_Init
HAL_I2C_Init
HAL_I2CEx_ConfigAnalogFilter
HAL_I2CEx_ConfigDigitalFilter
HAL_SPI_Init
memset
HAL_PWR_EnableBkUpAccess
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
osKernelInitialize
osThreadNew
osKernelStart
